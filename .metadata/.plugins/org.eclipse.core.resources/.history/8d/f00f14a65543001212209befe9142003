package com.jamiltron.homunculus.model;

import com.badlogic.gdx.math.Vector2;
import com.badlogic.gdx.utils.Array;
import com.jamiltron.homunculus.model.Color;
import java.util.Map;
import java.util.HashMap;
import java.util.Random;

public class World {
  private Color[] colors = Color.values();
  private Array<Homunculus> homunculi = new Array<Homunculus>();
  private Array<Spell> setSpells = new Array<Spell>();
  private Spell activeSpell = null;
  private Random random = new Random(System.currentTimeMillis());
  
  public World(int numHomunculi) {
    createWorld(numHomunculi);
  }
  
  public Array<Homunculus> getHomunculi() {
    return homunculi;
  }
  
  public Spell getActiveSpell() {
    return activeSpell;
  }
  
  public Array<Spell> getSetSpells() {
    return setSpells;
  }
  
  public Spell generateSpell() {
    int i = colors.length;
    Color color1 = colors[random.nextInt(i)];
    Color color2 = colors[random.nextInt(i)];
    Component component1 = new Component(5, 21, color1);
    Component component2 = new Component(6, 21, color2);
    activeSpell = new Spell(component1, component2);
    return activeSpell;
  }
  
  public void restSpell() {
    setSpells.add(activeSpell);
    activeSpell = null;
  }
  
  private void createWorld(int numHomunculi) {
    Boolean inserted;
    Color color;
    float x, y;
    Map<Vector2, Boolean> places = new HashMap<Vector2, Boolean>();
    Vector2 vector = new Vector2(0, 0);
    
    // create random homunculi
    for (int i = 0; i < numHomunculi; i++) {
      inserted = false;
      do {
        x = (float)(random.nextInt(8)  + 2);
        y = (float)(random.nextInt(13) + 2);
        vector.set(x, y);

        if (places.get(vector) == null) {
          places.put(vector, true);
          inserted = true;
          color = colors[i % 3];
          homunculi.add(new Homunculus((float)x, (float)y, color));
        }
      } while (!inserted);
    }
  }
}
