package com.jamiltron.homunculus.model;

public class Spell {
  private final Component component1;
  private final Component component2;
  private float pauseTime;
  
  public Spell(Component p1, Component p2) {
    component1 = p1;
    component2 = p2;
    pauseTime = 0;
  }
  
  public Component getComponent1() {
    return component1;
  }
  
  public Component getComponent2() {
    return component2;
  }
  
  public float top() {
    return topComponent().pos.y;
  }
  
  public float bottom() {
    return bottomComponent().pos.y - 1f;
  }
  
  public float left() {
    return leftComponent().pos.x;
  }
  
  public Component bottomComponent() {
    if (component1.pos.y <= component2.pos.y) {
      return component1;
    } else {
      return component2;
    }
  }
  
  public Component topComponent() {
    if (component1.pos.y >= component2.pos.y) {
      return component1;
    } else {
      return component2;
    }
  }
  
  public Component leftComponent() {
    if (component1.pos.x <= component2.pos.x) {
      return component1;
    } else {
      return component2;
    }
  }
  
  public Component rightComponent() {
    if (component1.pos.x >= component2.pos.x) {
      return component1;
    } else {
      return component2;
    }
  }
  
  public float getPauseTime() {
    return pauseTime;
  }
  
  public void update(Float dt) {
    pauseTime -= dt;
    if (pauseTime < 0) {
      pauseTime = 0;
    }
    component1.update(1f);
    component2.update(1f);
  }
  
  public void setPauseTime(float pt) {
    pauseTime = pt;
  }
  
  public void setVel(Float x, Float y) {
    if (x != null) {
      component1.vel.x = x;
      component2.vel.x = x;
    }
    
    if (y != null) {
      component1.vel.y = y;
      component2.vel.y = y;
    }
  }

}
