android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.a.a:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> b
    int FEEDBACK_ALL_MASK -> a
    126:126:java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> a
    138:138:android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> b
    151:151:java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> c
    164:164:boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> d
    177:177:java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> e
    189:216:java.lang.String feedbackTypeToString(int) -> a
    228:232:java.lang.String flagToString(int) -> b
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.a.b:
    65:65:boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> a
    70:70:java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> b
    75:75:java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> c
    80:80:android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> d
    85:85:java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> e
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.a.c:
    41:41:boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> a
    45:45:java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> b
    49:49:java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> c
    53:53:android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> d
    57:57:java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> e
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.a.d:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> c
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> d
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> a
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> b
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> e
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.a.e:
    29:29:boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> a
    33:33:java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> b
    37:37:java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> c
    41:41:android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> d
    45:45:java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> e
android.support.v4.app.ActivityCompat -> android.support.v4.app.a:
    61:65:boolean invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.b:
    29:30:void invalidateOptionsMenu(android.app.Activity) -> a
    34:35:void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.c:
    java.lang.String TAG -> a
    android.support.v4.app.FragmentManagerImpl mManager -> b
    int OP_NULL -> c
    int OP_ADD -> d
    int OP_REPLACE -> e
    int OP_REMOVE -> f
    int OP_HIDE -> g
    int OP_SHOW -> h
    int OP_DETACH -> i
    int OP_ATTACH -> j
    android.support.v4.app.BackStackRecord$Op mHead -> k
    android.support.v4.app.BackStackRecord$Op mTail -> l
    int mNumOp -> m
    int mEnterAnim -> n
    int mExitAnim -> o
    int mPopEnterAnim -> p
    int mPopExitAnim -> q
    int mTransition -> r
    int mTransitionStyle -> s
    boolean mAddToBackStack -> t
    boolean mAllowAddToBackStack -> u
    java.lang.String mName -> v
    boolean mCommitted -> w
    int mIndex -> x
    int mBreadCrumbTitleRes -> y
    java.lang.CharSequence mBreadCrumbTitleText -> z
    int mBreadCrumbShortTitleRes -> A
    java.lang.CharSequence mBreadCrumbShortTitleText -> B
    221:233:java.lang.String toString() -> toString
    237:238:void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
    241:331:void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    338:338:int getId() -> a
    342:342:int getBreadCrumbTitleRes() -> b
    346:346:int getBreadCrumbShortTitleRes() -> c
    350:353:java.lang.CharSequence getBreadCrumbTitle() -> d
    357:360:java.lang.CharSequence getBreadCrumbShortTitle() -> e
    364:376:void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    379:380:android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    384:385:android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    389:390:android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    394:418:void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    421:421:android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> b
    425:430:android.support.v4.app.FragmentTransaction replace$324a6018(int,android.support.v4.app.Fragment) -> c
    434:439:android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    443:448:android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> b
    452:457:android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> c
    461:466:android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> d
    470:475:android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> e
    479:479:android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> a
    484:488:android.support.v4.app.FragmentTransaction setCustomAnimations$366cc4e1(int,int) -> b
    492:493:android.support.v4.app.FragmentTransaction setTransition(int) -> a
    497:498:android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> b
    502:508:android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> a
    512:512:boolean isAddToBackStackAllowed() -> f
    516:521:android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> g
    525:527:android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> c
    531:533:android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> a
    537:539:android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> d
    543:545:android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> b
    549:571:void bumpBackStackNesting(int) -> e
    574:574:int commit() -> h
    578:578:int commitAllowingStateLoss() -> i
    582:596:int commitInternal(boolean) -> b
    600:688:void run() -> run
    691:772:void popFromBackStack(boolean) -> a
    775:775:java.lang.String getName() -> j
    779:779:int getTransition() -> l
    783:783:int getTransitionStyle() -> m
    787:787:boolean isEmpty() -> k
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.d:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    96:138:android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    142:142:int describeContents() -> describeContents
    146:155:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.e:
    160:160:android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    164:164:android.support.v4.app.BackStackState[] newArray(int) -> a
    158:158:java.lang.Object[] newArray(int) -> newArray
    158:158:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.f:
    int STYLE_NORMAL -> a
    int STYLE_NO_TITLE -> b
    int STYLE_NO_FRAME -> c
    int STYLE_NO_INPUT -> d
    java.lang.String SAVED_DIALOG_STATE_TAG -> ai
    java.lang.String SAVED_STYLE -> aj
    java.lang.String SAVED_THEME -> ak
    java.lang.String SAVED_CANCELABLE -> al
    java.lang.String SAVED_SHOWS_DIALOG -> am
    java.lang.String SAVED_BACK_STACK_ID -> an
    int mStyle -> e
    int mTheme -> f
    boolean mCancelable -> g
    boolean mShowsDialog -> h
    int mBackStackId -> i
    android.app.Dialog mDialog -> j
    boolean mViewDestroyed -> k
    boolean mDismissed -> l
    boolean mShownByMe -> m
    102:109:void setStyle(int,int) -> a
    123:128:void show(android.support.v4.app.FragmentManager,java.lang.String) -> a
    140:145:int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> a
    155:156:void dismiss() -> z
    165:166:void dismissAllowingStateLoss() -> A
    169:192:void dismissInternal(boolean) -> c
    195:195:android.app.Dialog getDialog() -> B
    199:199:int getTheme() -> C
    212:214:void setCancelable(boolean) -> d
    220:220:boolean isCancelable() -> D
    241:242:void setShowsDialog(boolean) -> e
    248:248:boolean getShowsDialog() -> E
    253:259:void onAttach(android.app.Activity) -> a
    263:270:void onDetach() -> a
    274:286:void onCreate(android.os.Bundle) -> a
    291:310:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    337:337:android.app.Dialog onCreateDialog$5709b310() -> F
    341:341:void onCancel(android.content.DialogInterface) -> onCancel
    344:351:void onDismiss(android.content.DialogInterface) -> onDismiss
    355:378:void onActivityCreated(android.os.Bundle) -> c
    382:387:void onStart() -> b
    391:413:void onSaveInstanceState(android.os.Bundle) -> d
    417:421:void onStop() -> c
    428:437:void onDestroyView() -> d
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> a
    int INITIALIZING -> n
    int CREATED -> o
    int ACTIVITY_CREATED -> p
    int STOPPED -> q
    int STARTED -> r
    int RESUMED -> s
    int mState -> t
    android.view.View mAnimatingAway -> u
    int mStateAfterAnimating -> v
    android.os.Bundle mSavedFragmentState -> w
    android.util.SparseArray mSavedViewState -> x
    int mIndex -> y
    java.lang.String mWho -> z
    android.os.Bundle mArguments -> A
    android.support.v4.app.Fragment mTarget -> B
    int mTargetIndex -> C
    int mTargetRequestCode -> D
    boolean mAdded -> E
    boolean mRemoving -> F
    boolean mResumed -> G
    boolean mFromLayout -> H
    boolean mInLayout -> I
    boolean mRestored -> J
    int mBackStackNesting -> K
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> L
    android.support.v4.app.FragmentActivity mActivity -> M
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> N
    android.support.v4.app.Fragment mParentFragment -> O
    int mFragmentId -> P
    int mContainerId -> Q
    java.lang.String mTag -> R
    boolean mHidden -> S
    boolean mDetached -> T
    boolean mRetainInstance -> U
    boolean mRetaining -> V
    boolean mHasMenu -> W
    boolean mMenuVisible -> X
    boolean mCalled -> Y
    int mNextAnim -> Z
    android.view.ViewGroup mContainer -> aa
    android.view.View mView -> ab
    android.view.View mInnerView -> ac
    boolean mDeferStart -> ad
    boolean mUserVisibleHint -> ae
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> af
    boolean mLoadersStarted -> ag
    boolean mCheckedForLoaderManager -> ah
    369:369:android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    388:409:android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    416:426:void restoreViewState$79e5e33f() -> e
    429:435:void setIndex(int,android.support.v4.app.Fragment) -> a
    438:438:boolean isInBackStack() -> f
    445:445:boolean equals(java.lang.Object) -> equals
    452:452:int hashCode() -> hashCode
    457:472:java.lang.String toString() -> toString
    481:481:int getId() -> z
    488:488:java.lang.String getTag() -> A
    499:503:void setArguments(android.os.Bundle) -> h
    510:510:android.os.Bundle getArguments() -> B
    522:527:void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> a
    541:543:void setTargetFragment(android.support.v4.app.Fragment,int) -> a
    549:549:android.support.v4.app.Fragment getTargetFragment() -> C
    556:556:int getTargetRequestCode() -> D
    563:563:android.support.v4.app.FragmentActivity getActivity() -> E
    570:573:android.content.res.Resources getResources() -> g
    583:583:java.lang.CharSequence getText(int) -> a
    593:593:java.lang.String getString(int) -> b
    606:606:java.lang.String getString(int,java.lang.Object[]) -> a
    620:620:android.support.v4.app.FragmentManager getFragmentManager() -> F
    628:640:android.support.v4.app.FragmentManager getChildFragmentManager() -> G
    648:648:android.support.v4.app.Fragment getParentFragment() -> H
    655:655:boolean isAdded() -> I
    664:664:boolean isDetached() -> h
    673:673:boolean isRemoving() -> J
    684:684:boolean isInLayout() -> K
    692:692:boolean isResumed() -> L
    701:701:boolean isVisible() -> M
    713:713:boolean isHidden() -> N
    724:724:void onHiddenChanged$1385ff() -> i
    741:746:void setRetainInstance(boolean) -> c
    749:749:boolean getRetainInstance() -> O
    760:766:void setHasOptionsMenu(boolean) -> d
    778:784:void setMenuVisibility(boolean) -> a
    800:805:void setUserVisibleHint(boolean) -> b
    812:812:boolean getUserVisibleHint() -> P
    819:827:android.support.v4.app.LoaderManager getLoaderManager() -> Q
    835:839:void startActivity(android.content.Intent) -> a
    846:850:void startActivityForResult(android.content.Intent,int) -> a
    867:867:void onActivityResult$6eb84b52() -> j
    875:875:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    921:922:void onInflate$423a76cd() -> k
    929:930:void onAttach(android.app.Activity) -> a
    936:936:android.view.animation.Animation onCreateAnimation$24236ca7() -> l
    954:955:void onCreate(android.os.Bundle) -> a
    978:978:android.view.View onCreateView$469ccb8a() -> m
    992:992:void onViewCreated(android.view.View,android.os.Bundle) -> a
    1001:1001:android.view.View getView() -> n
    1018:1019:void onActivityCreated(android.os.Bundle) -> c
    1033:1034:void onViewStateRestored$79e5e33f() -> R
    1042:1054:void onStart() -> b
    1063:1064:void onResume() -> S
    1086:1086:void onSaveInstanceState(android.os.Bundle) -> d
    1089:1090:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1098:1099:void onPause() -> T
    1107:1108:void onStop() -> c
    1111:1112:void onLowMemory() -> onLowMemory
    1124:1125:void onDestroyView() -> d
    1132:1142:void onDestroy() -> U
    1151:1171:void initState() -> o
    1178:1179:void onDetach() -> a
    1195:1195:void onCreateOptionsMenu$761f6f96() -> V
    1212:1212:void onPrepareOptionsMenu$1eec55bd() -> W
    1222:1222:void onDestroyOptionsMenu() -> p
    1243:1243:boolean onOptionsItemSelected$1b88ab4c() -> X
    1254:1254:void onOptionsMenuClosed$1eec55bd() -> Y
    1274:1275:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    1288:1289:void registerForContextMenu(android.view.View) -> a
    1299:1300:void unregisterForContextMenu(android.view.View) -> b
    1320:1320:boolean onContextItemSelected$1b88ab4c() -> Z
    1333:1407:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    1410:1416:android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> a
    1420:1430:void instantiateChildFragmentManager() -> aa
    1433:1453:void performCreate(android.os.Bundle) -> e
    1457:1460:android.view.View performCreateView$469ccb8a() -> q
    1464:1476:void performActivityCreated(android.os.Bundle) -> f
    1479:1495:void performStart() -> r
    1498:1512:void performResume() -> s
    1515:1519:void performConfigurationChanged(android.content.res.Configuration) -> a
    1522:1526:void performLowMemory() -> t
    1538:1548:boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    1552:1562:boolean performPrepareOptionsMenu(android.view.Menu) -> a
    1566:1578:boolean performOptionsItemSelected(android.view.MenuItem) -> a
    1582:1592:boolean performContextItemSelected(android.view.MenuItem) -> b
    1596:1604:void performOptionsMenuClosed(android.view.Menu) -> b
    1607:1614:void performSaveInstanceState(android.os.Bundle) -> g
    1617:1626:void performPause() -> u
    1629:1638:void performStop() -> v
    1641:1658:void performReallyStop() -> w
    1661:1673:void performDestroyView() -> x
    1676:1685:void performDestroy() -> y
android.support.v4.app.Fragment$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment this$0 -> a
    1424:1427:android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.h:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    314:314:int describeContents() -> describeContents
    319:320:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.i:
    325:325:android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    329:329:android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    323:323:java.lang.Object[] newArray(int) -> newArray
    323:323:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> q
    java.lang.String FRAGMENTS_TAG -> a
    int HONEYCOMB -> r
    int MSG_REALLY_STOPPED -> b
    int MSG_RESUME_PENDING -> c
    android.os.Handler mHandler -> d
    android.support.v4.app.FragmentManagerImpl mFragments -> e
    android.support.v4.app.FragmentContainer mContainer -> f
    boolean mCreated -> g
    boolean mResumed -> h
    boolean mStopped -> i
    boolean mReallyStopped -> j
    boolean mRetaining -> k
    boolean mOptionsMenuInvalidated -> l
    boolean mCheckedForLoaderManager -> m
    boolean mLoadersStarted -> n
    java.util.HashMap mAllLoaderManagers -> o
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> p
    147:167:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    174:177:void onBackPressed() -> onBackPressed
    184:186:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    193:211:void onCreate(android.os.Bundle) -> onCreate
    218:229:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    237:312:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    320:328:void onDestroy() -> onDestroy
    335:344:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    352:354:void onLowMemory() -> onLowMemory
    361:373:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    382:388:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    395:402:void onPause() -> onPause
    416:418:void onNewIntent(android.content.Intent) -> onNewIntent
    431:435:void onResume() -> onResume
    442:446:void onPostResume() -> onPostResume
    455:456:void onResumeFragments() -> a
    463:473:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    483:518:java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    526:531:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    539:580:void onStart() -> onStart
    587:593:void onStop() -> onStop
    604:604:java.lang.Object onRetainCustomNonConfigurationInstance() -> d
    612:614:java.lang.Object getLastCustomNonConfigurationInstance() -> e
    623:633:void supportInvalidateOptionsMenu() -> b
    646:670:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    673:735:java.lang.String viewToString(android.view.View) -> a
    739:757:void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    760:766:void doReallyStop(boolean) -> a
    776:788:void onReallyStop() -> f
    798:798:void onAttachFragment$65850823() -> c
    805:805:android.support.v4.app.FragmentManager getSupportFragmentManager() -> g
    814:818:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    825:833:void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> a
    837:844:void invalidateSupportFragment(java.lang.String) -> a
    854:859:android.support.v4.app.LoaderManager getSupportLoaderManager() -> h
    863:875:android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.j:
    android.support.v4.app.FragmentActivity this$0 -> a
    84:97:void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.k:
    android.support.v4.app.FragmentActivity this$0 -> a
    104:104:android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.l:
    int[] Fragment -> a
    int Fragment_id -> b
    int Fragment_name -> c
    int Fragment_tag -> d
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.m:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.n:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.o:
    int POP_BACK_STACK_INCLUSIVE -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    139:139:android.support.v4.app.FragmentTransaction openTransaction() -> f
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void popBackStack() -> c
    boolean popBackStackImmediate() -> d
    void popBackStack(java.lang.String,int) -> a
    boolean popBackStackImmediate(java.lang.String,int) -> b
    void popBackStack$255f295(int) -> b
    boolean popBackStackImmediate(int,int) -> a
    int getBackStackEntryCount() -> e
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> c
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> a
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> b
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    334:335:void enableDebugLogging(boolean) -> a
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.p:
    int getId() -> a
    java.lang.String getName() -> j
    int getBreadCrumbTitleRes() -> b
    int getBreadCrumbShortTitleRes() -> c
    java.lang.CharSequence getBreadCrumbTitle() -> d
    java.lang.CharSequence getBreadCrumbShortTitle() -> e
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.q:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.r:
    boolean DEBUG -> b
    java.lang.String TAG -> c
    boolean HONEYCOMB -> d
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> e
    java.lang.String TARGET_STATE_TAG -> f
    java.lang.String VIEW_STATE_TAG -> g
    java.lang.String USER_VISIBLE_HINT_TAG -> h
    java.util.ArrayList mPendingActions -> i
    java.lang.Runnable[] mTmpActions -> j
    boolean mExecutingActions -> k
    java.util.ArrayList mActive -> l
    java.util.ArrayList mAdded -> m
    java.util.ArrayList mAvailIndices -> n
    java.util.ArrayList mBackStack -> o
    java.util.ArrayList mCreatedMenus -> p
    java.util.ArrayList mBackStackIndices -> q
    java.util.ArrayList mAvailBackStackIndices -> r
    java.util.ArrayList mBackStackChangeListeners -> s
    int mCurState -> t
    android.support.v4.app.FragmentActivity mActivity -> u
    android.support.v4.app.FragmentContainer mContainer -> v
    android.support.v4.app.Fragment mParent -> w
    boolean mNeedMenuInvalidate -> x
    boolean mStateSaved -> y
    boolean mDestroyed -> z
    java.lang.String mNoTransactionsBecause -> A
    boolean mHavePendingDeferredStart -> B
    android.os.Bundle mStateBundle -> C
    android.util.SparseArray mStateArray -> D
    java.lang.Runnable mExecCommit -> E
    android.view.animation.Interpolator DECELERATE_QUINT -> F
    android.view.animation.Interpolator DECELERATE_CUBIC -> G
    android.view.animation.Interpolator ACCELERATE_QUINT -> H
    android.view.animation.Interpolator ACCELERATE_CUBIC -> I
    int ANIM_DUR -> J
    int ANIM_STYLE_OPEN_ENTER -> K
    int ANIM_STYLE_OPEN_EXIT -> L
    int ANIM_STYLE_CLOSE_ENTER -> M
    int ANIM_STYLE_CLOSE_EXIT -> N
    int ANIM_STYLE_FADE_ENTER -> O
    int ANIM_STYLE_FADE_EXIT -> P
    434:451:void throwException(java.lang.RuntimeException) -> a
    456:456:android.support.v4.app.FragmentTransaction beginTransaction() -> a
    461:461:boolean executePendingTransactions() -> b
    466:471:void popBackStack() -> c
    475:477:boolean popBackStackImmediate() -> d
    482:487:void popBackStack(java.lang.String,int) -> a
    491:493:boolean popBackStackImmediate(java.lang.String,int) -> b
    498:506:void popBackStack$255f295(int) -> b
    510:515:boolean popBackStackImmediate(int,int) -> a
    520:520:int getBackStackEntryCount() -> e
    525:525:android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> c
    530:534:void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> a
    538:541:void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> b
    545:550:void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    554:567:android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    572:580:android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
    585:595:java.lang.String toString() -> toString
    600:709:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    720:730:android.view.animation.Animation makeOpenCloseAnimation$376f30fd(float,float,float,float) -> a
    734:737:android.view.animation.Animation makeFadeAnimation$424ea1bd(float,float) -> a
    742:796:android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    800:809:void performPendingDeferredStart(android.support.v4.app.Fragment) -> b
    814:1063:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    1066:1067:void moveToState(android.support.v4.app.Fragment) -> c
    1070:1071:void moveToState$2563266(int) -> f
    1074:1104:void moveToState(int,int,int,boolean) -> a
    1107:1115:void startPendingDeferredFragments() -> f
    1118:1134:void makeActive(android.support.v4.app.Fragment) -> d
    1137:1149:void makeInactive(android.support.v4.app.Fragment) -> e
    1152:1171:void addFragment(android.support.v4.app.Fragment,boolean) -> a
    1174:1188:void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    1191:1207:void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    1210:1226:void showFragment(android.support.v4.app.Fragment,int,int) -> c
    1229:1245:void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    1248:1267:void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    1270:1288:android.support.v4.app.Fragment findFragmentById(int) -> a
    1292:1310:android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    1314:1322:android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> b
    1326:1334:void checkStateLoss() -> u
    1337:1352:void enqueueAction(java.lang.Runnable,boolean) -> a
    1356:1372:int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    1376:1397:void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    1401:1408:void freeBackStackIndex(int) -> d
    1415:1464:boolean execPendingActions() -> g
    1468:1473:void reportBackStackChanged() -> v
    1476:1481:void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    1484:1543:boolean popBackStackState$68507953(java.lang.String,int,int) -> a
    1547:1562:java.util.ArrayList retainNonConfig() -> h
    1566:1579:void saveFragmentViewState(android.support.v4.app.Fragment) -> f
    1582:1611:android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> g
    1617:1727:android.os.Parcelable saveAllState() -> i
    1733:1840:void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    1844:1848:void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    1851:1852:void noteStateNotSaved() -> j
    1855:1857:void dispatchCreate() -> k
    1860:1862:void dispatchActivityCreated() -> l
    1865:1867:void dispatchStart() -> m
    1870:1872:void dispatchResume() -> n
    1875:1876:void dispatchPause() -> o
    1882:1885:void dispatchStop() -> p
    1888:1889:void dispatchReallyStop() -> q
    1892:1893:void dispatchDestroyView() -> r
    1896:1902:void dispatchDestroy() -> s
    1905:1913:void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    1916:1924:void dispatchLowMemory() -> t
    1927:1955:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    1959:1970:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    1974:1984:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    1988:1998:boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    2002:2010:void dispatchOptionsMenuClosed(android.view.Menu) -> b
    2013:2025:int reverseTransit(int) -> e
    2037:2049:int transitToStyleIndex(int,boolean) -> a
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.s:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    429:430:void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.t:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    468:469:void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.u:
    java.lang.String val$name -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    484:485:void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.v:
    int val$id -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    503:504:void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.w:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    994:999:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    1002:1002:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    1005:1005:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    353:353:int describeContents() -> describeContents
    357:360:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.x:
    365:365:android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    369:369:android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    363:363:java.lang.Object[] newArray(int) -> newArray
    363:363:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.y:
    java.lang.String TAG -> c
    boolean DEBUG -> d
    android.support.v4.app.FragmentManager mFragmentManager -> e
    android.support.v4.app.FragmentTransaction mCurTransaction -> f
    android.support.v4.app.Fragment mCurrentPrimaryItem -> g
    android.support.v4.app.Fragment getItem$29859790() -> a
    80:80:void startUpdate$52bc874c() -> b
    84:107:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    112:118:void destroyItem$30510aeb(int,java.lang.Object) -> a
    122:134:void setPrimaryItem$30510aeb(java.lang.Object) -> a
    138:143:void finishUpdate$52bc874c() -> c
    147:147:boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    152:152:android.os.Parcelable saveState() -> d
    157:157:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    169:169:long getItemId(int) -> a
    173:173:java.lang.String makeFragmentName(int,long) -> a
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    89:116:android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    120:120:int describeContents() -> describeContents
    124:134:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.z:
    139:139:android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    143:143:android.support.v4.app.FragmentState[] newArray(int) -> a
    137:137:java.lang.Object[] newArray(int) -> newArray
    137:137:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.aa:
    java.lang.String TAG -> c
    boolean DEBUG -> d
    android.support.v4.app.FragmentManager mFragmentManager -> e
    android.support.v4.app.FragmentTransaction mCurTransaction -> f
    java.util.ArrayList mSavedState -> g
    java.util.ArrayList mFragments -> h
    android.support.v4.app.Fragment mCurrentPrimaryItem -> i
    android.support.v4.app.Fragment getItem$29859790() -> a
    86:86:void startUpdate$52bc874c() -> b
    94:121:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    126:140:void destroyItem$30510aeb(int,java.lang.Object) -> a
    144:156:void setPrimaryItem$30510aeb(java.lang.Object) -> a
    160:165:void finishUpdate$52bc874c() -> c
    169:169:boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    174:191:android.os.Parcelable saveState() -> d
    196:224:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.widget.FrameLayout mRealTabContent -> b
    android.content.Context mContext -> c
    android.support.v4.app.FragmentManager mFragmentManager -> d
    int mContainerId -> e
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> f
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> g
    boolean mAttached -> h
    140:172:void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> a
    181:181:void setup() -> setup
    186:190:void setup(android.content.Context,android.support.v4.app.FragmentManager) -> a
    193:205:void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> a
    208:215:void ensureContent() -> a
    219:220:void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    223:242:void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> a
    246:281:void onAttachedToWindow() -> onAttachedToWindow
    285:287:void onDetachedFromWindow() -> onDetachedFromWindow
    291:294:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    299:302:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    306:315:void onTabChanged(java.lang.String) -> onTabChanged
    318:349:android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.ab:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.ac:
    android.content.Context mContext -> a
    83:86:android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    104:106:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    110:110:java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.ad:
    118:118:android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    122:122:android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    116:116:java.lang.Object[] newArray(int) -> newArray
    116:116:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.ae:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    61:61:android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    61:61:android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    61:61:java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    61:61:java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    61:61:android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.af:
    int TRANSIT_ENTER_MASK -> C
    int TRANSIT_EXIT_MASK -> D
    int TRANSIT_UNSET -> E
    int TRANSIT_NONE -> F
    int TRANSIT_FRAGMENT_OPEN -> G
    int TRANSIT_FRAGMENT_CLOSE -> H
    int TRANSIT_FRAGMENT_FADE -> I
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction replace$324a6018(int,android.support.v4.app.Fragment) -> c
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> c
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> d
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> e
    boolean isEmpty() -> k
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> a
    android.support.v4.app.FragmentTransaction setCustomAnimations$366cc4e1(int,int) -> b
    android.support.v4.app.FragmentTransaction setTransition(int) -> a
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> b
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> a
    boolean isAddToBackStackAllowed() -> f
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> g
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> c
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> a
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> d
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> b
    int commit() -> h
    int commitAllowingStateLoss() -> i
android.support.v4.app.ListFragment -> android.support.v4.app.ag:
    int INTERNAL_EMPTY_ID -> a
    int INTERNAL_PROGRESS_CONTAINER_ID -> b
    int INTERNAL_LIST_CONTAINER_ID -> c
    android.os.Handler mHandler -> l
    java.lang.Runnable mRequestFocus -> m
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> ai
    android.widget.ListAdapter mAdapter -> d
    android.widget.ListView mList -> e
    android.view.View mEmptyView -> f
    android.widget.TextView mStandardEmptyView -> g
    android.view.View mProgressContainer -> h
    android.view.View mListContainer -> i
    java.lang.CharSequence mEmptyText -> j
    boolean mListShown -> k
    91:136:android.view.View onCreateView$469ccb8a() -> m
    144:146:void onViewCreated(android.view.View,android.os.Bundle) -> a
    153:159:void onDestroyView() -> d
    173:173:void onListItemClick$42a3bb55() -> z
    179:189:void setListAdapter(android.widget.ListAdapter) -> a
    198:200:void setSelection(int) -> a
    206:207:int getSelectedItemPosition() -> A
    214:215:long getSelectedItemId() -> B
    222:223:android.widget.ListView getListView() -> C
    232:241:void setEmptyText(java.lang.CharSequence) -> a
    258:259:void setListShown(boolean) -> c
    266:267:void setListShownNoAnimation(boolean) -> d
    280:313:void setListShown(boolean,boolean) -> a
    319:319:android.widget.ListAdapter getListAdapter() -> D
    323:374:void ensureList() -> E
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ah:
    android.support.v4.app.ListFragment this$0 -> a
    51:52:void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ai:
    android.support.v4.app.ListFragment this$0 -> a
    58:59:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.aj:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> a
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> b
    void destroyLoader(int) -> a
    android.support.v4.content.Loader getLoader(int) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    177:178:void enableDebugLogging(boolean) -> a
    184:184:boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.ak:
    android.support.v4.content.Loader onCreateLoader$e57f803() -> a
    void onLoadFinished$13079eae() -> b
    void onLoaderReset$5dda1f52() -> c
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.al:
    java.lang.String TAG -> a
    boolean DEBUG -> b
    android.support.v4.util.SparseArrayCompat mLoaders -> c
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> d
    java.lang.String mWho -> e
    android.support.v4.app.FragmentActivity mActivity -> f
    boolean mStarted -> g
    boolean mRetaining -> h
    boolean mRetainingStarted -> i
    boolean mCreatingLoader -> j
    484:485:void updateActivity(android.support.v4.app.FragmentActivity) -> a
    489:492:android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> c
    498:501:android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> d
    508:515:void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> a
    543:565:android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> a
    593:647:android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> b
    658:678:void destroyLoader(int) -> a
    686:697:android.support.v4.content.Loader getLoader(int) -> b
    701:716:void doStart() -> b
    719:731:void doStop() -> c
    734:747:void doRetain() -> d
    750:758:void finishRetain() -> e
    761:764:void doReportNextStart() -> f
    767:770:void doReportStart() -> g
    773:785:void doDestroy() -> h
    789:795:java.lang.String toString() -> toString
    800:820:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    824:830:boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.am:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    235:267:void start() -> a
    270:275:void retain() -> d
    278:300:void finishRetain() -> e
    303:311:void reportStart() -> f
    314:324:void stop() -> b
    327:359:void destroy() -> c
    362:415:void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> a
    418:435:void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> b
    439:447:java.lang.String toString() -> toString
    451:474:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NavUtils -> android.support.v4.app.an:
    java.lang.String TAG -> b
    java.lang.String PARENT_ACTIVITY -> a
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> c
    158:158:boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    174:185:void navigateUpFromSameTask(android.app.Activity) -> c
    201:202:void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    215:215:android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    230:240:android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> a
    255:265:android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> a
    279:282:java.lang.String getParentActivityName(android.app.Activity) -> b
    297:300:java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> b
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.ao:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> a
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.ap:
    52:66:android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    72:73:boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    78:81:void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    85:91:java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> a
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.aq:
    101:105:android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    109:109:android.content.Intent superGetParentActivityIntent(android.app.Activity) -> b
    114:114:boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    119:120:void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    124:128:java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> a
android.support.v4.app.NavUtilsJB -> android.support.v4.app.ar:
    25:25:android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    29:29:boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    33:34:void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    37:37:java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.as:
    32:41:android.view.ViewGroup wrap(android.view.View) -> a
    53:54:void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    61:62:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.at:
    int FLAG_HIGH_PRIORITY -> a
    int PRIORITY_DEFAULT -> b
    int PRIORITY_LOW -> c
    int PRIORITY_MIN -> d
    int PRIORITY_HIGH -> e
    int PRIORITY_MAX -> f
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> g
    34:34:android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> a
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.au:
    int icon -> a
    java.lang.CharSequence title -> b
    android.app.PendingIntent actionIntent -> c
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.av:
    android.graphics.Bitmap mPicture -> a
    664:665:android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> a
    672:674:android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> b
    681:682:android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> a
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.aw:
    java.lang.CharSequence mBigText -> a
    722:723:android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> a
    730:732:android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> b
    740:741:android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> c
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.ax:
    android.content.Context mContext -> a
    java.lang.CharSequence mContentTitle -> b
    java.lang.CharSequence mContentText -> c
    android.app.PendingIntent mContentIntent -> d
    android.app.PendingIntent mFullScreenIntent -> e
    android.widget.RemoteViews mTickerView -> f
    android.graphics.Bitmap mLargeIcon -> g
    java.lang.CharSequence mContentInfo -> h
    int mNumber -> i
    int mPriority -> j
    boolean mUseChronometer -> k
    android.support.v4.app.NotificationCompat$Style mStyle -> l
    java.lang.CharSequence mSubText -> m
    int mProgressMax -> n
    int mProgress -> o
    boolean mProgressIndeterminate -> p
    java.util.ArrayList mActions -> q
    android.app.Notification mNotification -> r
    229:230:android.support.v4.app.NotificationCompat$Builder setWhen(long) -> a
    245:246:android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> a
    257:258:android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> a
    272:274:android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> a
    281:282:android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> a
    289:290:android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> b
    303:304:android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> c
    313:314:android.support.v4.app.NotificationCompat$Builder setNumber(int) -> b
    321:322:android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> d
    330:333:android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> a
    340:341:android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> a
    353:354:android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> a
    365:366:android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> b
    383:385:android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> a
    393:394:android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> e
    403:405:android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> a
    412:413:android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> a
    420:422:android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> a
    432:434:android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> a
    444:445:android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> a
    454:460:android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> a
    475:476:android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> b
    484:485:android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> c
    495:496:android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> d
    510:514:android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> c
    518:523:void setFlag(int,boolean) -> a
    537:538:android.support.v4.app.NotificationCompat$Builder setPriority(int) -> d
    558:559:android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> a
    571:577:android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> a
    585:585:android.app.Notification getNotification() -> a
    593:593:android.app.Notification build() -> b
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.ay:
    java.util.ArrayList mTexts -> a
    784:785:android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> a
    792:794:android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> b
    801:802:android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> c
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.az:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.ba:
    87:94:android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.bb:
    100:100:android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.bc:
    108:108:android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.bd:
    117:146:android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.be:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> b
    java.lang.CharSequence mBigContentTitle -> c
    java.lang.CharSequence mSummaryText -> d
    boolean mSummaryTextSet -> e
    612:618:void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> a
    621:625:android.app.Notification build() -> a
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.bf:
    30:52:android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> a
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.bg:
    31:54:android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> a
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.bh:
    android.app.Notification$Builder b -> a
    62:63:void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> a
    67:73:void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> a
    77:83:void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap) -> a
    87:95:void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> a
    98:98:android.app.Notification build() -> a
android.support.v4.app.ServiceCompat -> android.support.v4.app.bi:
    int START_STICKY -> a
android.support.v4.app.ShareCompat -> android.support.v4.app.bj:
    java.lang.String EXTRA_CALLING_PACKAGE -> a
    java.lang.String EXTRA_CALLING_ACTIVITY -> b
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> c
    173:177:java.lang.String getCallingPackage(android.app.Activity) -> a
    193:197:android.content.ComponentName getCallingActivity(android.app.Activity) -> b
    232:233:void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> a
    244:250:void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> a
    58:58:android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> a
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.bk:
    android.app.Activity mActivity -> a
    android.content.Intent mIntent -> b
    java.lang.CharSequence mChooserTitle -> c
    java.util.ArrayList mToAddresses -> d
    java.util.ArrayList mCcAddresses -> e
    java.util.ArrayList mBccAddresses -> f
    java.util.ArrayList mStreams -> g
    275:275:android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> a
    296:336:android.content.Intent getIntent() -> a
    340:340:android.app.Activity getActivity() -> b
    344:352:void combineArrayExtra(java.lang.String,java.util.ArrayList) -> a
    356:363:void combineArrayExtra(java.lang.String,java.lang.String[]) -> a
    373:373:android.content.Intent createChooserIntent() -> c
    386:387:void startChooser() -> d
    396:397:android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> a
    407:407:android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> a
    418:419:android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> a
    431:432:android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> b
    447:452:android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> b
    466:471:android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> a
    486:498:android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> b
    510:514:android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> a
    525:529:android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> c
    540:541:android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> b
    553:554:android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> c
    565:569:android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> d
    580:581:android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> d
    593:594:android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> e
    605:609:android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> e
    620:621:android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> f
    632:633:android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> f
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.bl:
    java.lang.String TAG -> a
    android.app.Activity mActivity -> b
    android.content.Intent mIntent -> c
    java.lang.String mCallingPackage -> d
    android.content.ComponentName mCallingActivity -> e
    java.util.ArrayList mStreams -> f
    672:672:android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> a
    691:692:boolean isShareIntent() -> a
    704:704:boolean isSingleShare() -> b
    715:715:boolean isMultipleShare() -> c
    725:725:java.lang.String getType() -> d
    735:735:java.lang.CharSequence getText() -> e
    749:758:java.lang.String getHtmlText() -> f
    773:773:android.net.Uri getStream() -> g
    786:795:android.net.Uri getStream(int) -> a
    807:813:int getStreamCount() -> h
    823:823:java.lang.String[] getEmailTo() -> i
    833:833:java.lang.String[] getEmailCc() -> j
    843:843:java.lang.String[] getEmailBcc() -> k
    853:853:java.lang.String getSubject() -> l
    870:870:java.lang.String getCallingPackage() -> m
    887:887:android.content.ComponentName getCallingActivity() -> n
    901:909:android.graphics.drawable.Drawable getCallingActivityIcon() -> o
    923:931:android.graphics.drawable.Drawable getCallingApplicationIcon() -> p
    945:953:java.lang.CharSequence getCallingApplicationLabel() -> q
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.bm:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> a
    java.lang.String escapeHtml(java.lang.CharSequence) -> a
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.bn:
    87:88:void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> a
    91:93:java.lang.String escapeHtml(java.lang.CharSequence) -> a
    98:120:void withinStyle$115f5926(java.lang.StringBuilder,java.lang.CharSequence,int) -> a
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.bo:
    125:130:void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> a
    133:133:boolean shouldAddChooserIntent(android.view.MenuItem) -> a
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.bp:
    139:139:java.lang.String escapeHtml(java.lang.CharSequence) -> a
    144:144:boolean shouldAddChooserIntent(android.view.MenuItem) -> a
android.support.v4.app.ShareCompatICS -> android.support.v4.app.bq:
    java.lang.String HISTORY_FILENAME_PREFIX -> a
    29:40:void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> a
android.support.v4.app.ShareCompatJB -> android.support.v4.app.br:
    23:23:java.lang.String escapeHtml(java.lang.CharSequence) -> a
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.bs:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.bt:
    java.lang.String TAG -> a
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> b
    java.util.ArrayList mIntents -> c
    android.content.Context mSourceContext -> d
    133:133:android.support.v4.app.TaskStackBuilder create(android.content.Context) -> a
    146:146:android.support.v4.app.TaskStackBuilder from(android.content.Context) -> b
    157:158:android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> a
    174:182:android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> b
    193:204:android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> a
    215:215:android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> a
    227:238:android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> a
    245:245:int getIntentCount() -> a
    259:259:android.content.Intent getIntent(int) -> a
    271:271:android.content.Intent editIntentAt(int) -> b
    278:278:java.util.Iterator iterator() -> iterator
    290:291:void startActivities() -> b
    305:319:void startActivities$79e5e33f() -> c
    333:333:android.app.PendingIntent getPendingIntent(int,int) -> a
    350:360:android.app.PendingIntent getPendingIntent$669578cb(int,int) -> b
    371:380:android.content.Intent[] getIntents() -> d
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.bu:
    android.app.PendingIntent getPendingIntent$3140f641(android.content.Context,android.content.Intent[],int,int) -> a
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.bv:
    80:82:android.app.PendingIntent getPendingIntent$3140f641(android.content.Context,android.content.Intent[],int,int) -> a
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.bw:
    89:92:android.app.PendingIntent getPendingIntent$3140f641(android.content.Context,android.content.Intent[],int,int) -> a
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.bx:
    100:103:android.app.PendingIntent getPendingIntent$3140f641(android.content.Context,android.content.Intent[],int,int) -> a
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.by:
    29:29:android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> a
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.bz:
    28:28:android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> a
android.support.v4.content.AsyncTaskLoader -> android.support.v4.b.a:
    java.lang.String TAG -> a
    boolean DEBUG -> b
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> c
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> d
    long mUpdateThrottle -> e
    long mLastLoadCompleteTime -> f
    android.os.Handler mHandler -> g
    103:107:void setUpdateThrottle(long) -> a
    111:116:void onForceLoad() -> a
    136:166:boolean cancelLoad() -> b
    174:174:void onCanceled(java.lang.Object) -> a
    177:197:void executePendingTask() -> c
    200:207:void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> a
    210:224:void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> b
    java.lang.Object loadInBackground() -> d
    240:240:java.lang.Object onLoadInBackground() -> n
    254:262:void waitForLoader() -> o
    266:283:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.b.b:
    java.lang.Object result -> a
    boolean waiting -> b
    java.util.concurrent.CountDownLatch done -> e
    android.support.v4.content.AsyncTaskLoader this$0 -> c
    51:53:java.lang.Object doInBackground$532ebdd5() -> e
    61:63:void onPostExecute(java.lang.Object) -> a
    71:73:void onCancelled() -> a
    79:81:void run() -> run
    40:40:java.lang.Object doInBackground$42af7916() -> b
    40:40:java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> a
android.support.v4.content.ContextCompat -> android.support.v4.b.c:
    57:57:boolean startActivities(android.content.Context,android.content.Intent[]) -> b
    89:97:boolean startActivities$5b3ef247(android.content.Context,android.content.Intent[]) -> a
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.b.d:
    28:29:void startActivities(android.content.Context,android.content.Intent[]) -> a
android.support.v4.content.ContextCompatJellybean -> android.support.v4.b.e:
    26:27:void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> a
android.support.v4.content.CursorLoader -> android.support.v4.b.f:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> h
    android.net.Uri mUri -> i
    java.lang.String[] mProjection -> j
    java.lang.String mSelection -> k
    java.lang.String[] mSelectionArgs -> l
    java.lang.String mSortOrder -> m
    android.database.Cursor mCursor -> n
    49:56:android.database.Cursor loadInBackground() -> n
    64:65:void registerContentObserver$72081f0a(android.database.Cursor) -> a
    70:87:void deliverResult(android.database.Cursor) -> b
    125:131:void onStartLoading() -> e
    139:140:void onStopLoading() -> f
    144:147:void onCanceled(android.database.Cursor) -> c
    151:160:void onReset() -> g
    163:163:android.net.Uri getUri() -> o
    167:168:void setUri(android.net.Uri) -> a
    171:171:java.lang.String[] getProjection() -> p
    175:176:void setProjection(java.lang.String[]) -> a
    179:179:java.lang.String getSelection() -> q
    183:184:void setSelection(java.lang.String) -> a
    187:187:java.lang.String[] getSelectionArgs() -> r
    191:192:void setSelectionArgs(java.lang.String[]) -> b
    195:195:java.lang.String getSortOrder() -> s
    199:200:void setSortOrder(java.lang.String) -> b
    204:214:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    35:35:java.lang.Object loadInBackground() -> d
    35:35:void onCanceled(java.lang.Object) -> a
    35:35:void deliverResult(java.lang.Object) -> b
android.support.v4.content.IntentCompat -> android.support.v4.b.g:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> h
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> a
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> b
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> c
    java.lang.String EXTRA_CHANGED_UID_LIST -> d
    java.lang.String EXTRA_HTML_TEXT -> e
    int FLAG_ACTIVITY_TASK_ON_HOME -> f
    int FLAG_ACTIVITY_CLEAR_TASK -> g
    221:221:android.content.Intent makeMainActivity(android.content.ComponentName) -> a
    249:249:android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> a
    266:266:android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> b
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.b.h:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> a
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> b
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.b.i:
    39:42:android.content.Intent makeMainActivity(android.content.ComponentName) -> a
    51:53:android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> a
    58:61:android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> b
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.b.j:
    68:68:android.content.Intent makeMainActivity(android.content.ComponentName) -> a
    72:72:android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> b
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.b.k:
    79:79:android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> a
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.b.l:
    24:24:android.content.Intent makeMainActivity(android.content.ComponentName) -> a
    28:28:android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> b
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.b.m:
    24:24:android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> a
android.support.v4.content.Loader -> android.support.v4.b.n:
    int mId -> o
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> p
    android.content.Context mContext -> q
    boolean mStarted -> r
    boolean mAbandoned -> s
    boolean mReset -> t
    boolean mContentChanged -> u
    102:105:void deliverResult(java.lang.Object) -> b
    111:111:android.content.Context getContext() -> b
    118:118:int getId() -> c
    129:134:void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    142:149:void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    157:157:boolean isStarted() -> d
    166:166:boolean isAbandoned() -> n
    175:175:boolean isReset() -> o
    194:198:void startLoading() -> h
    206:206:void onStartLoading() -> e
    217:218:void forceLoad() -> i
    225:225:void onForceLoad() -> a
    242:244:void stopLoading() -> j
    253:253:void onStopLoading() -> f
    261:262:void abandon() -> k
    275:275:void onAbandon() -> p
    290:295:void reset() -> l
    304:304:void onReset() -> g
    312:314:boolean takeContentChanged() -> q
    326:334:void onContentChanged() -> m
    341:344:java.lang.String dataToString(java.lang.Object) -> a
    349:354:java.lang.String toString() -> toString
    366:372:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.b.o:
    android.support.v4.content.Loader this$0 -> a
    57:57:boolean deliverSelfNotifications() -> deliverSelfNotifications
    62:63:void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.b.p:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> a
android.support.v4.content.LocalBroadcastManager -> android.support.v4.b.q:
    java.lang.String TAG -> b
    boolean DEBUG -> c
    android.content.Context mAppContext -> d
    java.util.HashMap mReceivers -> e
    java.util.HashMap mActions -> f
    java.util.ArrayList mPendingBroadcasts -> g
    int MSG_EXEC_PENDING_BROADCASTS -> a
    android.os.Handler mHandler -> h
    java.lang.Object mLock -> i
    android.support.v4.content.LocalBroadcastManager mInstance -> j
    100:105:android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> a
    134:151:void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> a
    164:187:void unregisterReceiver(android.content.BroadcastReceiver) -> a
    201:268:boolean sendBroadcast(android.content.Intent) -> a
    277:280:void sendBroadcastSync(android.content.Intent) -> b
    284:300:void executePendingBroadcasts() -> a
    46:46:void access$000(android.support.v4.content.LocalBroadcastManager) -> a
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.b.r:
    android.support.v4.content.LocalBroadcastManager this$0 -> a
    114:121:void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.b.s:
    android.content.Intent intent -> a
    java.util.ArrayList receivers -> b
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.b.t:
    android.content.IntentFilter filter -> a
    android.content.BroadcastReceiver receiver -> b
    boolean broadcasting -> c
    59:65:java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.b.u:
    java.lang.String LOG_TAG -> a
    int CORE_POOL_SIZE -> b
    int MAXIMUM_POOL_SIZE -> c
    int KEEP_ALIVE -> e
    java.util.concurrent.ThreadFactory sThreadFactory -> f
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> g
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> d
    int MESSAGE_POST_RESULT -> h
    int MESSAGE_POST_PROGRESS -> i
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> j
    java.util.concurrent.Executor sDefaultExecutor -> k
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> l
    java.util.concurrent.FutureTask mFuture -> m
    android.support.v4.content.ModernAsyncTask$Status mStatus -> n
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> o
    106:107:void init() -> e
    111:112:void setDefaultExecutor(java.util.concurrent.Executor) -> a
    150:154:void postResultIfNotInvoked(java.lang.Object) -> b
    157:160:java.lang.Object postResult(java.lang.Object) -> c
    169:169:android.support.v4.content.ModernAsyncTask$Status getStatus() -> f
    java.lang.Object doInBackground$42af7916() -> b
    197:197:void onPreExecute() -> g
    213:213:void onPostExecute(java.lang.Object) -> a
    226:226:void onProgressUpdate$1b4f7664() -> c
    244:245:void onCancelled$5d527811() -> h
    260:260:void onCancelled() -> a
    273:273:boolean isCancelled() -> i
    306:306:boolean cancel$138603() -> d
    321:321:java.lang.Object get() -> j
    341:341:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> a
    371:371:android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> a
    406:425:android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> a
    433:434:void execute(java.lang.Runnable) -> a
    451:455:void publishProgress(java.lang.Object[]) -> b
    458:464:void finish(java.lang.Object) -> d
    47:47:java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> a
    47:47:java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> a
    47:47:void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> b
    47:47:void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> c
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.b.v:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    58:58:java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.b.w:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    120:123:java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.b.x:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    131:142:void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.b.y:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> a
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.b.z:
    android.support.v4.content.ModernAsyncTask mTask -> a
    java.lang.Object[] mData -> b
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.b.aa:
    470:480:void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.b.ab:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> a
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> b
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> c
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> d
    89:89:android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    89:89:android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.b.ac:
    java.lang.Object[] mParams -> b
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.b.a.a:
    int CONFIG_UI_MODE -> a
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.c.a:
    35:42:java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> a
    50:56:java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> a
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.d.a:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> a
    103:103:boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> a
    114:115:android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> a
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.d.b:
    40:54:boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> a
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.d.c:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> a
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.d.d:
    62:62:boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> a
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.d.e:
    70:70:boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> a
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.d.f:
    77:77:boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> a
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.d.g:
    35:54:boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> a
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.d.h:
    37:58:boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> a
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.d.i:
    26:26:boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> a
android.support.v4.net.TrafficStatsCompat -> android.support.v4.d.j:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> a
    136:137:void clearThreadStatsTag() -> a
    145:145:int getThreadStatsTag() -> b
    156:157:void incrementOperationCount(int) -> a
    167:168:void incrementOperationCount(int,int) -> a
    182:183:void setThreadStatsTag(int) -> b
    194:195:void tagSocket(java.net.Socket) -> a
    201:202:void untagSocket(java.net.Socket) -> b
android.support.v4.net.TrafficStatsCompat$1 -> android.support.v4.d.k:
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.d.l:
    java.lang.ThreadLocal mThreadSocketTags -> a
    54:55:void clearThreadStatsTag() -> a
    59:59:int getThreadStatsTag() -> b
    64:64:void incrementOperationCount(int) -> a
    68:68:void incrementOperationCount(int,int) -> a
    72:73:void setThreadStatsTag(int) -> b
    77:77:void tagSocket(java.net.Socket) -> a
    81:81:void untagSocket(java.net.Socket) -> b
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.d.m:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> a
    48:48:android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags initialValue() -> a
    45:45:java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.d.n:
    int statsTag -> a
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.d.o:
    87:88:void clearThreadStatsTag() -> a
    92:92:int getThreadStatsTag() -> b
    97:98:void incrementOperationCount(int) -> a
    102:103:void incrementOperationCount(int,int) -> a
    107:108:void setThreadStatsTag(int) -> b
    112:113:void tagSocket(java.net.Socket) -> a
    117:118:void untagSocket(java.net.Socket) -> b
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.d.p:
    void clearThreadStatsTag() -> a
    int getThreadStatsTag() -> b
    void incrementOperationCount(int) -> a
    void incrementOperationCount(int,int) -> a
    void setThreadStatsTag(int) -> b
    void tagSocket(java.net.Socket) -> a
    void untagSocket(java.net.Socket) -> b
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.d.q:
    29:30:void clearThreadStatsTag() -> a
    33:33:int getThreadStatsTag() -> b
    37:38:void incrementOperationCount(int) -> a
    41:42:void incrementOperationCount(int,int) -> a
    45:46:void setThreadStatsTag(int) -> b
    49:50:void tagSocket(java.net.Socket) -> a
    53:54:void untagSocket(java.net.Socket) -> b
android.support.v4.os.ParcelableCompat -> android.support.v4.e.a:
    36:39:android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.e.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    51:51:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    56:56:java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.e.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.e.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    36:36:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    40:40:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    44:44:java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.e.e:
    24:24:android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.AtomicFile -> android.support.v4.f.a:
    java.io.File mBaseName -> a
    java.io.File mBackupName -> b
    61:61:java.io.File getBaseFile() -> a
    68:70:void delete() -> b
    88:112:java.io.FileOutputStream startWrite() -> c
    122:131:void finishWrite(java.io.FileOutputStream) -> a
    139:149:void failWrite(java.io.FileOutputStream) -> b
    164:168:java.io.FileInputStream openRead() -> d
    176:199:byte[] readFully() -> e
    205:211:boolean sync(java.io.FileOutputStream) -> c
android.support.v4.util.DebugUtils -> android.support.v4.f.b:
    28:43:void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.f.c:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    44:45:void close() -> close
    48:49:void flush() -> flush
    52:61:void write(char[],int,int) -> write
    64:68:void flushBuilder() -> a
android.support.v4.util.LongSparseArray -> android.support.v4.f.d:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    long[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    55:63:android.support.v4.util.LongSparseArray clone() -> a
    71:71:java.lang.Object get(long) -> a
    80:85:java.lang.Object get$33cced79(long) -> b
    93:101:void delete(long) -> c
    107:108:void remove(long) -> d
    114:118:void removeAt(int) -> a
    123:146:void gc() -> b
    154:198:void put(long,java.lang.Object) -> a
    205:209:int size() -> c
    218:222:long keyAt(int) -> b
    232:236:java.lang.Object valueAt(int) -> c
    245:250:void setValueAt(int,java.lang.Object) -> a
    258:262:int indexOfKey(long) -> e
    274:282:int indexOfValue(java.lang.Object) -> a
    289:298:void clear() -> d
    305:332:void append(long,java.lang.Object) -> b
    335:351:int binarySearch$748c512d(long[],int,long) -> a
    355:359:int idealByteArraySize(int) -> d
    363:363:int idealLongArraySize(int) -> e
    24:24:java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> android.support.v4.f.e:
    java.util.LinkedHashMap map -> a
    int size -> b
    int maxSize -> c
    int putCount -> d
    int createCount -> e
    int evictionCount -> f
    int hitCount -> g
    int missCount -> h
    62:83:java.lang.Object get(java.lang.Object) -> a
    116:135:java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    149:165:void trimToSize(int) -> a
    177:189:java.lang.Object remove(java.lang.Object) -> b
    211:211:void entryRemoved$7ef8fcad() -> a
    229:229:java.lang.Object create$7713a341() -> b
    233:233:int safeSizeOf$2838e5a0() -> c
    248:248:int sizeOf$2838e5a0() -> d
    255:256:void evictAll() -> e
    264:264:int size() -> f
    273:273:int maxSize() -> g
    280:280:int hitCount() -> h
    288:288:int missCount() -> i
    295:295:int createCount() -> j
    302:302:int putCount() -> k
    309:309:int evictionCount() -> l
    317:317:java.util.Map snapshot() -> m
    321:323:java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.f.f:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    52:52:java.lang.Object get(int) -> a
    60:65:java.lang.Object get$6ae075e8(int) -> g
    73:81:void delete(int) -> h
    87:88:void remove(int) -> b
    94:98:void removeAt(int) -> c
    107:111:void removeAtRange(int,int) -> a
    116:138:void gc() -> c
    146:190:void put(int,java.lang.Object) -> a
    197:201:int size() -> a
    210:214:int keyAt(int) -> d
    223:227:java.lang.Object valueAt(int) -> e
    236:241:void setValueAt(int,java.lang.Object) -> b
    249:253:int indexOfKey(int) -> f
    265:273:int indexOfValue(java.lang.Object) -> a
    280:289:void clear() -> b
    296:323:void append(int,java.lang.Object) -> c
    326:342:int binarySearch$76412d8d(int[],int,int) -> a
    346:350:int idealByteArraySize(int) -> i
    354:354:int idealIntArraySize(int) -> j
android.support.v4.util.TimeUtils -> android.support.v4.f.g:
    int HUNDRED_DAY_FIELD_LEN -> a
    int SECONDS_PER_MINUTE -> b
    int SECONDS_PER_HOUR -> c
    int SECONDS_PER_DAY -> d
    java.lang.Object sFormatSync -> e
    char[] sFormatStr -> f
    39:48:int accumField(int,int,boolean,int) -> a
    53:72:int printField$6419d3d2(char[],int,char,int,boolean) -> a
    76:143:int formatDurationLocked$25666e7(long) -> a
    148:151:void formatDuration(long,java.lang.StringBuilder) -> a
    156:159:void formatDuration$112769eb(long,java.io.PrintWriter) -> b
    164:165:void formatDuration(long,java.io.PrintWriter) -> a
    169:174:void formatDuration(long,long,java.io.PrintWriter) -> a
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    318:318:java.lang.Object getBridge() -> a
    336:337:void sendAccessibilityEvent(android.view.View,int) -> a
    358:359:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    379:379:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    399:400:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    419:420:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    438:439:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    462:462:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    480:480:android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    500:500:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    122:122:java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    127:127:java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    172:172:boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    179:180:void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    185:187:void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    192:193:void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    198:198:boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    204:205:void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    210:211:void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    132:132:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    137:138:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    142:144:void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    148:149:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    154:154:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    159:160:void sendAccessibilityEvent(android.view.View,int) -> a
    164:165:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    217:217:java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    275:280:android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    286:286:boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    223:223:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    228:229:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    233:235:void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    239:240:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    245:245:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    250:251:void sendAccessibilityEvent(android.view.View,int) -> a
    255:256:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    260:262:java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    267:267:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    57:57:java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    62:62:java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    68:68:boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    75:75:void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    81:81:void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    87:87:void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    92:92:boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    98:98:void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    104:104:void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    109:109:android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    115:115:boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
    42:42:java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    46:46:java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    87:87:boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    92:93:void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    96:98:void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    102:103:void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    107:107:boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    112:113:void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    117:118:void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    49:49:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    54:55:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    59:60:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    64:65:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    70:70:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    75:76:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    80:81:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
    47:47:java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    99:99:java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    104:104:boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    51:51:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    56:57:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    61:62:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    66:67:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    72:72:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    77:78:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    82:83:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    87:87:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    92:92:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.n:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> a
    514:514:boolean isLongpressEnabled() -> a
    526:526:boolean onTouchEvent(android.view.MotionEvent) -> a
    539:540:void setIsLongpressEnabled(boolean) -> a
    550:551:void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> a
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.o:
    boolean isLongpressEnabled() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> a
    void setIsLongpressEnabled(boolean) -> a
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> a
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.p:
    int mTouchSlopSquare -> a
    int mDoubleTapSlopSquare -> b
    int mMinimumFlingVelocity -> c
    int mMaximumFlingVelocity -> d
    int LONGPRESS_TIMEOUT -> e
    int TAP_TIMEOUT -> f
    int DOUBLE_TAP_TIMEOUT -> g
    int SHOW_PRESS -> h
    int LONG_PRESS -> i
    int TAP -> j
    android.os.Handler mHandler -> k
    android.view.GestureDetector$OnGestureListener mListener -> l
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> m
    boolean mStillDown -> n
    boolean mInLongPress -> o
    boolean mAlwaysInTapRegion -> p
    boolean mAlwaysInBiggerTapRegion -> q
    android.view.MotionEvent mCurrentDownEvent -> r
    android.view.MotionEvent mPreviousUpEvent -> s
    boolean mIsDoubleTapping -> t
    float mLastFocusX -> u
    float mLastFocusY -> v
    float mDownFocusX -> w
    float mDownFocusY -> x
    boolean mIsLongpressEnabled -> y
    android.view.VelocityTracker mVelocityTracker -> z
    161:177:void init(android.content.Context) -> a
    187:188:void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> a
    200:201:void setIsLongpressEnabled(boolean) -> a
    207:207:boolean isLongpressEnabled() -> a
    219:396:boolean onTouchEvent(android.view.MotionEvent) -> a
    400:412:void cancel() -> b
    415:424:void cancelTaps() -> c
    428:438:boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> a
    442:445:void dispatchLongPress() -> d
    56:56:android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> a
    56:56:android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> b
    56:56:void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> c
    56:56:android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> d
    56:56:boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> e
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.q:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> a
    112:131:void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr1 -> android.support.v4.view.r:
    android.view.GestureDetector mDetector -> a
    458:458:boolean isLongpressEnabled() -> a
    463:463:boolean onTouchEvent(android.view.MotionEvent) -> a
    468:469:void setIsLongpressEnabled(boolean) -> a
    473:474:void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.s:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    127:127:int normalizeMetaState(int) -> a
    131:131:boolean metaStateHasModifiers(int,int) -> a
    135:135:boolean metaStateHasNoModifiers(int) -> b
    139:139:boolean hasModifiers$79c6ddc0(android.view.KeyEvent) -> a
    143:143:boolean hasNoModifiers(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.t:
    int META_MODIFIER_MASK -> a
    int META_ALL_MASK -> b
    49:61:int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    67:73:int normalizeMetaState(int) -> a
    78:83:boolean metaStateHasModifiers(int,int) -> a
    88:88:boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.u:
    98:98:int normalizeMetaState(int) -> a
    103:103:boolean metaStateHasModifiers(int,int) -> a
    108:108:boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.v:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.w:
    26:26:int normalizeMetaState(int) -> a
    30:30:boolean metaStateHasModifiers(int,int) -> a
    34:34:boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MenuCompat -> android.support.v4.view.x:
    android.support.v4.view.MenuCompat$MenuVersionImpl IMPL -> a
    79:79:boolean setShowAsAction(android.view.MenuItem,int) -> a
android.support.v4.view.MenuCompat$BaseMenuVersionImpl -> android.support.v4.view.y:
    40:40:boolean setShowAsAction(android.view.MenuItem,int) -> a
android.support.v4.view.MenuCompat$HoneycombMenuVersionImpl -> android.support.v4.view.z:
    50:51:boolean setShowAsAction(android.view.MenuItem,int) -> a
android.support.v4.view.MenuCompat$MenuVersionImpl -> android.support.v4.view.aa:
    boolean setShowAsAction(android.view.MenuItem,int) -> a
android.support.v4.view.MenuItemCompat -> android.support.v4.view.ab:
    int SHOW_AS_ACTION_NEVER -> a
    int SHOW_AS_ACTION_IF_ROOM -> b
    int SHOW_AS_ACTION_ALWAYS -> c
    int SHOW_AS_ACTION_WITH_TEXT -> d
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> e
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> f
    119:119:boolean setShowAsAction(android.view.MenuItem,int) -> a
    133:133:android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.ac:
    75:75:boolean setShowAsAction(android.view.MenuItem,int) -> a
    80:80:android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.ad:
    90:91:boolean setShowAsAction(android.view.MenuItem,int) -> a
    95:95:android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.ae:
    boolean setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.af:
    27:28:void setShowAsAction(android.view.MenuItem,int) -> a
    31:31:android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.ag:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int ACTION_MASK -> b
    int ACTION_POINTER_DOWN -> c
    int ACTION_POINTER_UP -> d
    int ACTION_HOVER_MOVE -> e
    int ACTION_SCROLL -> f
    int ACTION_POINTER_INDEX_MASK -> g
    int ACTION_POINTER_INDEX_SHIFT -> h
    int ACTION_HOVER_ENTER -> i
    int ACTION_HOVER_EXIT -> j
    183:183:int getActionMasked(android.view.MotionEvent) -> c
    191:191:int getActionIndex(android.view.MotionEvent) -> a
    201:201:int findPointerIndex(android.view.MotionEvent,int) -> a
    210:210:int getPointerId(android.view.MotionEvent,int) -> b
    219:219:float getX(android.view.MotionEvent,int) -> c
    228:228:float getY(android.view.MotionEvent,int) -> d
    236:236:int getPointerCount(android.view.MotionEvent) -> b
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.ah:
    43:47:int findPointerIndex(android.view.MotionEvent,int) -> a
    51:55:int getPointerId(android.view.MotionEvent,int) -> b
    59:62:float getX(android.view.MotionEvent,int) -> c
    66:69:float getY(android.view.MotionEvent,int) -> d
    73:73:int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.ai:
    83:83:int findPointerIndex(android.view.MotionEvent,int) -> a
    87:87:int getPointerId(android.view.MotionEvent,int) -> b
    91:91:float getX(android.view.MotionEvent,int) -> c
    95:95:float getY(android.view.MotionEvent,int) -> d
    99:99:int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.aj:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.ak:
    26:26:int findPointerIndex(android.view.MotionEvent,int) -> a
    29:29:int getPointerId(android.view.MotionEvent,int) -> b
    32:32:float getX(android.view.MotionEvent,int) -> c
    35:35:float getY(android.view.MotionEvent,int) -> d
    38:38:int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.al:
    android.database.DataSetObservable mObservable -> c
    int POSITION_UNCHANGED -> a
    int POSITION_NONE -> b
    int getCount() -> e
    95:95:void startUpdate$52bc874c() -> b
    110:110:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    124:124:void destroyItem$30510aeb(int,java.lang.Object) -> a
    137:137:void setPrimaryItem$30510aeb(java.lang.Object) -> a
    148:148:void finishUpdate$52bc874c() -> c
    159:159:void startUpdate$3c7ec8c3() -> a
    175:175:java.lang.Object instantiateItem$e9b6c8c() -> f
    192:192:void destroyItem$7e55ba3e() -> g
    207:207:void setPrimaryItem$7e55ba3e() -> h
    219:219:void finishUpdate$3c7ec8c3() -> i
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    239:239:android.os.Parcelable saveState() -> d
    250:250:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    268:268:int getItemPosition$5d527804() -> j
    276:277:void notifyDataSetChanged() -> k
    280:281:void registerDataSetObserver(android.database.DataSetObserver) -> a
    284:285:void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    297:297:java.lang.CharSequence getPageTitle$7c9ecdcc() -> l
    308:308:float getPageWidth$13461e() -> m
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    java.lang.String TAG -> f
    int INDICATOR_HEIGHT -> g
    int MIN_PADDING_BOTTOM -> h
    int TAB_PADDING -> i
    int TAB_SPACING -> j
    int MIN_TEXT_SPACING -> k
    int FULL_UNDERLINE_HEIGHT -> l
    int MIN_STRIP_HEIGHT -> m
    int mIndicatorColor -> n
    int mIndicatorHeight -> o
    int mMinPaddingBottom -> p
    int mMinTextSpacing -> q
    int mMinStripHeight -> r
    int mTabPadding -> s
    android.graphics.Paint mTabPaint -> t
    android.graphics.Rect mTempRect -> u
    int mTabAlpha -> v
    boolean mDrawFullUnderline -> w
    boolean mDrawFullUnderlineSet -> x
    int mFullUnderlineHeight -> y
    boolean mIgnoreTap -> z
    float mInitialMotionX -> A
    float mInitialMotionY -> B
    int mTouchSlop -> C
    129:132:void setTabIndicatorColor(int) -> c
    140:141:void setTabIndicatorColorResource(int) -> d
    147:147:int getTabIndicatorColor() -> c
    152:156:void setPadding(int,int,int,int) -> setPadding
    160:164:void setTextSpacing(int) -> a
    168:172:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    176:180:void setBackgroundColor(int) -> setBackgroundColor
    184:188:void setBackgroundResource(int) -> setBackgroundResource
    197:200:void setDrawFullUnderline(boolean) -> a
    210:210:boolean getDrawFullUnderline() -> d
    215:215:int getMinHeight() -> a
    220:252:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    257:273:void onDraw(android.graphics.Canvas) -> onDraw
    277:293:void updateTextPositions(int,float,boolean) -> a
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.am:
    android.support.v4.view.PagerTabStrip this$0 -> a
    106:107:void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.an:
    android.support.v4.view.PagerTabStrip this$0 -> a
    114:115:void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    java.lang.String TAG -> f
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> g
    float mLastKnownPositionOffset -> h
    int mScaledTextSpacing -> i
    int mGravity -> j
    boolean mUpdatingText -> k
    boolean mUpdatingPositions -> l
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> m
    java.lang.ref.WeakReference mWatchingAdapter -> n
    int[] ATTRS -> o
    int[] TEXT_ATTRS -> p
    float SIDE_ALPHA -> q
    int TEXT_SPACING -> r
    int mNonPrimaryAlpha -> s
    int mTextColor -> e
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> t
    108:109:void setSingleLineAllCaps(android.widget.TextView) -> a
    176:178:void setTextSpacing(int) -> a
    184:184:int getTextSpacing() -> b
    193:197:void setNonPrimaryAlpha$133aeb() -> c
    206:211:void setTextColor(int) -> c
    224:227:void setTextSize$255e752(float) -> a
    236:238:void setGravity(int) -> d
    242:257:void onAttachedToWindow() -> onAttachedToWindow
    261:268:void onDetachedFromWindow() -> onDetachedFromWindow
    271:306:void updateText$7a69ae8(int) -> b
    310:313:void requestLayout() -> requestLayout
    316:330:void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    333:418:void updateTextPositions(int,float,boolean) -> a
    422:451:void onMeasure(int,int) -> onMeasure
    455:459:void onLayout(boolean,int,int,int,int) -> onLayout
    462:467:int getMinHeight() -> a
    45:45:float access$100(android.support.v4.view.PagerTitleStrip) -> a
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.ao:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.ap:
    int mScrollState -> b
    android.support.v4.view.PagerTitleStrip this$0 -> a
    476:481:void onPageScrolled$486775f1(int,float) -> a
    485:492:void onPageSelected$13462e() -> a
    496:497:void onPageScrollStateChanged(int) -> a
    501:502:void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    506:510:void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.aq:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.ar:
    88:89:void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.as:
    94:95:void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.at:
    28:29:void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.au:
    java.lang.String TAG -> a
    java.util.Locale mLocale -> b
    42:43:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.av:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    82:82:float getXVelocity(android.view.VelocityTracker,int) -> a
    91:91:float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.aw:
    40:40:float getXVelocity(android.view.VelocityTracker,int) -> a
    44:44:float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.ax:
    54:54:float getXVelocity(android.view.VelocityTracker,int) -> a
    58:58:float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.ay:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.az:
    26:26:float getXVelocity(android.view.VelocityTracker,int) -> a
    29:29:float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.ba:
    int OVER_SCROLL_ALWAYS -> a
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> b
    int OVER_SCROLL_NEVER -> c
    long FAKE_FRAME_TIME -> k
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> d
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> e
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> f
    int LAYER_TYPE_NONE -> g
    int LAYER_TYPE_SOFTWARE -> h
    int LAYER_TYPE_HARDWARE -> i
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> j
    347:347:boolean canScrollHorizontally(android.view.View,int) -> a
    358:358:boolean canScrollVertically(android.view.View,int) -> c
    371:371:int getOverScrollMode(android.view.View) -> a
    387:388:void setOverScrollMode(android.view.View,int) -> d
    424:425:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    457:458:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    493:494:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    508:509:void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    520:520:boolean hasTransientState(android.view.View) -> e
    531:532:void setHasTransientState(android.view.View,boolean) -> a
    544:545:void postInvalidateOnAnimation(android.view.View) -> b
    562:563:void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    576:577:void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    593:594:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    609:609:int getImportantForAccessibility(android.view.View) -> c
    625:626:void setImportantForAccessibility$5359dc9a(android.view.View) -> d
    643:643:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    670:670:android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> f
    713:714:void setLayerType$7672597b(android.view.View,int) -> b
    733:733:int getLayerType(android.view.View) -> g
    744:744:int getLabelFor(android.view.View) -> h
    755:756:void setLabelFor(android.view.View,int) -> e
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.bb:
    141:141:boolean canScrollHorizontally(android.view.View,int) -> a
    144:144:boolean canScrollVertically(android.view.View,int) -> b
    147:147:int getOverScrollMode(android.view.View) -> a
    151:151:void setOverScrollMode(android.view.View,int) -> c
    154:154:void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    157:157:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    160:160:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    163:163:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    166:166:boolean hasTransientState(android.view.View) -> b
    170:170:void setHasTransientState(android.view.View,boolean) -> a
    172:173:void postInvalidateOnAnimation(android.view.View) -> c
    175:176:void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    178:179:void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    181:182:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    184:184:long getFrameTime() -> a
    187:187:int getImportantForAccessibility(android.view.View) -> d
    191:191:void setImportantForAccessibility$5359dc9a(android.view.View) -> e
    193:193:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    196:196:android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> f
    199:199:void setLayerType$7672597b(android.view.View,int) -> d
    201:201:int getLayerType(android.view.View) -> g
    204:204:int getLabelFor(android.view.View) -> h
    208:208:void setLabelFor(android.view.View,int) -> e
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.bc:
    214:214:int getOverScrollMode(android.view.View) -> a
    218:219:void setOverScrollMode(android.view.View,int) -> c
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.bd:
    224:224:long getFrameTime() -> a
    227:228:void setLayerType$7672597b(android.view.View,int) -> d
    230:230:int getLayerType(android.view.View) -> g
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.be:
    237:237:boolean canScrollHorizontally(android.view.View,int) -> a
    241:241:boolean canScrollVertically(android.view.View,int) -> b
    245:246:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    249:250:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    253:254:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    257:258:void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.bf:
    264:264:boolean hasTransientState(android.view.View) -> b
    268:269:void setHasTransientState(android.view.View,boolean) -> a
    272:273:void postInvalidateOnAnimation(android.view.View) -> c
    276:277:void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    280:281:void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    284:285:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    288:288:int getImportantForAccessibility(android.view.View) -> d
    292:293:void setImportantForAccessibility$5359dc9a(android.view.View) -> e
    296:296:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    300:304:android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> f
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.bg:
    312:312:int getLabelFor(android.view.View) -> h
    317:318:void setLabelFor(android.view.View,int) -> e
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.bh:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> a
    void setOverScrollMode(android.view.View,int) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean hasTransientState(android.view.View) -> b
    void setHasTransientState(android.view.View,boolean) -> a
    void postInvalidateOnAnimation(android.view.View) -> c
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    int getImportantForAccessibility(android.view.View) -> d
    void setImportantForAccessibility$5359dc9a(android.view.View) -> e
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> f
    void setLayerType$7672597b(android.view.View,int) -> d
    int getLayerType(android.view.View) -> g
    int getLabelFor(android.view.View) -> h
    void setLabelFor(android.view.View,int) -> e
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.bi:
    23:23:int getOverScrollMode(android.view.View) -> a
    27:28:void setOverScrollMode(android.view.View,int) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.bj:
    25:25:long getFrameTime() -> a
    29:30:void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    33:33:int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.bk:
    30:30:boolean canScrollHorizontally(android.view.View,int) -> a
    34:34:boolean canScrollVertically(android.view.View,int) -> b
    38:39:void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
    42:43:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    46:47:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    50:51:void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> b
android.support.v4.view.ViewCompatJB -> android.support.v4.view.bl:
    28:28:boolean hasTransientState(android.view.View) -> a
    32:33:void setHasTransientState(android.view.View,boolean) -> a
    36:37:void postInvalidateOnAnimation(android.view.View) -> b
    41:42:void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    45:46:void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    49:50:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    53:53:int getImportantForAccessibility(android.view.View) -> c
    57:58:void setImportantForAccessibility(android.view.View,int) -> a
    61:61:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    65:65:java.lang.Object getAccessibilityNodeProvider(android.view.View) -> d
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.bm:
    27:27:int getLabelFor(android.view.View) -> a
    31:32:void setLabelFor(android.view.View,int) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.bn:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    73:73:int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.bo:
    39:39:int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.bp:
    49:49:int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.bq:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.br:
    26:26:int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.bs:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> a
    83:83:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.bt:
    46:46:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.bu:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.bv:
    38:38:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.bw:
    29:29:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    java.lang.String TAG -> d
    boolean DEBUG -> e
    boolean USE_CACHE -> f
    int DEFAULT_OFFSCREEN_PAGES -> g
    int MAX_SETTLE_DURATION -> h
    int MIN_DISTANCE_FOR_FLING -> i
    int DEFAULT_GUTTER_SIZE -> j
    int MIN_FLING_VELOCITY -> k
    int[] LAYOUT_ATTRS -> l
    java.util.Comparator COMPARATOR -> m
    android.view.animation.Interpolator sInterpolator -> n
    java.util.ArrayList mItems -> o
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> p
    android.graphics.Rect mTempRect -> q
    android.support.v4.view.PagerAdapter mAdapter -> r
    int mCurItem -> s
    int mRestoredCurItem -> t
    android.os.Parcelable mRestoredAdapterState -> u
    java.lang.ClassLoader mRestoredClassLoader -> v
    android.widget.Scroller mScroller -> w
    android.support.v4.view.ViewPager$PagerObserver mObserver -> x
    int mPageMargin -> y
    android.graphics.drawable.Drawable mMarginDrawable -> z
    int mTopPageBounds -> A
    int mBottomPageBounds -> B
    float mFirstOffset -> C
    float mLastOffset -> D
    int mChildWidthMeasureSpec -> E
    int mChildHeightMeasureSpec -> F
    boolean mInLayout -> G
    boolean mScrollingCacheEnabled -> H
    boolean mPopulatePending -> I
    int mOffscreenPageLimit -> J
    boolean mIsBeingDragged -> K
    boolean mIsUnableToDrag -> L
    boolean mIgnoreGutter -> M
    int mDefaultGutterSize -> N
    int mGutterSize -> O
    int mTouchSlop -> P
    float mLastMotionX -> Q
    float mLastMotionY -> R
    float mInitialMotionX -> S
    float mInitialMotionY -> T
    int mActivePointerId -> U
    int INVALID_POINTER -> V
    android.view.VelocityTracker mVelocityTracker -> W
    int mMinimumVelocity -> Z
    int mMaximumVelocity -> aa
    int mFlingDistance -> ab
    int mCloseEnough -> ac
    int CLOSE_ENOUGH -> ad
    boolean mFakeDragging -> ae
    long mFakeDragBeginTime -> af
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> ag
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> ah
    boolean mFirstLayout -> ai
    boolean mNeedCalculatePageOffsets -> aj
    boolean mCalledSuper -> ak
    int mDecorChildCount -> al
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> am
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> an
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> ao
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ap
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> aq
    int DRAW_ORDER_DEFAULT -> ar
    int DRAW_ORDER_FORWARD -> as
    int DRAW_ORDER_REVERSE -> at
    int mDrawingOrder -> au
    java.util.ArrayList mDrawingOrderedChildren -> av
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> aw
    int SCROLL_STATE_IDLE -> a
    int SCROLL_STATE_DRAGGING -> b
    int SCROLL_STATE_SETTLING -> c
    java.lang.Runnable mEndScrollRunnable -> ax
    int mScrollState -> ay
    348:373:void initViewPager() -> f
    377:379:void onDetachedFromWindow() -> onDetachedFromWindow
    382:394:void setScrollState(int) -> b
    402:440:void setAdapter(android.support.v4.view.PagerAdapter) -> a
    443:451:void removeNonDecorViews() -> g
    459:459:android.support.v4.view.PagerAdapter getAdapter() -> a
    463:464:void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> a
    474:476:void setCurrentItem(int) -> a
    485:487:void setCurrentItem$2563266(int) -> c
    490:490:int getCurrentItem() -> b
    494:495:void setCurrentItemInternal(int,boolean,boolean) -> a
    498:524:void setCurrentItemInternal(int,boolean,boolean,int) -> a
    528:553:void scrollToItem(int,boolean,int,boolean) -> a
    562:563:void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> b
    578:590:void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> a
    593:606:void setChildrenDrawingOrderEnabledCompat(boolean) -> a
    610:612:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    622:624:android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    635:635:int getOffscreenPageLimit() -> h
    656:665:void setOffscreenPageLimit(int) -> d
    676:683:void setPageMargin(int) -> e
    691:691:int getPageMargin() -> i
    700:704:void setPageMarginDrawable(android.graphics.drawable.Drawable) -> a
    712:713:void setPageMarginDrawable(int) -> f
    717:717:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    722:727:void drawableStateChanged() -> drawableStateChanged
    734:736:float distanceInfluenceForSnapDuration(float) -> a
    746:747:void smoothScrollTo(int,int) -> a
    757:795:void smoothScrollTo(int,int,int) -> a
    798:807:android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> b
    813:877:void dataSetChanged() -> c
    880:881:void populate() -> d
    884:1057:void populate(int) -> g
    1060:1143:void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    1199:1205:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1210:1226:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1230:1252:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1256:1261:void removeView(android.view.View) -> removeView
    1264:1270:android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    1275:1281:android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    1285:1291:android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> h
    1296:1298:void onAttachedToWindow() -> onAttachedToWindow
    1307:1393:void onMeasure(int,int) -> onMeasure
    1397:1403:void onSizeChanged(int,int,int,int) -> onSizeChanged
    1406:1430:void recomputeScrollPosition(int,int,int,int) -> a
    1434:1538:void onLayout(boolean,int,int,int,int) -> onLayout
    1542:1563:void computeScroll() -> computeScroll
    1566:1590:boolean pageScrolled(int) -> i
    1607:1668:void onPageScrolled$486775f1(int,float) -> a
    1671:1699:void completeScroll(boolean) -> b
    1702:1702:boolean isGutterDrag(float,float) -> a
    1706:1712:void enableLayers(boolean) -> c
    1722:1853:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1858:1974:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1978:2021:boolean performDrag(float) -> b
    2029:2067:android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> j
    2072:2087:int determineTargetPage(int,float,int,int) -> a
    2092:2130:void draw(android.graphics.Canvas) -> draw
    2134:2174:void onDraw(android.graphics.Canvas) -> onDraw
    2194:2210:boolean beginFakeDrag() -> k
    2220:2241:void endFakeDrag() -> l
    2251:2289:void fakeDragBy(float) -> c
    2301:2301:boolean isFakeDragging() -> m
    2305:2317:void onSecondaryPointerUp(android.view.MotionEvent) -> a
    2320:2327:void endDrag() -> n
    2330:2342:void setScrollingCacheEnabled(boolean) -> d
    2356:2375:boolean canScroll(android.view.View,boolean,int,int,int) -> a
    2381:2381:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2393:2415:boolean executeKeyEvent(android.view.KeyEvent) -> a
    2419:2458:boolean arrowScroll(int) -> j
    2462:2484:android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    2488:2492:boolean pageLeft() -> o
    2496:2500:boolean pageRight() -> p
    2508:2545:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    2555:2564:void addTouchables(java.util.ArrayList) -> addTouchables
    2575:2596:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    2606:2618:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    2623:2623:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2628:2628:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2633:2633:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    2638:2638:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    84:84:void access$000$b020504(android.support.v4.view.ViewPager) -> a
    84:84:android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> b
    84:84:int access$300(android.support.v4.view.ViewPager) -> c
    84:84:int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.bx:
    113:113:int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    110:110:int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.by:
    119:120:float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.bz:
    android.support.v4.view.ViewPager this$0 -> a
    237:239:void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ca:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.cb:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.cc:
    android.support.v4.view.ViewPager this$0 -> b
    2645:2647:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    2651:2660:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    2664:2681:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.cd:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ce:
    void onPageScrolled$486775f1(int,float) -> a
    void onPageSelected$13462e() -> a
    void onPageScrollStateChanged(int) -> a
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.cf:
    void transformPage$5359e7dd() -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.cg:
    android.support.v4.view.ViewPager this$0 -> a
    2688:2689:void onChanged() -> onChanged
    2692:2693:void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    1162:1165:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    1169:1169:java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ch:
    1178:1178:android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    1182:1182:android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    1175:1175:java.lang.Object[] newArray(int) -> a
    1175:1175:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ci:
    290:290:void onPageScrolled$486775f1(int,float) -> a
    295:295:void onPageSelected$13462e() -> a
    300:300:void onPageScrollStateChanged(int) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.cj:
    2751:2756:int compare(android.view.View,android.view.View) -> a
    2748:2748:int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> q
    int TYPE_VIEW_HOVER_ENTER -> a
    int TYPE_VIEW_HOVER_EXIT -> b
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> c
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> d
    int TYPE_WINDOW_CONTENT_CHANGED -> e
    int TYPE_VIEW_SCROLLED -> f
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> g
    int TYPE_ANNOUNCEMENT -> h
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> i
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> j
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> k
    int TYPE_GESTURE_DETECTION_START -> l
    int TYPE_GESTURE_DETECTION_END -> m
    int TYPE_TOUCH_INTERACTION_START -> n
    int TYPE_TOUCH_INTERACTION_END -> o
    int TYPES_ALL_MASK -> p
    194:194:int getRecordCount(android.view.accessibility.AccessibilityEvent) -> a
    206:207:void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> a
    216:216:android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> a
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.a.b:
    56:57:void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> a
    61:61:java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> a
    66:66:int getRecordCount(android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.a.c:
    39:39:void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> a
    43:43:java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> a
    48:48:int getRecordCount(android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.a.d:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> a
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> a
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> a
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.a.e:
    28:28:int getRecordCount(android.view.accessibility.AccessibilityEvent) -> a
    32:33:void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> a
    36:36:java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> a
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.a.f:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> a
    144:144:boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> a
    156:156:boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> b
    167:167:java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> a
    186:186:java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> a
    196:196:boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> b
    31:31:android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> a
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.a.g:
    83:83:java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> a
    94:94:boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> a
    101:101:boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> b
    108:108:java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> a
    115:115:java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> a
    120:120:boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> b
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.a.h:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> a
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> b
    86:87:void onAccessibilityStateChanged$1385ff() -> a
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.a.i:
    50:50:java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> a
    55:55:boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> a
    60:60:boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> b
    65:65:java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> a
    70:70:java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> a
    74:74:boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> b
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.a.j:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> a
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> a
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> b
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> a
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> a
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> b
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.a.k:
    java.lang.Object mListener -> a
    void onAccessibilityStateChanged$1385ff() -> a
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.a.l:
    36:36:java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> a
    46:46:boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> a
    52:52:boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> b
    58:58:java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> a
    63:63:java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> a
    67:67:boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> b
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.a.m:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> a
    39:40:void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.a.n:
    void onAccessibilityStateChanged$1385ff() -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.o:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> x
    java.lang.Object mInfo -> y
    int ACTION_FOCUS -> a
    int ACTION_CLEAR_FOCUS -> b
    int ACTION_SELECT -> c
    int ACTION_CLEAR_SELECTION -> d
    int ACTION_CLICK -> e
    int ACTION_LONG_CLICK -> f
    int ACTION_ACCESSIBILITY_FOCUS -> g
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> h
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> i
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> j
    int ACTION_NEXT_HTML_ELEMENT -> k
    int ACTION_PREVIOUS_HTML_ELEMENT -> l
    int ACTION_SCROLL_FORWARD -> m
    int ACTION_SCROLL_BACKWARD -> n
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> o
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> p
    int FOCUS_INPUT -> q
    int FOCUS_ACCESSIBILITY -> r
    int MOVEMENT_GRANULARITY_CHARACTER -> s
    int MOVEMENT_GRANULARITY_WORD -> t
    int MOVEMENT_GRANULARITY_LINE -> u
    int MOVEMENT_GRANULARITY_PARAGRAPH -> v
    int MOVEMENT_GRANULARITY_PAGE -> w
    918:921:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> a
    938:938:java.lang.Object getInfo() -> a
    949:949:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> a
    963:963:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> a
    973:973:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> b
    984:984:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    993:994:void setSource(android.view.View) -> b
    1016:1017:void setSource(android.view.View,int) -> b
    1031:1031:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> b
    1049:1049:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> c
    1058:1058:int getWindowId() -> c
    1067:1067:int getChildCount() -> d
    1084:1084:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> d
    1099:1100:void addChild(android.view.View) -> c
    1117:1118:void addChild(android.view.View,int) -> c
    1130:1130:int getActions() -> e
    1145:1146:void addAction(int) -> a
    1161:1161:boolean performAction(int) -> e
    1178:1178:boolean performAction(int,android.os.Bundle) -> a
    1194:1195:void setMovementGranularities(int) -> f
    1203:1203:int getMovementGranularities() -> f
    1220:1227:java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> a
    1241:1241:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> g
    1256:1257:void setParent(android.view.View) -> d
    1279:1280:void setParent(android.view.View,int) -> d
    1288:1289:void getBoundsInParent(android.graphics.Rect) -> a
    1303:1304:void setBoundsInParent(android.graphics.Rect) -> b
    1312:1313:void getBoundsInScreen(android.graphics.Rect) -> c
    1327:1328:void setBoundsInScreen(android.graphics.Rect) -> d
    1336:1336:boolean isCheckable() -> h
    1351:1352:void setCheckable(boolean) -> b
    1360:1360:boolean isChecked() -> i
    1375:1376:void setChecked(boolean) -> c
    1384:1384:boolean isFocusable() -> j
    1399:1400:void setFocusable(boolean) -> d
    1408:1408:boolean isFocused() -> k
    1423:1424:void setFocused(boolean) -> e
    1432:1432:boolean isVisibleToUser() -> l
    1448:1449:void setVisibleToUser(boolean) -> f
    1457:1457:boolean isAccessibilityFocused() -> m
    1473:1474:void setAccessibilityFocused(boolean) -> g
    1482:1482:boolean isSelected() -> n
    1497:1498:void setSelected(boolean) -> h
    1506:1506:boolean isClickable() -> o
    1521:1522:void setClickable(boolean) -> i
    1530:1530:boolean isLongClickable() -> p
    1545:1546:void setLongClickable(boolean) -> j
    1554:1554:boolean isEnabled() -> q
    1569:1570:void setEnabled(boolean) -> k
    1578:1578:boolean isPassword() -> r
    1593:1594:void setPassword(boolean) -> l
    1602:1602:boolean isScrollable() -> s
    1617:1618:void setScrollable(boolean) -> a
    1626:1626:java.lang.CharSequence getPackageName() -> t
    1641:1642:void setPackageName(java.lang.CharSequence) -> b
    1650:1650:java.lang.CharSequence getClassName() -> u
    1665:1666:void setClassName(java.lang.CharSequence) -> a
    1674:1674:java.lang.CharSequence getText() -> v
    1689:1690:void setText(java.lang.CharSequence) -> c
    1698:1698:java.lang.CharSequence getContentDescription() -> w
    1713:1714:void setContentDescription(java.lang.CharSequence) -> d
    1724:1725:void recycle() -> x
    1729:1729:int hashCode() -> hashCode
    1734:1751:boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.p:
    402:402:java.lang.Object obtain() -> a
    407:407:java.lang.Object obtain(android.view.View) -> a
    412:412:java.lang.Object obtain(java.lang.Object) -> a
    417:418:void addAction(java.lang.Object,int) -> a
    422:423:void addChild(java.lang.Object,android.view.View) -> a
    427:427:java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> a
    432:432:int getActions(java.lang.Object) -> b
    437:438:void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    442:443:void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    447:447:java.lang.Object getChild(java.lang.Object,int) -> b
    452:452:int getChildCount(java.lang.Object) -> c
    457:457:java.lang.CharSequence getClassName(java.lang.Object) -> d
    462:462:java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    467:467:java.lang.CharSequence getPackageName(java.lang.Object) -> f
    472:472:java.lang.Object getParent(java.lang.Object) -> g
    477:477:java.lang.CharSequence getText(java.lang.Object) -> h
    482:482:int getWindowId(java.lang.Object) -> i
    487:487:boolean isCheckable(java.lang.Object) -> j
    492:492:boolean isChecked(java.lang.Object) -> k
    497:497:boolean isClickable(java.lang.Object) -> l
    502:502:boolean isEnabled(java.lang.Object) -> m
    507:507:boolean isFocusable(java.lang.Object) -> n
    512:512:boolean isFocused(java.lang.Object) -> o
    517:517:boolean isLongClickable(java.lang.Object) -> p
    522:522:boolean isPassword(java.lang.Object) -> q
    527:527:boolean isScrollable(java.lang.Object) -> r
    532:532:boolean isSelected(java.lang.Object) -> s
    537:537:boolean performAction(java.lang.Object,int) -> c
    542:543:void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    547:548:void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    552:553:void setCheckable(java.lang.Object,boolean) -> a
    557:558:void setChecked(java.lang.Object,boolean) -> b
    562:563:void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    567:568:void setClickable(java.lang.Object,boolean) -> c
    572:573:void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    577:578:void setEnabled(java.lang.Object,boolean) -> d
    582:583:void setFocusable(java.lang.Object,boolean) -> e
    587:588:void setFocused(java.lang.Object,boolean) -> f
    592:593:void setLongClickable(java.lang.Object,boolean) -> g
    597:598:void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    602:603:void setParent(java.lang.Object,android.view.View) -> b
    607:608:void setPassword(java.lang.Object,boolean) -> h
    612:613:void setScrollable(java.lang.Object,boolean) -> i
    617:618:void setSelected(java.lang.Object,boolean) -> j
    622:623:void setSource(java.lang.Object,android.view.View) -> c
    627:628:void setText(java.lang.Object,java.lang.CharSequence) -> d
    632:633:void recycle(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.q:
    java.lang.Object obtain() -> a
    java.lang.Object obtain(android.view.View) -> a
    java.lang.Object obtain(java.lang.Object) -> a
    java.lang.Object obtain(android.view.View,int) -> a
    void setSource(java.lang.Object,android.view.View) -> c
    void setSource(java.lang.Object,android.view.View,int) -> a
    java.lang.Object findFocus(java.lang.Object,int) -> d
    java.lang.Object focusSearch(java.lang.Object,int) -> e
    int getWindowId(java.lang.Object) -> i
    int getChildCount(java.lang.Object) -> c
    java.lang.Object getChild(java.lang.Object,int) -> b
    void addChild(java.lang.Object,android.view.View) -> a
    void addChild(java.lang.Object,android.view.View,int) -> b
    int getActions(java.lang.Object) -> b
    void addAction(java.lang.Object,int) -> a
    boolean performAction(java.lang.Object,int) -> c
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> a
    void setMovementGranularities(java.lang.Object,int) -> f
    int getMovementGranularities(java.lang.Object) -> u
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> a
    java.lang.Object getParent(java.lang.Object) -> g
    void setParent(java.lang.Object,android.view.View,int) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    boolean isCheckable(java.lang.Object) -> j
    void setCheckable(java.lang.Object,boolean) -> a
    boolean isChecked(java.lang.Object) -> k
    void setChecked(java.lang.Object,boolean) -> b
    boolean isFocusable(java.lang.Object) -> n
    void setFocusable(java.lang.Object,boolean) -> e
    boolean isFocused(java.lang.Object) -> o
    void setFocused(java.lang.Object,boolean) -> f
    boolean isVisibleToUser(java.lang.Object) -> v
    void setVisibleToUser(java.lang.Object,boolean) -> k
    boolean isAccessibilityFocused(java.lang.Object) -> w
    void setAccessibilityFocused(java.lang.Object,boolean) -> l
    boolean isSelected(java.lang.Object) -> s
    void setSelected(java.lang.Object,boolean) -> j
    boolean isClickable(java.lang.Object) -> l
    void setClickable(java.lang.Object,boolean) -> c
    boolean isLongClickable(java.lang.Object) -> p
    void setLongClickable(java.lang.Object,boolean) -> g
    boolean isEnabled(java.lang.Object) -> m
    void setEnabled(java.lang.Object,boolean) -> d
    boolean isPassword(java.lang.Object) -> q
    void setPassword(java.lang.Object,boolean) -> h
    boolean isScrollable(java.lang.Object) -> r
    void setScrollable(java.lang.Object,boolean) -> i
    java.lang.CharSequence getPackageName(java.lang.Object) -> f
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> h
    void setText(java.lang.Object,java.lang.CharSequence) -> d
    java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void recycle(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.r:
    639:639:java.lang.Object obtain(android.view.View,int) -> a
    644:644:java.lang.Object findFocus(java.lang.Object,int) -> d
    649:649:java.lang.Object focusSearch(java.lang.Object,int) -> e
    654:655:void addChild(java.lang.Object,android.view.View,int) -> b
    659:660:void setSource(java.lang.Object,android.view.View,int) -> a
    664:664:boolean isVisibleToUser(java.lang.Object) -> v
    669:670:void setVisibleToUser(java.lang.Object,boolean) -> k
    674:674:boolean isAccessibilityFocused(java.lang.Object) -> w
    679:680:void setAccessibilityFocused(java.lang.Object,boolean) -> l
    684:684:boolean performAction(java.lang.Object,int,android.os.Bundle) -> a
    689:690:void setMovementGranularities(java.lang.Object,int) -> f
    694:694:int getMovementGranularities(java.lang.Object) -> u
    699:700:void setParent(java.lang.Object,android.view.View,int) -> c
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.s:
    100:100:java.lang.Object obtain() -> a
    105:105:java.lang.Object obtain(android.view.View) -> a
    110:110:java.lang.Object obtain(android.view.View,int) -> a
    115:115:java.lang.Object obtain(java.lang.Object) -> a
    121:121:void addAction(java.lang.Object,int) -> a
    126:126:void addChild(java.lang.Object,android.view.View) -> a
    131:131:void addChild(java.lang.Object,android.view.View,int) -> b
    135:135:java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> a
    140:140:int getActions(java.lang.Object) -> b
    146:146:void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    151:151:void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    155:155:java.lang.Object getChild(java.lang.Object,int) -> b
    160:160:int getChildCount(java.lang.Object) -> c
    165:165:java.lang.CharSequence getClassName(java.lang.Object) -> d
    170:170:java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    175:175:java.lang.CharSequence getPackageName(java.lang.Object) -> f
    180:180:java.lang.Object getParent(java.lang.Object) -> g
    185:185:java.lang.CharSequence getText(java.lang.Object) -> h
    190:190:int getWindowId(java.lang.Object) -> i
    195:195:boolean isCheckable(java.lang.Object) -> j
    200:200:boolean isChecked(java.lang.Object) -> k
    205:205:boolean isClickable(java.lang.Object) -> l
    210:210:boolean isEnabled(java.lang.Object) -> m
    215:215:boolean isFocusable(java.lang.Object) -> n
    220:220:boolean isFocused(java.lang.Object) -> o
    225:225:boolean isVisibleToUser(java.lang.Object) -> v
    230:230:boolean isAccessibilityFocused(java.lang.Object) -> w
    235:235:boolean isLongClickable(java.lang.Object) -> p
    240:240:boolean isPassword(java.lang.Object) -> q
    245:245:boolean isScrollable(java.lang.Object) -> r
    250:250:boolean isSelected(java.lang.Object) -> s
    255:255:boolean performAction(java.lang.Object,int) -> c
    260:260:boolean performAction(java.lang.Object,int,android.os.Bundle) -> a
    266:266:void setMovementGranularities(java.lang.Object,int) -> f
    270:270:int getMovementGranularities(java.lang.Object) -> u
    276:276:void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    281:281:void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    286:286:void setCheckable(java.lang.Object,boolean) -> a
    291:291:void setChecked(java.lang.Object,boolean) -> b
    296:296:void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    301:301:void setClickable(java.lang.Object,boolean) -> c
    306:306:void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    311:311:void setEnabled(java.lang.Object,boolean) -> d
    316:316:void setFocusable(java.lang.Object,boolean) -> e
    321:321:void setFocused(java.lang.Object,boolean) -> f
    326:326:void setVisibleToUser(java.lang.Object,boolean) -> k
    331:331:void setAccessibilityFocused(java.lang.Object,boolean) -> l
    336:336:void setLongClickable(java.lang.Object,boolean) -> g
    341:341:void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    346:346:void setParent(java.lang.Object,android.view.View) -> b
    351:351:void setPassword(java.lang.Object,boolean) -> h
    356:356:void setScrollable(java.lang.Object,boolean) -> i
    361:361:void setSelected(java.lang.Object,boolean) -> j
    366:366:void setSource(java.lang.Object,android.view.View) -> c
    371:371:void setSource(java.lang.Object,android.view.View,int) -> a
    375:375:java.lang.Object findFocus(java.lang.Object,int) -> d
    380:380:java.lang.Object focusSearch(java.lang.Object,int) -> e
    386:386:void setText(java.lang.Object,java.lang.CharSequence) -> d
    391:391:void recycle(java.lang.Object) -> t
    396:396:void setParent(java.lang.Object,android.view.View,int) -> c
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.a.t:
    31:31:java.lang.Object obtain() -> a
    35:35:java.lang.Object obtain(android.view.View) -> a
    39:39:java.lang.Object obtain(java.lang.Object) -> a
    43:44:void addAction(java.lang.Object,int) -> a
    47:48:void addChild(java.lang.Object,android.view.View) -> a
    52:53:java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> a
    57:57:int getActions(java.lang.Object) -> b
    61:62:void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    65:66:void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    69:69:java.lang.Object getChild(java.lang.Object,int) -> b
    73:73:int getChildCount(java.lang.Object) -> c
    77:77:java.lang.CharSequence getClassName(java.lang.Object) -> d
    81:81:java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    85:85:java.lang.CharSequence getPackageName(java.lang.Object) -> f
    89:89:java.lang.Object getParent(java.lang.Object) -> g
    93:93:java.lang.CharSequence getText(java.lang.Object) -> h
    97:97:int getWindowId(java.lang.Object) -> i
    101:101:boolean isCheckable(java.lang.Object) -> j
    105:105:boolean isChecked(java.lang.Object) -> k
    109:109:boolean isClickable(java.lang.Object) -> l
    113:113:boolean isEnabled(java.lang.Object) -> m
    117:117:boolean isFocusable(java.lang.Object) -> n
    121:121:boolean isFocused(java.lang.Object) -> o
    125:125:boolean isLongClickable(java.lang.Object) -> p
    129:129:boolean isPassword(java.lang.Object) -> q
    133:133:boolean isScrollable(java.lang.Object) -> r
    137:137:boolean isSelected(java.lang.Object) -> s
    141:141:boolean performAction(java.lang.Object,int) -> c
    145:146:void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    149:150:void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    153:154:void setCheckable(java.lang.Object,boolean) -> a
    157:158:void setChecked(java.lang.Object,boolean) -> b
    161:162:void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    165:166:void setClickable(java.lang.Object,boolean) -> c
    169:170:void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    173:174:void setEnabled(java.lang.Object,boolean) -> d
    177:178:void setFocusable(java.lang.Object,boolean) -> e
    181:182:void setFocused(java.lang.Object,boolean) -> f
    185:186:void setLongClickable(java.lang.Object,boolean) -> g
    189:190:void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    193:194:void setParent(java.lang.Object,android.view.View) -> b
    197:198:void setPassword(java.lang.Object,boolean) -> h
    201:202:void setScrollable(java.lang.Object,boolean) -> i
    205:206:void setSelected(java.lang.Object,boolean) -> j
    209:210:void setSource(java.lang.Object,android.view.View) -> c
    213:214:void setText(java.lang.Object,java.lang.CharSequence) -> d
    217:218:void recycle(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.a.u:
    29:30:void addChild(java.lang.Object,android.view.View,int) -> a
    33:34:void setSource(java.lang.Object,android.view.View,int) -> b
    37:37:boolean isVisibleToUser(java.lang.Object) -> a
    41:42:void setVisibleToUser(java.lang.Object,boolean) -> a
    45:45:boolean performAction(java.lang.Object,int,android.os.Bundle) -> a
    49:50:void setMovementGranularities(java.lang.Object,int) -> a
    53:53:int getMovementGranularities(java.lang.Object) -> b
    57:57:java.lang.Object obtain(android.view.View,int) -> a
    61:61:java.lang.Object findFocus(java.lang.Object,int) -> b
    65:65:java.lang.Object focusSearch(java.lang.Object,int) -> c
    69:70:void setParent(java.lang.Object,android.view.View,int) -> c
    73:73:boolean isAccessibilityFocused(java.lang.Object) -> c
    77:78:void setAccesibilityFocused(java.lang.Object,boolean) -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.v:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    117:117:java.lang.Object getProvider() -> a
    143:143:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo$f3a5639() -> b
    160:160:boolean performAction$5985f823() -> c
    179:179:java.util.List findAccessibilityNodeInfosByText$2393931d() -> d
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.w:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.x:
    47:47:java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.y:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    52:52:boolean performAction$5985f823() -> a
    58:66:java.util.List findAccessibilityNodeInfosByText$2393931d() -> b
    72:74:java.lang.Object createAccessibilityNodeInfo$54cf32c4() -> c
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.z:
    39:39:java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.aa:
    38:38:java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.ab:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    41:41:android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    49:49:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    55:55:boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.ac:
    java.lang.Object createAccessibilityNodeInfo$54cf32c4() -> c
    boolean performAction$5985f823() -> a
    java.util.List findAccessibilityNodeInfosByText$2393931d() -> b
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.a.ad:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    531:531:java.lang.Object getImpl() -> a
    542:542:android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> a
    552:552:android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> b
    563:564:void setSource(android.view.View) -> a
    581:582:void setSource(android.view.View,int) -> a
    597:597:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> c
    606:606:int getWindowId() -> d
    615:615:boolean isChecked() -> e
    626:627:void setChecked(boolean) -> a
    635:635:boolean isEnabled() -> f
    646:647:void setEnabled(boolean) -> b
    655:655:boolean isPassword() -> g
    666:667:void setPassword(boolean) -> c
    675:675:boolean isFullScreen() -> h
    686:687:void setFullScreen(boolean) -> d
    695:695:boolean isScrollable() -> i
    706:707:void setScrollable(boolean) -> e
    715:715:int getItemCount() -> j
    726:727:void setItemCount(int) -> a
    735:735:int getCurrentItemIndex() -> k
    746:747:void setCurrentItemIndex(int) -> b
    758:758:int getFromIndex() -> l
    772:773:void setFromIndex(int) -> c
    782:782:int getToIndex() -> m
    792:793:void setToIndex(int) -> d
    801:801:int getScrollX() -> n
    810:811:void setScrollX(int) -> e
    819:819:int getScrollY() -> o
    828:829:void setScrollY(int) -> f
    837:837:int getMaxScrollX() -> p
    845:846:void setMaxScrollX(int) -> g
    854:854:int getMaxScrollY() -> q
    863:864:void setMaxScrollY(int) -> h
    872:872:int getAddedCount() -> r
    883:884:void setAddedCount(int) -> i
    892:892:int getRemovedCount() -> s
    903:904:void setRemovedCount(int) -> j
    912:912:java.lang.CharSequence getClassName() -> t
    923:924:void setClassName(java.lang.CharSequence) -> a
    933:933:java.util.List getText() -> u
    942:942:java.lang.CharSequence getBeforeText() -> v
    953:954:void setBeforeText(java.lang.CharSequence) -> b
    962:962:java.lang.CharSequence getContentDescription() -> w
    973:974:void setContentDescription(java.lang.CharSequence) -> c
    982:982:android.os.Parcelable getParcelableData() -> x
    993:994:void setParcelableData(android.os.Parcelable) -> a
    1006:1007:void recycle() -> y
    1011:1011:int hashCode() -> hashCode
    1017:1034:boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.a.ae:
    270:270:java.lang.Object obtain() -> a
    275:275:java.lang.Object obtain(java.lang.Object) -> a
    280:280:int getAddedCount(java.lang.Object) -> b
    285:285:java.lang.CharSequence getBeforeText(java.lang.Object) -> c
    290:290:java.lang.CharSequence getClassName(java.lang.Object) -> d
    295:295:java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    300:300:int getCurrentItemIndex(java.lang.Object) -> f
    305:305:int getFromIndex(java.lang.Object) -> g
    310:310:int getItemCount(java.lang.Object) -> h
    315:315:android.os.Parcelable getParcelableData(java.lang.Object) -> i
    320:320:int getRemovedCount(java.lang.Object) -> j
    325:325:int getScrollX(java.lang.Object) -> k
    330:330:int getScrollY(java.lang.Object) -> l
    335:335:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> m
    341:341:java.util.List getText(java.lang.Object) -> n
    346:346:int getToIndex(java.lang.Object) -> o
    351:351:int getWindowId(java.lang.Object) -> p
    356:356:boolean isChecked(java.lang.Object) -> q
    361:361:boolean isEnabled(java.lang.Object) -> r
    366:366:boolean isFullScreen(java.lang.Object) -> s
    371:371:boolean isPassword(java.lang.Object) -> t
    376:376:boolean isScrollable(java.lang.Object) -> u
    381:382:void recycle(java.lang.Object) -> v
    386:387:void setAddedCount(java.lang.Object,int) -> a
    391:392:void setBeforeText(java.lang.Object,java.lang.CharSequence) -> a
    396:397:void setChecked(java.lang.Object,boolean) -> a
    401:402:void setClassName(java.lang.Object,java.lang.CharSequence) -> b
    406:407:void setContentDescription(java.lang.Object,java.lang.CharSequence) -> c
    411:412:void setCurrentItemIndex(java.lang.Object,int) -> b
    416:417:void setEnabled(java.lang.Object,boolean) -> b
    421:422:void setFromIndex(java.lang.Object,int) -> c
    426:427:void setFullScreen(java.lang.Object,boolean) -> c
    431:432:void setItemCount(java.lang.Object,int) -> d
    436:437:void setParcelableData(java.lang.Object,android.os.Parcelable) -> a
    441:442:void setPassword(java.lang.Object,boolean) -> d
    446:447:void setRemovedCount(java.lang.Object,int) -> e
    451:452:void setScrollX(java.lang.Object,int) -> f
    456:457:void setScrollY(java.lang.Object,int) -> g
    461:462:void setScrollable(java.lang.Object,boolean) -> e
    466:467:void setSource(java.lang.Object,android.view.View) -> a
    471:472:void setToIndex(java.lang.Object,int) -> h
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.a.af:
    478:478:int getMaxScrollX(java.lang.Object) -> w
    483:483:int getMaxScrollY(java.lang.Object) -> x
    488:489:void setMaxScrollX(java.lang.Object,int) -> i
    493:494:void setMaxScrollY(java.lang.Object,int) -> j
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.a.ag:
    java.lang.Object obtain() -> a
    java.lang.Object obtain(java.lang.Object) -> a
    void setSource(java.lang.Object,android.view.View) -> a
    void setSource(java.lang.Object,android.view.View,int) -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> m
    int getWindowId(java.lang.Object) -> p
    boolean isChecked(java.lang.Object) -> q
    void setChecked(java.lang.Object,boolean) -> a
    boolean isEnabled(java.lang.Object) -> r
    void setEnabled(java.lang.Object,boolean) -> b
    boolean isPassword(java.lang.Object) -> t
    void setPassword(java.lang.Object,boolean) -> d
    boolean isFullScreen(java.lang.Object) -> s
    void setFullScreen(java.lang.Object,boolean) -> c
    boolean isScrollable(java.lang.Object) -> u
    void setScrollable(java.lang.Object,boolean) -> e
    int getItemCount(java.lang.Object) -> h
    void setItemCount(java.lang.Object,int) -> d
    int getCurrentItemIndex(java.lang.Object) -> f
    void setCurrentItemIndex(java.lang.Object,int) -> b
    int getFromIndex(java.lang.Object) -> g
    void setFromIndex(java.lang.Object,int) -> c
    int getToIndex(java.lang.Object) -> o
    void setToIndex(java.lang.Object,int) -> h
    int getScrollX(java.lang.Object) -> k
    void setScrollX(java.lang.Object,int) -> f
    int getScrollY(java.lang.Object) -> l
    void setScrollY(java.lang.Object,int) -> g
    int getMaxScrollX(java.lang.Object) -> w
    void setMaxScrollX(java.lang.Object,int) -> i
    int getMaxScrollY(java.lang.Object) -> x
    void setMaxScrollY(java.lang.Object,int) -> j
    int getAddedCount(java.lang.Object) -> b
    void setAddedCount(java.lang.Object,int) -> a
    int getRemovedCount(java.lang.Object) -> j
    void setRemovedCount(java.lang.Object,int) -> e
    java.lang.CharSequence getClassName(java.lang.Object) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> b
    java.util.List getText(java.lang.Object) -> n
    java.lang.CharSequence getBeforeText(java.lang.Object) -> c
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> c
    android.os.Parcelable getParcelableData(java.lang.Object) -> i
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> a
    void recycle(java.lang.Object) -> v
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.a.ah:
    500:501:void setSource(java.lang.Object,android.view.View,int) -> a
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.a.ai:
    83:83:java.lang.Object obtain() -> a
    87:87:java.lang.Object obtain(java.lang.Object) -> a
    91:91:int getAddedCount(java.lang.Object) -> b
    95:95:java.lang.CharSequence getBeforeText(java.lang.Object) -> c
    99:99:java.lang.CharSequence getClassName(java.lang.Object) -> d
    103:103:java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    107:107:int getCurrentItemIndex(java.lang.Object) -> f
    111:111:int getFromIndex(java.lang.Object) -> g
    115:115:int getItemCount(java.lang.Object) -> h
    119:119:int getMaxScrollX(java.lang.Object) -> w
    123:123:int getMaxScrollY(java.lang.Object) -> x
    127:127:android.os.Parcelable getParcelableData(java.lang.Object) -> i
    131:131:int getRemovedCount(java.lang.Object) -> j
    135:135:int getScrollX(java.lang.Object) -> k
    139:139:int getScrollY(java.lang.Object) -> l
    143:143:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> m
    147:147:java.util.List getText(java.lang.Object) -> n
    151:151:int getToIndex(java.lang.Object) -> o
    155:155:int getWindowId(java.lang.Object) -> p
    159:159:boolean isChecked(java.lang.Object) -> q
    163:163:boolean isEnabled(java.lang.Object) -> r
    167:167:boolean isFullScreen(java.lang.Object) -> s
    171:171:boolean isPassword(java.lang.Object) -> t
    175:175:boolean isScrollable(java.lang.Object) -> u
    180:180:void recycle(java.lang.Object) -> v
    184:184:void setAddedCount(java.lang.Object,int) -> a
    188:188:void setBeforeText(java.lang.Object,java.lang.CharSequence) -> a
    192:192:void setChecked(java.lang.Object,boolean) -> a
    196:196:void setClassName(java.lang.Object,java.lang.CharSequence) -> b
    200:200:void setContentDescription(java.lang.Object,java.lang.CharSequence) -> c
    204:204:void setCurrentItemIndex(java.lang.Object,int) -> b
    208:208:void setEnabled(java.lang.Object,boolean) -> b
    212:212:void setFromIndex(java.lang.Object,int) -> c
    216:216:void setFullScreen(java.lang.Object,boolean) -> c
    220:220:void setItemCount(java.lang.Object,int) -> d
    224:224:void setMaxScrollX(java.lang.Object,int) -> i
    228:228:void setMaxScrollY(java.lang.Object,int) -> j
    232:232:void setParcelableData(java.lang.Object,android.os.Parcelable) -> a
    236:236:void setPassword(java.lang.Object,boolean) -> d
    240:240:void setRemovedCount(java.lang.Object,int) -> e
    244:244:void setScrollX(java.lang.Object,int) -> f
    248:248:void setScrollY(java.lang.Object,int) -> g
    252:252:void setScrollable(java.lang.Object,boolean) -> e
    256:256:void setSource(java.lang.Object,android.view.View) -> a
    260:260:void setSource(java.lang.Object,android.view.View,int) -> a
    264:264:void setToIndex(java.lang.Object,int) -> h
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.a.aj:
    31:31:java.lang.Object obtain() -> a
    35:35:java.lang.Object obtain(java.lang.Object) -> a
    39:39:int getAddedCount(java.lang.Object) -> b
    43:43:java.lang.CharSequence getBeforeText(java.lang.Object) -> c
    47:47:java.lang.CharSequence getClassName(java.lang.Object) -> d
    51:51:java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    55:55:int getCurrentItemIndex(java.lang.Object) -> f
    59:59:int getFromIndex(java.lang.Object) -> g
    63:63:int getItemCount(java.lang.Object) -> h
    67:67:android.os.Parcelable getParcelableData(java.lang.Object) -> i
    71:71:int getRemovedCount(java.lang.Object) -> j
    75:75:int getScrollX(java.lang.Object) -> k
    79:79:int getScrollY(java.lang.Object) -> l
    83:83:java.lang.Object getSource(java.lang.Object) -> m
    87:87:java.util.List getText(java.lang.Object) -> n
    91:91:int getToIndex(java.lang.Object) -> o
    95:95:int getWindowId(java.lang.Object) -> p
    99:99:boolean isChecked(java.lang.Object) -> q
    103:103:boolean isEnabled(java.lang.Object) -> r
    107:107:boolean isFullScreen(java.lang.Object) -> s
    111:111:boolean isPassword(java.lang.Object) -> t
    115:115:boolean isScrollable(java.lang.Object) -> u
    119:120:void recycle(java.lang.Object) -> v
    123:124:void setAddedCount(java.lang.Object,int) -> a
    127:128:void setBeforeText(java.lang.Object,java.lang.CharSequence) -> a
    131:132:void setChecked(java.lang.Object,boolean) -> a
    135:136:void setClassName(java.lang.Object,java.lang.CharSequence) -> b
    139:140:void setContentDescription(java.lang.Object,java.lang.CharSequence) -> c
    143:144:void setCurrentItemIndex(java.lang.Object,int) -> b
    147:148:void setEnabled(java.lang.Object,boolean) -> b
    151:152:void setFromIndex(java.lang.Object,int) -> c
    155:156:void setFullScreen(java.lang.Object,boolean) -> c
    159:160:void setItemCount(java.lang.Object,int) -> d
    163:164:void setParcelableData(java.lang.Object,android.os.Parcelable) -> a
    167:168:void setPassword(java.lang.Object,boolean) -> d
    171:172:void setRemovedCount(java.lang.Object,int) -> e
    175:176:void setScrollX(java.lang.Object,int) -> f
    179:180:void setScrollY(java.lang.Object,int) -> g
    183:184:void setScrollable(java.lang.Object,boolean) -> e
    187:188:void setSource(java.lang.Object,android.view.View) -> a
    191:192:void setToIndex(java.lang.Object,int) -> h
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.a.ak:
    27:27:int getMaxScrollX(java.lang.Object) -> a
    31:31:int getMaxScrollY(java.lang.Object) -> b
    34:35:void setMaxScrollX(java.lang.Object,int) -> a
    38:39:void setMaxScrollY(java.lang.Object,int) -> b
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.a.al:
    28:29:void setSource(java.lang.Object,android.view.View,int) -> a
android.support.v4.widget.CursorAdapter -> android.support.v4.g.a:
    boolean mDataValid -> a
    boolean mAutoRequery -> b
    android.database.Cursor mCursor -> c
    android.content.Context mContext -> d
    int mRowIDColumn -> e
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> f
    android.database.DataSetObserver mDataSetObserver -> g
    android.support.v4.widget.CursorFilter mCursorFilter -> h
    android.widget.FilterQueryProvider mFilterQueryProvider -> i
    int FLAG_AUTO_REQUERY -> j
    int FLAG_REGISTER_CONTENT_OBSERVER -> k
    160:161:void init(android.content.Context,android.database.Cursor,boolean) -> a
    164:187:void init(android.content.Context,android.database.Cursor,int) -> a
    194:194:android.database.Cursor getCursor() -> a
    201:204:int getCount() -> getCount
    212:216:java.lang.Object getItem(int) -> getItem
    224:231:long getItemId(int) -> getItemId
    237:237:boolean hasStableIds() -> hasStableIds
    244:257:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    262:273:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView$4b8874c5(android.view.ViewGroup) -> a
    296:296:android.view.View newDropDownView$4b8874c5(android.view.ViewGroup) -> b
    void bindView$4693bf34(android.view.View,android.database.Cursor) -> a
    315:319:void changeCursor(android.database.Cursor) -> a
    332:354:android.database.Cursor swapCursor(android.database.Cursor) -> b
    367:367:java.lang.CharSequence convertToString(android.database.Cursor) -> c
    396:400:android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    404:407:android.widget.Filter getFilter() -> getFilter
    420:420:android.widget.FilterQueryProvider getFilterQueryProvider() -> c
    436:437:void setFilterQueryProvider(android.widget.FilterQueryProvider) -> a
    447:451:void onContentChanged() -> b
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.g.b:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.g.c:
    android.support.v4.widget.CursorAdapter this$0 -> a
    460:460:boolean deliverSelfNotifications() -> deliverSelfNotifications
    465:466:void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.g.d:
    android.support.v4.widget.CursorAdapter this$0 -> a
    472:474:void onChanged() -> onChanged
    478:480:void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.g.e:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> a
    45:45:java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    50:60:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    65:70:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.g.f:
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    android.database.Cursor getCursor() -> a
    void changeCursor(android.database.Cursor) -> a
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.g.g:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    143:144:void setSize(int,int) -> a
    154:154:boolean isFinished() -> a
    162:163:void finish() -> b
    177:177:boolean onPull(float) -> a
    189:189:boolean onRelease() -> c
    204:204:boolean onAbsorb(int) -> a
    218:218:boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.g.h:
    60:60:java.lang.Object newEdgeEffect(android.content.Context) -> a
    64:64:void setSize(java.lang.Object,int,int) -> a
    67:67:boolean isFinished(java.lang.Object) -> a
    71:71:void finish(java.lang.Object) -> b
    74:74:boolean onPull(java.lang.Object,float) -> a
    78:78:boolean onRelease(java.lang.Object) -> c
    82:82:boolean onAbsorb(java.lang.Object,int) -> a
    86:86:boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.g.i:
    92:92:java.lang.Object newEdgeEffect(android.content.Context) -> a
    96:97:void setSize(java.lang.Object,int,int) -> a
    100:100:boolean isFinished(java.lang.Object) -> a
    104:105:void finish(java.lang.Object) -> b
    108:108:boolean onPull(java.lang.Object,float) -> a
    112:112:boolean onRelease(java.lang.Object) -> c
    116:116:boolean onAbsorb(java.lang.Object,int) -> a
    120:120:boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.g.j:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean onAbsorb(java.lang.Object,int) -> a
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.g.k:
    30:30:java.lang.Object newEdgeEffect(android.content.Context) -> a
    34:35:void setSize(java.lang.Object,int,int) -> a
    38:38:boolean isFinished(java.lang.Object) -> a
    42:43:void finish(java.lang.Object) -> b
    46:47:boolean onPull(java.lang.Object,float) -> a
    51:53:boolean onRelease(java.lang.Object) -> c
    57:58:boolean onAbsorb(java.lang.Object,int) -> a
    62:62:boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.g.l:
    int mLayout -> l
    int mDropDownLayout -> m
    android.view.LayoutInflater mInflater -> n
    106:106:android.view.View newView$4b8874c5(android.view.ViewGroup) -> a
    111:111:android.view.View newDropDownView$4b8874c5(android.view.ViewGroup) -> b
    120:121:void setViewResource(int) -> a
    129:130:void setDropDownViewResource(int) -> b
android.support.v4.widget.ScrollerCompat -> android.support.v4.g.m:
    android.widget.Scroller mScroller -> a
    44:47:android.support.v4.widget.ScrollerCompat from(android.content.Context) -> a
    60:60:boolean isFinished() -> b
    69:69:int getDuration() -> c
    78:78:int getCurrX() -> d
    87:87:int getCurrY() -> e
    102:102:float getCurrVelocity() -> a
    111:111:boolean computeScrollOffset() -> f
    129:130:void startScroll(int,int,int,int) -> a
    146:147:void startScroll(int,int,int,int,int) -> a
    170:171:void fling(int,int,int,int,int,int,int,int) -> a
    179:180:void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.g.n:
    39:39:float getCurrVelocity() -> a
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.g.o:
    26:26:float getCurrVelocity(android.widget.Scroller) -> a
android.support.v4.widget.SearchViewCompat -> android.support.v4.g.p:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> a
    276:276:android.view.View newSearchView(android.content.Context) -> a
    290:291:void setSearchableInfo(android.view.View,android.content.ComponentName) -> a
    303:304:void setImeOptions(android.view.View,int) -> a
    316:317:void setInputType(android.view.View,int) -> b
    327:328:void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> a
    376:377:void setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> a
    408:408:java.lang.CharSequence getQuery(android.view.View) -> a
    421:422:void setQuery(android.view.View,java.lang.CharSequence,boolean) -> a
    432:433:void setQueryHint(android.view.View,java.lang.CharSequence) -> a
    447:448:void setIconified(android.view.View,boolean) -> a
    458:458:boolean isIconified(android.view.View) -> b
    471:472:void setSubmitButtonEnabled(android.view.View,boolean) -> b
    481:481:boolean isSubmitButtonEnabled(android.view.View) -> c
    500:501:void setQueryRefinementEnabled(android.view.View,boolean) -> c
    509:509:boolean isQueryRefinementEnabled(android.view.View) -> d
    517:518:void setMaxWidth(android.view.View,int) -> c
    30:30:android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> a
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat -> android.support.v4.g.q:
    java.lang.Object mListener -> a
    396:396:boolean onClose() -> a
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.g.r:
    java.lang.Object mListener -> a
    353:353:boolean onQueryTextSubmit$552c4dfd() -> a
    365:365:boolean onQueryTextChange$552c4dfd() -> b
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.g.s:
    139:139:android.view.View newSearchView(android.content.Context) -> a
    144:145:void setSearchableInfo(android.view.View,android.content.ComponentName) -> a
    149:149:java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> a
    164:165:void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> a
    169:169:java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> a
    180:181:void setOnCloseListener(java.lang.Object,java.lang.Object) -> b
    185:185:java.lang.CharSequence getQuery(android.view.View) -> a
    190:191:void setQuery(android.view.View,java.lang.CharSequence,boolean) -> a
    195:196:void setQueryHint(android.view.View,java.lang.CharSequence) -> a
    200:201:void setIconified(android.view.View,boolean) -> a
    205:205:boolean isIconified(android.view.View) -> b
    210:211:void setSubmitButtonEnabled(android.view.View,boolean) -> b
    215:215:boolean isSubmitButtonEnabled(android.view.View) -> c
    220:221:void setQueryRefinementEnabled(android.view.View,boolean) -> c
    225:225:boolean isQueryRefinementEnabled(android.view.View) -> d
    230:231:void setMaxWidth(android.view.View,int) -> a
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.g.t:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> a
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> b
    153:153:boolean onQueryTextSubmit$552c4dfd() -> a
    157:157:boolean onQueryTextChange$552c4dfd() -> b
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2 -> android.support.v4.g.u:
    android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat val$listener -> a
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> b
    173:173:boolean onClose() -> a
android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl -> android.support.v4.g.v:
    238:238:android.view.View newSearchView(android.content.Context) -> a
    243:244:void setImeOptions(android.view.View,int) -> b
    248:249:void setInputType(android.view.View,int) -> c
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.g.w:
    android.view.View newSearchView(android.content.Context) -> a
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> a
    void setImeOptions(android.view.View,int) -> b
    void setInputType(android.view.View,int) -> c
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> a
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> a
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> a
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> b
    java.lang.CharSequence getQuery(android.view.View) -> a
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> a
    void setQueryHint(android.view.View,java.lang.CharSequence) -> a
    void setIconified(android.view.View,boolean) -> a
    boolean isIconified(android.view.View) -> b
    void setSubmitButtonEnabled(android.view.View,boolean) -> b
    boolean isSubmitButtonEnabled(android.view.View) -> c
    void setQueryRefinementEnabled(android.view.View,boolean) -> c
    boolean isQueryRefinementEnabled(android.view.View) -> d
    void setMaxWidth(android.view.View,int) -> a
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.g.x:
    57:57:android.view.View newSearchView(android.content.Context) -> a
    62:62:void setSearchableInfo(android.view.View,android.content.ComponentName) -> a
    66:66:void setImeOptions(android.view.View,int) -> b
    70:70:void setInputType(android.view.View,int) -> c
    74:74:java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> a
    79:79:void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> a
    83:83:java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> a
    88:88:void setOnCloseListener(java.lang.Object,java.lang.Object) -> b
    92:92:java.lang.CharSequence getQuery(android.view.View) -> a
    97:97:void setQuery(android.view.View,java.lang.CharSequence,boolean) -> a
    101:101:void setQueryHint(android.view.View,java.lang.CharSequence) -> a
    105:105:void setIconified(android.view.View,boolean) -> a
    109:109:boolean isIconified(android.view.View) -> b
    114:114:void setSubmitButtonEnabled(android.view.View,boolean) -> b
    118:118:boolean isSubmitButtonEnabled(android.view.View) -> c
    123:123:void setQueryRefinementEnabled(android.view.View,boolean) -> c
    127:127:boolean isQueryRefinementEnabled(android.view.View) -> d
    132:132:void setMaxWidth(android.view.View,int) -> a
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.g.y:
    42:42:android.view.View newSearchView(android.content.Context) -> a
    46:50:void setSearchableInfo(android.view.View,android.content.ComponentName) -> a
    53:53:java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> a
    67:68:void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> a
    71:71:java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge) -> a
    80:81:void setOnCloseListener(java.lang.Object,java.lang.Object) -> b
    84:84:java.lang.CharSequence getQuery(android.view.View) -> a
    88:89:void setQuery(android.view.View,java.lang.CharSequence,boolean) -> a
    92:93:void setQueryHint(android.view.View,java.lang.CharSequence) -> a
    96:97:void setIconified(android.view.View,boolean) -> a
    100:100:boolean isIconified(android.view.View) -> b
    104:105:void setSubmitButtonEnabled(android.view.View,boolean) -> b
    108:108:boolean isSubmitButtonEnabled(android.view.View) -> c
    112:113:void setQueryRefinementEnabled(android.view.View,boolean) -> c
    116:116:boolean isQueryRefinementEnabled(android.view.View) -> d
    120:121:void setMaxWidth(android.view.View,int) -> a
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.g.z:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> a
    56:56:boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    61:61:boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$2 -> android.support.v4.g.aa:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge val$listener -> a
    74:74:boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge -> android.support.v4.g.ab:
    boolean onClose() -> a
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.g.ac:
    boolean onQueryTextSubmit$552c4dfd() -> a
    boolean onQueryTextChange$552c4dfd() -> b
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.g.ad:
    43:43:android.view.View newSearchView(android.content.Context) -> a
    47:48:void setImeOptions(android.view.View,int) -> a
    51:52:void setInputType(android.view.View,int) -> b
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.g.ae:
    37:39:void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.g.af:
    int[] mFrom -> l
    int[] mTo -> m
    int mStringConversionColumn -> o
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> p
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> q
    java.lang.String[] mOriginalFrom -> n
    121:151:void bindView$4693bf34(android.view.View,android.database.Cursor) -> a
    162:162:android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> c
    175:176:void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> a
    195:199:void setViewImage(android.widget.ImageView,java.lang.String) -> a
    213:214:void setViewText(android.widget.TextView,java.lang.String) -> a
    228:228:int getStringConversionColumn() -> d
    246:247:void setStringConversionColumn(int) -> a
    262:262:android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> e
    278:279:void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> a
    294:300:java.lang.CharSequence convertToString(android.database.Cursor) -> c
    310:322:void findColumns(java.lang.String[]) -> a
    326:329:android.database.Cursor swapCursor(android.database.Cursor) -> b
    344:348:void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> a
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.g.ag:
    java.lang.CharSequence convertToString$57f82248() -> a
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.g.ah:
    boolean setViewValue$2e05ad4d() -> a
com.badlogic.gdx.Application -> com.badlogic.gdx.a:
    int LOG_NONE -> a
    int LOG_DEBUG -> b
    int LOG_INFO -> c
    int LOG_ERROR -> d
    com.badlogic.gdx.ApplicationListener getApplicationListener() -> getApplicationListener
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    com.badlogic.gdx.Audio getAudio() -> getAudio
    com.badlogic.gdx.Input getInput() -> getInput
    com.badlogic.gdx.Files getFiles() -> getFiles
    com.badlogic.gdx.Net getNet() -> getNet
    void log(java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.Exception) -> log
    void error(java.lang.String,java.lang.String) -> error
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    void debug(java.lang.String,java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    void setLogLevel(int) -> setLogLevel
    com.badlogic.gdx.Application$ApplicationType getType() -> getType
    int getVersion() -> getVersion
    long getJavaHeap() -> getJavaHeap
    long getNativeHeap() -> getNativeHeap
    com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    void postRunnable(java.lang.Runnable) -> postRunnable
    void exit() -> exit
    void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
com.badlogic.gdx.Application$ApplicationType -> com.badlogic.gdx.b:
    com.badlogic.gdx.Application$ApplicationType Android -> a
    com.badlogic.gdx.Application$ApplicationType Desktop -> b
    com.badlogic.gdx.Application$ApplicationType Applet -> c
    com.badlogic.gdx.Application$ApplicationType WebGL -> d
    com.badlogic.gdx.Application$ApplicationType iOS -> e
    com.badlogic.gdx.Application$ApplicationType[] $VALUES -> f
    101:101:com.badlogic.gdx.Application$ApplicationType[] values() -> values
    101:101:com.badlogic.gdx.Application$ApplicationType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.ApplicationAdapter -> com.badlogic.gdx.c:
    24:24:void create() -> a
    28:28:void resize(int,int) -> a
    32:32:void render() -> b
    36:36:void pause() -> c
    40:40:void resume() -> d
    44:44:void dispose() -> e
com.badlogic.gdx.ApplicationListener -> com.badlogic.gdx.d:
    void create() -> a
    void resize(int,int) -> a
    void render() -> b
    void pause() -> c
    void resume() -> d
    void dispose() -> e
com.badlogic.gdx.Audio -> com.badlogic.gdx.e:
    com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean) -> newAudioDevice
    com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean) -> newAudioRecorder
    com.badlogic.gdx.audio.Sound newSound(com.badlogic.gdx.files.FileHandle) -> newSound
    com.badlogic.gdx.audio.Music newMusic(com.badlogic.gdx.files.FileHandle) -> newMusic
com.badlogic.gdx.Files -> com.badlogic.gdx.f:
    com.badlogic.gdx.files.FileHandle getFileHandle(java.lang.String,com.badlogic.gdx.Files$FileType) -> getFileHandle
    com.badlogic.gdx.files.FileHandle classpath(java.lang.String) -> classpath
    com.badlogic.gdx.files.FileHandle internal(java.lang.String) -> internal
    com.badlogic.gdx.files.FileHandle external(java.lang.String) -> external
    com.badlogic.gdx.files.FileHandle absolute(java.lang.String) -> absolute
    com.badlogic.gdx.files.FileHandle local(java.lang.String) -> local
    java.lang.String getExternalStoragePath() -> getExternalStoragePath
    boolean isExternalStorageAvailable() -> isExternalStorageAvailable
    java.lang.String getLocalStoragePath() -> getLocalStoragePath
    boolean isLocalStorageAvailable() -> isLocalStorageAvailable
com.badlogic.gdx.Files$FileType -> com.badlogic.gdx.g:
    com.badlogic.gdx.Files$FileType Classpath -> a
    com.badlogic.gdx.Files$FileType Internal -> b
    com.badlogic.gdx.Files$FileType External -> c
    com.badlogic.gdx.Files$FileType Absolute -> d
    com.badlogic.gdx.Files$FileType Local -> e
    com.badlogic.gdx.Files$FileType[] $VALUES -> f
    29:29:com.badlogic.gdx.Files$FileType[] values() -> values
    29:29:com.badlogic.gdx.Files$FileType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Game -> com.badlogic.gdx.h:
    com.badlogic.gdx.Screen screen -> a
    31:32:void dispose() -> e
    36:37:void pause() -> c
    41:42:void resume() -> d
    46:47:void render() -> b
    51:52:void resize(int,int) -> a
    59:65:void setScreen(com.badlogic.gdx.Screen) -> a
    69:69:com.badlogic.gdx.Screen getScreen() -> f
com.badlogic.gdx.Gdx -> com.badlogic.gdx.i:
    com.badlogic.gdx.Application app -> a
    com.badlogic.gdx.Graphics graphics -> b
    com.badlogic.gdx.Audio audio -> c
    com.badlogic.gdx.Input input -> d
    com.badlogic.gdx.Files files -> e
    com.badlogic.gdx.Net net -> f
    com.badlogic.gdx.graphics.GLCommon gl -> g
    com.badlogic.gdx.graphics.GL10 gl10 -> h
    com.badlogic.gdx.graphics.GL11 gl11 -> i
    com.badlogic.gdx.graphics.GL20 gl20 -> j
com.badlogic.gdx.Graphics -> com.badlogic.gdx.j:
    boolean isGL11Available() -> isGL11Available
    boolean isGL20Available() -> isGL20Available
    com.badlogic.gdx.graphics.GLCommon getGLCommon() -> getGLCommon
    com.badlogic.gdx.graphics.GL10 getGL10() -> getGL10
    com.badlogic.gdx.graphics.GL11 getGL11() -> getGL11
    com.badlogic.gdx.graphics.GL20 getGL20() -> getGL20
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    float getDeltaTime() -> getDeltaTime
    float getRawDeltaTime() -> getRawDeltaTime
    int getFramesPerSecond() -> getFramesPerSecond
    com.badlogic.gdx.Graphics$GraphicsType getType() -> getType
    float getPpiX() -> getPpiX
    float getPpiY() -> getPpiY
    float getPpcX() -> getPpcX
    float getPpcY() -> getPpcY
    float getDensity() -> getDensity
    boolean supportsDisplayModeChange() -> supportsDisplayModeChange
    com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes() -> getDisplayModes
    com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> getDesktopDisplayMode
    boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode) -> setDisplayMode
    boolean setDisplayMode(int,int,boolean) -> setDisplayMode
    void setTitle(java.lang.String) -> setTitle
    void setVSync(boolean) -> setVSync
    com.badlogic.gdx.Graphics$BufferFormat getBufferFormat() -> getBufferFormat
    boolean supportsExtension(java.lang.String) -> supportsExtension
    void setContinuousRendering(boolean) -> setContinuousRendering
    boolean isContinuousRendering() -> isContinuousRendering
    void requestRendering() -> requestRendering
    boolean isFullscreen() -> isFullscreen
com.badlogic.gdx.Graphics$BufferFormat -> com.badlogic.gdx.k:
    int r -> a
    int g -> b
    int b -> c
    int a -> d
    int depth -> e
    int stencil -> f
    int samples -> g
    boolean coverageSampling -> h
    109:109:java.lang.String toString() -> toString
com.badlogic.gdx.Graphics$DisplayMode -> com.badlogic.gdx.l:
    int width -> width
    int height -> height
    int refreshRate -> refreshRate
    int bitsPerPixel -> bitsPerPixel
    82:82:java.lang.String toString() -> toString
com.badlogic.gdx.Graphics$GraphicsType -> com.badlogic.gdx.m:
    com.badlogic.gdx.Graphics$GraphicsType AndroidGL -> a
    com.badlogic.gdx.Graphics$GraphicsType LWJGL -> b
    com.badlogic.gdx.Graphics$GraphicsType Angle -> c
    com.badlogic.gdx.Graphics$GraphicsType WebGL -> d
    com.badlogic.gdx.Graphics$GraphicsType iOSGL -> e
    com.badlogic.gdx.Graphics$GraphicsType JGLFW -> f
    com.badlogic.gdx.Graphics$GraphicsType[] $VALUES -> g
    61:61:com.badlogic.gdx.Graphics$GraphicsType[] values() -> values
    61:61:com.badlogic.gdx.Graphics$GraphicsType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.HttpParametersUtils -> com.badlogic.gdx.n:
    java.lang.String defaultEncoding -> a
    java.lang.String nameValueSeparator -> b
    java.lang.String parameterSeparator -> c
    22:31:java.lang.String convertHttpParameters(java.util.Map) -> a
    36:38:java.lang.String encode(java.lang.String,java.lang.String) -> a
com.badlogic.gdx.Input -> com.badlogic.gdx.o:
    float getAccelerometerX() -> getAccelerometerX
    float getAccelerometerY() -> getAccelerometerY
    float getAccelerometerZ() -> getAccelerometerZ
    int getX() -> getX
    int getX(int) -> getX
    int getDeltaX() -> getDeltaX
    int getDeltaX(int) -> getDeltaX
    int getY() -> getY
    int getY(int) -> getY
    int getDeltaY() -> getDeltaY
    int getDeltaY(int) -> getDeltaY
    boolean isTouched() -> isTouched
    boolean justTouched() -> justTouched
    boolean isTouched(int) -> isTouched
    boolean isButtonPressed(int) -> isButtonPressed
    boolean isKeyPressed(int) -> isKeyPressed
    void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getTextInput
    void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getPlaceholderTextInput
    void setOnscreenKeyboardVisible(boolean) -> setOnscreenKeyboardVisible
    void vibrate(int) -> vibrate
    void vibrate(long[],int) -> vibrate
    void cancelVibrate() -> cancelVibrate
    float getAzimuth() -> getAzimuth
    float getPitch() -> getPitch
    float getRoll() -> getRoll
    void getRotationMatrix(float[]) -> getRotationMatrix
    long getCurrentEventTime() -> getCurrentEventTime
    void setCatchBackKey(boolean) -> setCatchBackKey
    void setCatchMenuKey(boolean) -> setCatchMenuKey
    void setInputProcessor(com.badlogic.gdx.InputProcessor) -> setInputProcessor
    com.badlogic.gdx.InputProcessor getInputProcessor() -> getInputProcessor
    boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral) -> isPeripheralAvailable
    int getRotation() -> getRotation
    com.badlogic.gdx.Input$Orientation getNativeOrientation() -> getNativeOrientation
    void setCursorCatched(boolean) -> setCursorCatched
    boolean isCursorCatched() -> isCursorCatched
    void setCursorPosition(int,int) -> setCursorPosition
com.badlogic.gdx.Input$Buttons -> com.badlogic.gdx.p:
    int LEFT -> a
    int RIGHT -> b
    int MIDDLE -> c
com.badlogic.gdx.Input$Keys -> com.badlogic.gdx.q:
    int ANY_KEY -> a
    int NUM_0 -> b
    int NUM_1 -> c
    int NUM_2 -> d
    int NUM_3 -> e
    int NUM_4 -> f
    int NUM_5 -> g
    int NUM_6 -> h
    int NUM_7 -> i
    int NUM_8 -> j
    int NUM_9 -> k
    int A -> l
    int ALT_LEFT -> m
    int ALT_RIGHT -> n
    int APOSTROPHE -> o
    int AT -> p
    int B -> q
    int BACK -> r
    int BACKSLASH -> s
    int C -> t
    int CALL -> u
    int CAMERA -> v
    int CLEAR -> w
    int COMMA -> x
    int D -> y
    int DEL -> z
    int BACKSPACE -> A
    int FORWARD_DEL -> B
    int DPAD_CENTER -> C
    int DPAD_DOWN -> D
    int DPAD_LEFT -> E
    int DPAD_RIGHT -> F
    int DPAD_UP -> G
    int CENTER -> H
    int DOWN -> I
    int LEFT -> J
    int RIGHT -> K
    int UP -> L
    int E -> M
    int ENDCALL -> N
    int ENTER -> O
    int ENVELOPE -> P
    int EQUALS -> Q
    int EXPLORER -> R
    int F -> S
    int FOCUS -> T
    int G -> U
    int GRAVE -> V
    int H -> W
    int HEADSETHOOK -> X
    int HOME -> Y
    int I -> Z
    int J -> aa
    int K -> ab
    int L -> ac
    int LEFT_BRACKET -> ad
    int M -> ae
    int MEDIA_FAST_FORWARD -> af
    int MEDIA_NEXT -> ag
    int MEDIA_PLAY_PAUSE -> ah
    int MEDIA_PREVIOUS -> ai
    int MEDIA_REWIND -> aj
    int MEDIA_STOP -> ak
    int MENU -> al
    int MINUS -> am
    int MUTE -> an
    int N -> ao
    int NOTIFICATION -> ap
    int NUM -> aq
    int O -> ar
    int P -> as
    int PERIOD -> at
    int PLUS -> au
    int POUND -> av
    int POWER -> aw
    int Q -> ax
    int R -> ay
    int RIGHT_BRACKET -> az
    int S -> aA
    int SEARCH -> aB
    int SEMICOLON -> aC
    int SHIFT_LEFT -> aD
    int SHIFT_RIGHT -> aE
    int SLASH -> aF
    int SOFT_LEFT -> aG
    int SOFT_RIGHT -> aH
    int SPACE -> aI
    int STAR -> aJ
    int SYM -> aK
    int T -> aL
    int TAB -> aM
    int U -> aN
    int UNKNOWN -> aO
    int V -> aP
    int VOLUME_DOWN -> aQ
    int VOLUME_UP -> aR
    int W -> aS
    int X -> aT
    int Y -> aU
    int Z -> aV
    int META_ALT_LEFT_ON -> aW
    int META_ALT_ON -> aX
    int META_ALT_RIGHT_ON -> aY
    int META_SHIFT_LEFT_ON -> aZ
    int META_SHIFT_ON -> ba
    int META_SHIFT_RIGHT_ON -> bb
    int META_SYM_ON -> bc
    int CONTROL_LEFT -> bd
    int CONTROL_RIGHT -> be
    int ESCAPE -> bf
    int END -> bg
    int INSERT -> bh
    int PAGE_UP -> bi
    int PAGE_DOWN -> bj
    int PICTSYMBOLS -> bk
    int SWITCH_CHARSET -> bl
    int BUTTON_CIRCLE -> bm
    int BUTTON_A -> bn
    int BUTTON_B -> bo
    int BUTTON_C -> bp
    int BUTTON_X -> bq
    int BUTTON_Y -> br
    int BUTTON_Z -> bs
    int BUTTON_L1 -> bt
    int BUTTON_R1 -> bu
    int BUTTON_L2 -> bv
    int BUTTON_R2 -> bw
    int BUTTON_THUMBL -> bx
    int BUTTON_THUMBR -> by
    int BUTTON_START -> bz
    int BUTTON_SELECT -> bA
    int BUTTON_MODE -> bB
    int COLON -> bC
    int F1 -> bD
    int F2 -> bE
    int F3 -> bF
    int F4 -> bG
    int F5 -> bH
    int F6 -> bI
    int F7 -> bJ
    int F8 -> bK
    int F9 -> bL
    int F10 -> bM
    int F11 -> bN
    int F12 -> bO
com.badlogic.gdx.Input$Orientation -> com.badlogic.gdx.r:
    com.badlogic.gdx.Input$Orientation Landscape -> a
    com.badlogic.gdx.Input$Orientation Portrait -> b
    com.badlogic.gdx.Input$Orientation[] $VALUES -> c
    413:413:com.badlogic.gdx.Input$Orientation[] values() -> values
    413:413:com.badlogic.gdx.Input$Orientation valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Input$Peripheral -> com.badlogic.gdx.s:
    com.badlogic.gdx.Input$Peripheral HardwareKeyboard -> a
    com.badlogic.gdx.Input$Peripheral OnscreenKeyboard -> b
    com.badlogic.gdx.Input$Peripheral MultitouchScreen -> c
    com.badlogic.gdx.Input$Peripheral Accelerometer -> d
    com.badlogic.gdx.Input$Peripheral Compass -> e
    com.badlogic.gdx.Input$Peripheral Vibrator -> f
    com.badlogic.gdx.Input$Peripheral[] $VALUES -> g
    232:232:com.badlogic.gdx.Input$Peripheral[] values() -> values
    232:232:com.badlogic.gdx.Input$Peripheral valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Input$TextInputListener -> com.badlogic.gdx.t:
    void input$552c4e01() -> a
    void canceled() -> b
com.badlogic.gdx.InputAdapter -> com.badlogic.gdx.u:
    24:24:boolean keyDown(int) -> a
    28:28:boolean keyUp(int) -> b
    32:32:boolean keyTyped(char) -> a
    36:36:boolean touchDown(int,int,int,int) -> a
    40:40:boolean touchUp(int,int,int,int) -> b
    44:44:boolean touchDragged(int,int,int) -> a
    49:49:boolean mouseMoved(int,int) -> a
    54:54:boolean scrolled(int) -> c
com.badlogic.gdx.InputMultiplexer -> com.badlogic.gdx.v:
    com.badlogic.gdx.utils.Array processors -> a
    36:37:void addProcessor(int,com.badlogic.gdx.InputProcessor) -> a
    40:41:void removeProcessor(int) -> d
    44:45:void addProcessor(com.badlogic.gdx.InputProcessor) -> a
    48:49:void removeProcessor(com.badlogic.gdx.InputProcessor) -> b
    53:53:int size() -> a
    57:58:void clear() -> b
    61:62:void setProcessors(com.badlogic.gdx.utils.Array) -> a
    65:65:com.badlogic.gdx.utils.Array getProcessors() -> c
    69:71:boolean keyDown(int) -> a
    75:77:boolean keyUp(int) -> b
    81:83:boolean keyTyped(char) -> a
    87:89:boolean touchDown(int,int,int,int) -> a
    93:95:boolean touchUp(int,int,int,int) -> b
    99:101:boolean touchDragged(int,int,int) -> a
    106:108:boolean mouseMoved(int,int) -> a
    113:115:boolean scrolled(int) -> c
com.badlogic.gdx.InputProcessor -> com.badlogic.gdx.w:
    boolean keyDown(int) -> a
    boolean keyUp(int) -> b
    boolean keyTyped(char) -> a
    boolean touchDown(int,int,int,int) -> a
    boolean touchUp(int,int,int,int) -> b
    boolean touchDragged(int,int,int) -> a
    boolean mouseMoved(int,int) -> a
    boolean scrolled(int) -> c
com.badlogic.gdx.InputProcessorQueue -> com.badlogic.gdx.x:
    int KEY_DOWN -> a
    int KEY_UP -> b
    int KEY_TYPED -> c
    int TOUCH_DOWN -> d
    int TOUCH_UP -> e
    int TOUCH_DRAGGED -> f
    int MOUSE_MOVED -> g
    int SCROLLED -> h
    com.badlogic.gdx.InputProcessor processor -> i
    com.badlogic.gdx.utils.IntArray queue -> j
    com.badlogic.gdx.utils.IntArray processingQueue -> k
    long currentEventTime -> l
    31:32:void setProcessor(com.badlogic.gdx.InputProcessor) -> a
    35:35:com.badlogic.gdx.InputProcessor getProcessor() -> a
    39:78:void drain() -> b
    81:84:void queueTime() -> c
    87:90:boolean keyDown(int) -> a
    94:97:boolean keyUp(int) -> b
    101:104:boolean keyTyped(char) -> a
    108:114:boolean touchDown(int,int,int,int) -> a
    118:124:boolean touchUp(int,int,int,int) -> b
    128:133:boolean touchDragged(int,int,int) -> a
    137:141:boolean mouseMoved(int,int) -> a
    145:148:boolean scrolled(int) -> c
    152:152:long getCurrentEventTime() -> d
com.badlogic.gdx.LifecycleListener -> com.badlogic.gdx.y:
    void pause() -> a
    void resume() -> b
    void dispose() -> c
com.badlogic.gdx.Net -> com.badlogic.gdx.z:
    void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener) -> sendHttpRequest
    com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,int,com.badlogic.gdx.net.ServerSocketHints) -> newServerSocket
    com.badlogic.gdx.net.Socket newClientSocket(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.SocketHints) -> newClientSocket
    void openURI(java.lang.String) -> openURI
com.badlogic.gdx.Net$HttpMethods -> com.badlogic.gdx.aa:
    java.lang.String GET -> a
    java.lang.String POST -> b
com.badlogic.gdx.Net$HttpRequest -> com.badlogic.gdx.ab:
    java.lang.String httpMethod -> a
    java.lang.String url -> b
    java.util.Map headers -> c
    int timeOut -> d
    java.lang.String content -> e
    java.io.InputStream contentStream -> f
    long contentLength -> g
    144:145:void setUrl(java.lang.String) -> a
    152:153:void setHeader(java.lang.String,java.lang.String) -> a
    160:161:void setContent(java.lang.String) -> b
    166:168:void setContent(java.io.InputStream,long) -> a
    174:175:void setTimeOut(int) -> a
    180:180:int getTimeOut() -> a
    185:185:java.lang.String getMethod() -> b
    190:190:java.lang.String getUrl() -> c
    195:195:java.lang.String getContent() -> d
    200:200:java.io.InputStream getContentStream() -> e
    205:205:long getContentLength() -> g
    210:210:java.util.Map getHeaders() -> f
com.badlogic.gdx.Net$HttpResponse -> com.badlogic.gdx.ac:
    byte[] getResult() -> a
    java.lang.String getResultAsString() -> b
    java.io.InputStream getResultAsStream() -> c
    com.badlogic.gdx.net.HttpStatus getStatus() -> d
com.badlogic.gdx.Net$HttpResponseListener -> com.badlogic.gdx.ad:
    void handleHttpResponse$49dcdf80() -> a
    void failed$786b7c60() -> b
com.badlogic.gdx.Net$Protocol -> com.badlogic.gdx.ae:
    com.badlogic.gdx.Net$Protocol TCP -> a
    com.badlogic.gdx.Net$Protocol[] $VALUES -> b
    256:256:com.badlogic.gdx.Net$Protocol[] values() -> values
    256:256:com.badlogic.gdx.Net$Protocol valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Preferences -> com.badlogic.gdx.af:
    void putBoolean(java.lang.String,boolean) -> putBoolean
    void putInteger(java.lang.String,int) -> putInteger
    void putLong(java.lang.String,long) -> putLong
    void putFloat(java.lang.String,float) -> putFloat
    void putString(java.lang.String,java.lang.String) -> putString
    void put(java.util.Map) -> put
    boolean getBoolean(java.lang.String) -> getBoolean
    int getInteger(java.lang.String) -> getInteger
    long getLong(java.lang.String) -> getLong
    float getFloat(java.lang.String) -> getFloat
    java.lang.String getString(java.lang.String) -> getString
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    int getInteger(java.lang.String,int) -> getInteger
    long getLong(java.lang.String,long) -> getLong
    float getFloat(java.lang.String,float) -> getFloat
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    java.util.Map get() -> get
    boolean contains(java.lang.String) -> contains
    void clear() -> clear
    void remove(java.lang.String) -> remove
    void flush() -> flush
com.badlogic.gdx.Screen -> com.badlogic.gdx.ag:
    void render(float) -> a
    void resize(int,int) -> b
    void show() -> a
    void hide() -> b
    void pause() -> c
    void resume() -> d
    void dispose() -> e
com.badlogic.gdx.StreamUtils -> com.badlogic.gdx.ah:
    20:21:void copyStream(java.io.InputStream,java.io.OutputStream) -> a
    26:31:void copyStream$1ade3353(java.io.InputStream,java.io.OutputStream) -> b
com.badlogic.gdx.Version -> com.badlogic.gdx.ai:
    java.lang.String VERSION -> a
com.badlogic.gdx.assets.AssetDescriptor -> com.badlogic.gdx.a.a:
    java.lang.String fileName -> a
    java.lang.Class type -> b
    com.badlogic.gdx.assets.AssetLoaderParameters params -> c
    39:43:java.lang.String toString() -> toString
com.badlogic.gdx.assets.AssetErrorListener -> com.badlogic.gdx.a.b:
    void error$6a21af97() -> a
com.badlogic.gdx.assets.AssetLoaderParameters -> com.badlogic.gdx.a.c:
    com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback loadedCallback -> a
com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback -> com.badlogic.gdx.a.d:
    void finishedLoading$190c2c84(com.badlogic.gdx.assets.AssetManager,java.lang.String) -> a
com.badlogic.gdx.assets.AssetLoadingTask -> com.badlogic.gdx.a.e:
    com.badlogic.gdx.assets.AssetManager manager -> a
    com.badlogic.gdx.assets.AssetDescriptor assetDesc -> b
    com.badlogic.gdx.assets.loaders.AssetLoader loader -> c
    java.util.concurrent.ExecutorService threadPool -> d
    long startTime -> e
    boolean asyncDone -> f
    boolean dependenciesLoaded -> g
    com.badlogic.gdx.utils.Array dependencies -> h
    java.util.concurrent.Future depsFuture -> i
    java.util.concurrent.Future loadFuture -> j
    java.lang.Object asset -> k
    int ticks -> l
    boolean cancel -> m
    65:80:java.lang.Void call() -> c
    90:96:boolean update() -> a
    100:114:void handleSyncLoader() -> d
    117:150:void handleAsyncLoader() -> e
    153:153:java.lang.Object getAsset() -> b
    36:36:java.lang.Object call() -> call
com.badlogic.gdx.assets.AssetManager -> com.badlogic.gdx.a.f:
    com.badlogic.gdx.utils.ObjectMap assets -> a
    com.badlogic.gdx.utils.ObjectMap assetTypes -> b
    com.badlogic.gdx.utils.ObjectMap assetDependencies -> c
    com.badlogic.gdx.utils.ObjectMap loaders -> d
    com.badlogic.gdx.utils.Array loadQueue -> e
    java.util.concurrent.ExecutorService threadPool -> f
    java.util.Stack tasks -> g
    com.badlogic.gdx.assets.AssetErrorListener listener -> h
    int loaded -> i
    int toLoad -> j
    com.badlogic.gdx.utils.Logger log -> k
    96:103:java.lang.Object get(java.lang.String) -> c
    110:116:java.lang.Object get(java.lang.String,java.lang.Class) -> a
    123:179:void unload(java.lang.String) -> a
    184:190:boolean containsAsset(java.lang.Object) -> b
    196:203:java.lang.String getAssetFileName(java.lang.Object) -> a
    209:210:boolean isLoaded(java.lang.String) -> d
    216:220:boolean isLoaded(java.lang.String,java.lang.Class) -> c
    227:227:com.badlogic.gdx.assets.loaders.AssetLoader getLoader(java.lang.Class) -> a
    236:247:com.badlogic.gdx.assets.loaders.AssetLoader getLoader(java.lang.Class,java.lang.String) -> a
    254:255:void load(java.lang.String,java.lang.Class) -> b
    262:300:void load(java.lang.String,java.lang.Class,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    305:306:void load(com.badlogic.gdx.assets.AssetDescriptor) -> a
    311:321:void disposeDependencies(java.lang.String) -> e
    327:338:boolean update() -> b
    347:352:boolean update(int) -> a
    357:361:void finishLoading() -> a
    365:385:void injectDependency(java.lang.String,com.badlogic.gdx.assets.AssetDescriptor) -> a
    390:405:void nextTask() -> c
    410:413:void addTask(com.badlogic.gdx.assets.AssetDescriptor) -> b
    418:427:void addAsset(java.lang.String,java.lang.Class,java.lang.Object) -> a
    432:456:boolean updateTask() -> d
    461:470:void incrementRefCountedDependencies(java.lang.String) -> f
    475:497:void handleTaskError(java.lang.Throwable) -> a
    505:506:void setLoader(java.lang.Class,com.badlogic.gdx.assets.loaders.AssetLoader) -> a
    514:520:void setLoader$3943fc0b(java.lang.Class,com.badlogic.gdx.assets.loaders.AssetLoader) -> b
    524:524:int getLoadedAssets() -> e
    529:529:int getQueuedAssets() -> f
    534:535:float getProgress() -> g
    541:542:void setErrorListener(com.badlogic.gdx.assets.AssetErrorListener) -> a
    546:554:void dispose() -> dispose
    558:596:void clear() -> h
    600:600:com.badlogic.gdx.utils.Logger getLogger() -> i
    606:608:int getReferenceCount(java.lang.String) -> b
    614:617:void setReferenceCount(java.lang.String,int) -> a
    621:645:java.lang.String getDiagnostics() -> j
    650:650:com.badlogic.gdx.utils.Array getAssetNames() -> k
    655:655:com.badlogic.gdx.utils.Array getDependencies(java.lang.String) -> g
    660:660:java.lang.Class getAssetType(java.lang.String) -> h
com.badlogic.gdx.assets.AssetManager$1 -> com.badlogic.gdx.a.g:
    com.badlogic.gdx.assets.AssetManager this$0 -> a
    86:88:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.badlogic.gdx.assets.RefCountedContainer -> com.badlogic.gdx.a.h:
    java.lang.Object object -> a
    int refCount -> b
    29:30:void incRefCount() -> a
    33:34:void decRefCount() -> b
    37:37:int getRefCount() -> c
    41:42:void setRefCount(int) -> a
    45:45:java.lang.Object getObject$659effca() -> d
    49:50:void setObject(java.lang.Object) -> a
com.badlogic.gdx.assets.loaders.AssetLoader -> com.badlogic.gdx.a.a.a:
    com.badlogic.gdx.assets.loaders.FileHandleResolver resolver -> a
    42:42:com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> a
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader -> com.badlogic.gdx.a.a.b:
    void loadAsync$4de814fd(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> b
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.BitmapFontLoader -> com.badlogic.gdx.a.a.c:
    com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData data -> a
    43:51:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter) -> a
    56:56:void loadAsync$7f698807() -> a
    60:63:com.badlogic.gdx.graphics.g2d.BitmapFont loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter) -> a
    34:34:java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    34:34:void loadAsync$4de814fd(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> b
    34:34:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter -> com.badlogic.gdx.a.a.d:
    boolean flip -> b
    com.badlogic.gdx.graphics.Texture$TextureFilter minFitler -> c
    com.badlogic.gdx.graphics.Texture$TextureFilter maxFilter -> d
    com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData bitmapFontData -> e
com.badlogic.gdx.assets.loaders.FileHandleResolver -> com.badlogic.gdx.a.a.e:
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> a
com.badlogic.gdx.assets.loaders.MusicLoader -> com.badlogic.gdx.a.a.f:
    35:35:com.badlogic.gdx.audio.Music load$28f9e48c(java.lang.String) -> b
    40:40:com.badlogic.gdx.utils.Array getDependencies$338dea27() -> a
    28:28:java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    28:28:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter -> com.badlogic.gdx.a.a.g:
com.badlogic.gdx.assets.loaders.PixmapLoader -> com.badlogic.gdx.a.a.h:
    com.badlogic.gdx.graphics.Pixmap pixmap -> a
    36:38:void loadAsync$2cb840d9(java.lang.String) -> b
    42:42:com.badlogic.gdx.graphics.Pixmap loadSync$1b9cdff9() -> a
    47:47:com.badlogic.gdx.utils.Array getDependencies$4c58bcf1() -> b
    27:27:java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    27:27:void loadAsync$4de814fd(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> b
    27:27:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter -> com.badlogic.gdx.a.a.i:
com.badlogic.gdx.assets.loaders.SkinLoader -> com.badlogic.gdx.a.a.j:
    39:44:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter) -> a
    49:49:void loadAsync$5ad129a7() -> a
    54:59:com.badlogic.gdx.scenes.scene2d.ui.Skin loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter) -> a
    32:32:java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    32:32:void loadAsync$4de814fd(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> b
    32:32:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter -> com.badlogic.gdx.a.a.k:
    java.lang.String textureAtlasPath -> b
com.badlogic.gdx.assets.loaders.SoundLoader -> com.badlogic.gdx.a.a.l:
    35:35:com.badlogic.gdx.audio.Sound load$73e4a8a(java.lang.String) -> b
    40:40:com.badlogic.gdx.utils.Array getDependencies$4b6001d3() -> a
    28:28:java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    28:28:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter -> com.badlogic.gdx.a.a.m:
com.badlogic.gdx.assets.loaders.SynchronousAssetLoader -> com.badlogic.gdx.a.a.n:
    java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.TextureAtlasLoader -> com.badlogic.gdx.a.a.o:
    com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData data -> a
    43:48:com.badlogic.gdx.graphics.g2d.TextureAtlas load$650c4c2(com.badlogic.gdx.assets.AssetManager) -> a
    53:72:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter) -> a
    34:34:java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    34:34:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter -> com.badlogic.gdx.a.a.p:
    boolean flip -> b
com.badlogic.gdx.assets.loaders.TextureLoader -> com.badlogic.gdx.a.a.q:
    com.badlogic.gdx.graphics.TextureData data -> a
    com.badlogic.gdx.graphics.Texture texture -> b
    49:76:void loadAsync$3517772d(java.lang.String,com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter) -> a
    80:90:com.badlogic.gdx.graphics.Texture loadSync$1c89116b(com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter) -> a
    95:95:com.badlogic.gdx.utils.Array getDependencies$36d95cbb() -> a
    39:39:java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    39:39:void loadAsync$4de814fd(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> b
    39:39:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter -> com.badlogic.gdx.a.a.r:
    com.badlogic.gdx.graphics.Pixmap$Format format -> b
    boolean genMipMaps -> c
    com.badlogic.gdx.graphics.Texture texture -> d
    com.badlogic.gdx.graphics.TextureData textureData -> e
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> f
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> g
    com.badlogic.gdx.graphics.Texture$TextureWrap wrapU -> h
    com.badlogic.gdx.graphics.Texture$TextureWrap wrapV -> i
com.badlogic.gdx.assets.loaders.resolvers.ExternalFileHandleResolver -> com.badlogic.gdx.a.a.a.a:
    26:26:com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> a
com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver -> com.badlogic.gdx.a.a.a.b:
    26:26:com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> a
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver -> com.badlogic.gdx.a.a.a.c:
    com.badlogic.gdx.assets.loaders.FileHandleResolver baseResolver -> a
    com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution[] descriptors -> b
    46:50:com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> a
    54:54:java.lang.String resolve(com.badlogic.gdx.files.FileHandle,java.lang.String) -> a
    58:76:com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution choose(com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution[]) -> a
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution -> com.badlogic.gdx.a.a.a.d:
    int portraitWidth -> a
    int portraitHeight -> b
    java.lang.String suffix -> c
com.badlogic.gdx.audio.AudioDevice -> com.badlogic.gdx.b.a:
    boolean isMono() -> isMono
    void writeSamples(short[],int,int) -> writeSamples
    void writeSamples(float[],int,int) -> writeSamples
    int getLatency() -> getLatency
    void dispose() -> dispose
    void setVolume(float) -> setVolume
com.badlogic.gdx.audio.AudioRecorder -> com.badlogic.gdx.b.b:
    void read(short[],int,int) -> read
    void dispose() -> dispose
com.badlogic.gdx.audio.Music -> com.badlogic.gdx.b.c:
    void play() -> play
    void pause() -> pause
    void stop() -> stop
    boolean isPlaying() -> isPlaying
    void setLooping(boolean) -> setLooping
    boolean isLooping() -> isLooping
    void setVolume(float) -> setVolume
    float getPosition() -> getPosition
    void dispose() -> dispose
com.badlogic.gdx.audio.Sound -> com.badlogic.gdx.b.d:
    long play() -> play
    long play(float) -> play
    long play(float,float,float) -> play
    long loop() -> loop
    long loop(float) -> loop
    long loop(float,float,float) -> loop
    void stop() -> stop
    void dispose() -> dispose
    void stop(long) -> stop
    void setLooping(long,boolean) -> setLooping
    void setPitch(long,float) -> setPitch
    void setVolume(long,float) -> setVolume
    void setPan(long,float,float) -> setPan
    void setPriority(long,int) -> setPriority
com.badlogic.gdx.backends.android.AndroidApplication -> com.badlogic.gdx.backends.android.AndroidApplication:
    com.badlogic.gdx.backends.android.AndroidGraphics graphics -> graphics
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    com.badlogic.gdx.backends.android.AndroidFiles files -> files
    com.badlogic.gdx.backends.android.AndroidNet net -> net
    com.badlogic.gdx.ApplicationListener listener -> listener
    android.os.Handler handler -> handler
    boolean firstResume -> firstResume
    com.badlogic.gdx.utils.Array runnables -> runnables
    com.badlogic.gdx.utils.Array executedRunnables -> executedRunnables
    com.badlogic.gdx.utils.Array lifecycleListeners -> lifecycleListeners
    android.os.PowerManager$WakeLock wakeLock -> wakeLock
    int logLevel -> logLevel
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard -> clipboard
    87:90:void initialize(com.badlogic.gdx.ApplicationListener,boolean) -> initialize
    103:129:void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    132:135:android.widget.FrameLayout$LayoutParams createLayoutParams() -> createLayoutParams
    139:143:void createWakeLock(com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> createWakeLock
    146:158:void hideStatusBar(com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> hideStatusBar
    172:174:android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,boolean) -> initializeForView
    191:209:android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initializeForView
    214:237:void onPause() -> onPause
    241:261:void onResume() -> onResume
    265:266:void onDestroy() -> onDestroy
    270:270:com.badlogic.gdx.ApplicationListener getApplicationListener() -> getApplicationListener
    275:275:com.badlogic.gdx.Audio getAudio() -> getAudio
    280:280:com.badlogic.gdx.Files getFiles() -> getFiles
    285:285:com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    290:290:com.badlogic.gdx.Input getInput() -> getInput
    295:295:com.badlogic.gdx.Net getNet() -> getNet
    300:300:com.badlogic.gdx.Application$ApplicationType getType() -> getType
    305:305:int getVersion() -> getVersion
    310:310:long getJavaHeap() -> getJavaHeap
    315:315:long getNativeHeap() -> getNativeHeap
    320:320:com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    327:330:com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    335:338:void postRunnable(java.lang.Runnable) -> postRunnable
    343:347:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    351:357:void exit() -> exit
    361:364:void debug(java.lang.String,java.lang.String) -> debug
    368:371:void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    375:376:void log(java.lang.String,java.lang.String) -> log
    380:381:void log(java.lang.String,java.lang.String,java.lang.Exception) -> log
    385:386:void error(java.lang.String,java.lang.String) -> error
    390:391:void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    395:396:void setLogLevel(int) -> setLogLevel
    400:402:void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    407:409:void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
com.badlogic.gdx.backends.android.AndroidApplication$1 -> com.badlogic.gdx.backends.android.AndroidApplication$1:
    com.badlogic.gdx.backends.android.AndroidApplication this$0 -> this$0
    354:355:void run() -> run
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration -> com.badlogic.gdx.backends.android.AndroidApplicationConfiguration:
    boolean useGL20 -> useGL20
    int r -> r
    int g -> g
    int b -> b
    int a -> a
    int depth -> depth
    int stencil -> stencil
    int numSamples -> numSamples
    boolean useAccelerometer -> useAccelerometer
    boolean useCompass -> useCompass
    int touchSleepTime -> touchSleepTime
    boolean useWakelock -> useWakelock
    boolean hideStatusBar -> hideStatusBar
    int maxSimultaneousSounds -> maxSimultaneousSounds
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    boolean getTouchEventsForLiveWallpaper -> getTouchEventsForLiveWallpaper
com.badlogic.gdx.backends.android.AndroidAudio -> com.badlogic.gdx.backends.android.AndroidAudio:
    android.media.SoundPool soundPool -> soundPool
    android.media.AudioManager manager -> manager
    java.util.List musics -> musics
    56:65:void pause() -> pause
    69:73:void resume() -> resume
    79:79:com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean) -> newAudioDevice
    85:114:com.badlogic.gdx.audio.Music newMusic(com.badlogic.gdx.files.FileHandle) -> newMusic
    123:138:com.badlogic.gdx.audio.Sound newSound(com.badlogic.gdx.files.FileHandle) -> newSound
    146:146:com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean) -> newAudioRecorder
    151:159:void dispose() -> dispose
com.badlogic.gdx.backends.android.AndroidAudioDevice -> com.badlogic.gdx.backends.android.AndroidAudioDevice:
    android.media.AudioTrack track -> track
    short[] buffer -> buffer
    boolean isMono -> isMono
    int latency -> latency
    53:55:void dispose() -> dispose
    59:59:boolean isMono() -> isMono
    64:67:void writeSamples(short[],int,int) -> writeSamples
    71:85:void writeSamples(float[],int,int) -> writeSamples
    89:89:int getLatency() -> getLatency
    94:95:void setVolume(float) -> setVolume
com.badlogic.gdx.backends.android.AndroidAudioRecorder -> com.badlogic.gdx.backends.android.AndroidAudioRecorder:
    android.media.AudioRecord recorder -> recorder
    44:46:void dispose() -> dispose
    50:54:void read(short[],int,int) -> read
com.badlogic.gdx.backends.android.AndroidClipboard -> com.badlogic.gdx.backends.android.AndroidClipboard:
    android.content.Context context -> context
    java.lang.String contents -> contents
    35:35:java.lang.String getContents() -> getContents
    40:41:void setContents(java.lang.String) -> setContents
com.badlogic.gdx.backends.android.AndroidDaydream -> com.badlogic.gdx.backends.android.AndroidDaydream:
    com.badlogic.gdx.backends.android.AndroidGraphicsDaydream graphics -> graphics
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    com.badlogic.gdx.backends.android.AndroidFiles files -> files
    com.badlogic.gdx.backends.android.AndroidNet net -> net
    com.badlogic.gdx.ApplicationListener listener -> listener
    android.os.Handler handler -> handler
    boolean firstResume -> firstResume
    com.badlogic.gdx.utils.Array runnables -> runnables
    com.badlogic.gdx.utils.Array executedRunnables -> executedRunnables
    com.badlogic.gdx.utils.Array lifecycleListeners -> lifecycleListeners
    android.os.PowerManager$WakeLock wakeLock -> wakeLock
    int logLevel -> logLevel
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard -> clipboard
    86:89:void initialize(com.badlogic.gdx.ApplicationListener,boolean) -> initialize
    102:123:void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    126:129:android.widget.FrameLayout$LayoutParams createLayoutParams() -> createLayoutParams
    133:137:void createWakeLock(com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> createWakeLock
    140:151:void hideStatusBar(com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> hideStatusBar
    165:167:android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,boolean) -> initializeForView
    184:202:android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initializeForView
    207:228:void onDreamingStopped() -> onDreamingStopped
    232:252:void onDreamingStarted() -> onDreamingStarted
    256:257:void onDetachedFromWindow() -> onDetachedFromWindow
    261:261:com.badlogic.gdx.ApplicationListener getApplicationListener() -> getApplicationListener
    266:266:com.badlogic.gdx.Audio getAudio() -> getAudio
    271:271:com.badlogic.gdx.Files getFiles() -> getFiles
    276:276:com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    281:281:com.badlogic.gdx.Input getInput() -> getInput
    286:286:com.badlogic.gdx.Net getNet() -> getNet
    291:291:com.badlogic.gdx.Application$ApplicationType getType() -> getType
    296:296:int getVersion() -> getVersion
    301:301:long getJavaHeap() -> getJavaHeap
    306:306:long getNativeHeap() -> getNativeHeap
    311:311:com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    318:321:com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    326:329:void postRunnable(java.lang.Runnable) -> postRunnable
    334:338:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    342:348:void exit() -> exit
    352:355:void debug(java.lang.String,java.lang.String) -> debug
    359:362:void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    366:367:void log(java.lang.String,java.lang.String) -> log
    371:372:void log(java.lang.String,java.lang.String,java.lang.Exception) -> log
    376:377:void error(java.lang.String,java.lang.String) -> error
    381:382:void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    386:387:void setLogLevel(int) -> setLogLevel
    391:393:void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    398:400:void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
com.badlogic.gdx.backends.android.AndroidDaydream$1 -> com.badlogic.gdx.backends.android.AndroidDaydream$1:
    com.badlogic.gdx.backends.android.AndroidDaydream this$0 -> this$0
    345:346:void run() -> run
com.badlogic.gdx.backends.android.AndroidFileHandle -> com.badlogic.gdx.backends.android.AndroidFileHandle:
    android.content.res.AssetManager assets -> assets
    47:49:com.badlogic.gdx.files.FileHandle child(java.lang.String) -> child
    53:55:com.badlogic.gdx.files.FileHandle sibling(java.lang.String) -> sibling
    59:66:com.badlogic.gdx.files.FileHandle parent() -> parent
    70:77:java.io.InputStream read() -> read
    81:92:com.badlogic.gdx.files.FileHandle[] list() -> list
    96:117:com.badlogic.gdx.files.FileHandle[] list(java.lang.String) -> list
    121:128:boolean isDirectory() -> isDirectory
    132:146:boolean exists() -> exists
    150:162:long length() -> length
    166:166:long lastModified() -> lastModified
com.badlogic.gdx.backends.android.AndroidFiles -> com.badlogic.gdx.backends.android.AndroidFiles:
    java.lang.String sdcard -> sdcard
    java.lang.String localpath -> localpath
    android.content.res.AssetManager assets -> assets
    45:45:com.badlogic.gdx.files.FileHandle getFileHandle(java.lang.String,com.badlogic.gdx.Files$FileType) -> getFileHandle
    50:50:com.badlogic.gdx.files.FileHandle classpath(java.lang.String) -> classpath
    55:55:com.badlogic.gdx.files.FileHandle internal(java.lang.String) -> internal
    60:60:com.badlogic.gdx.files.FileHandle external(java.lang.String) -> external
    65:65:com.badlogic.gdx.files.FileHandle absolute(java.lang.String) -> absolute
    70:71:com.badlogic.gdx.files.FileHandle local(java.lang.String) -> local
    76:76:java.lang.String getExternalStoragePath() -> getExternalStoragePath
    81:81:boolean isExternalStorageAvailable() -> isExternalStorageAvailable
    86:86:java.lang.String getLocalStoragePath() -> getLocalStoragePath
    91:91:boolean isLocalStorageAvailable() -> isLocalStorageAvailable
com.badlogic.gdx.backends.android.AndroidGL10 -> com.badlogic.gdx.backends.android.AndroidGL10:
    javax.microedition.khronos.opengles.GL10 gl -> gl
    36:37:void glActiveTexture(int) -> glActiveTexture
    41:42:void glAlphaFunc(int,float) -> glAlphaFunc
    46:47:void glBindTexture(int,int) -> glBindTexture
    51:52:void glBlendFunc(int,int) -> glBlendFunc
    56:57:void glClear(int) -> glClear
    61:62:void glClearColor(float,float,float,float) -> glClearColor
    66:67:void glClearDepthf(float) -> glClearDepthf
    71:72:void glClearStencil(int) -> glClearStencil
    76:77:void glClientActiveTexture(int) -> glClientActiveTexture
    81:82:void glColor4f(float,float,float,float) -> glColor4f
    86:87:void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    91:92:void glColorPointer(int,int,int,java.nio.Buffer) -> glColorPointer
    97:98:void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    103:104:void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    108:109:void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    113:114:void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    118:119:void glCullFace(int) -> glCullFace
    123:124:void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    128:129:void glDepthFunc(int) -> glDepthFunc
    133:134:void glDepthMask(boolean) -> glDepthMask
    138:139:void glDepthRangef(float,float) -> glDepthRangef
    143:144:void glDisable(int) -> glDisable
    148:149:void glDisableClientState(int) -> glDisableClientState
    153:154:void glDrawArrays(int,int,int) -> glDrawArrays
    158:159:void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    163:164:void glEnable(int) -> glEnable
    168:169:void glEnableClientState(int) -> glEnableClientState
    173:174:void glFinish() -> glFinish
    178:179:void glFlush() -> glFlush
    183:184:void glFogf(int,float) -> glFogf
    188:189:void glFogfv(int,java.nio.FloatBuffer) -> glFogfv
    193:194:void glFrontFace(int) -> glFrontFace
    198:199:void glFrustumf(float,float,float,float,float,float) -> glFrustumf
    203:204:void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    208:208:int glGetError() -> glGetError
    213:214:void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    218:218:java.lang.String glGetString(int) -> glGetString
    223:224:void glHint(int,int) -> glHint
    228:229:void glLightModelf(int,float) -> glLightModelf
    233:234:void glLightModelfv(int,java.nio.FloatBuffer) -> glLightModelfv
    238:239:void glLightf(int,int,float) -> glLightf
    243:244:void glLightfv(int,int,java.nio.FloatBuffer) -> glLightfv
    248:249:void glLineWidth(float) -> glLineWidth
    253:254:void glLoadIdentity() -> glLoadIdentity
    258:259:void glLoadMatrixf(java.nio.FloatBuffer) -> glLoadMatrixf
    263:264:void glLogicOp(int) -> glLogicOp
    268:269:void glMaterialf(int,int,float) -> glMaterialf
    273:274:void glMaterialfv(int,int,java.nio.FloatBuffer) -> glMaterialfv
    278:279:void glMatrixMode(int) -> glMatrixMode
    283:284:void glMultMatrixf(java.nio.FloatBuffer) -> glMultMatrixf
    288:289:void glMultiTexCoord4f(int,float,float,float,float) -> glMultiTexCoord4f
    293:294:void glNormal3f(float,float,float) -> glNormal3f
    298:299:void glNormalPointer(int,int,java.nio.Buffer) -> glNormalPointer
    303:304:void glOrthof(float,float,float,float,float,float) -> glOrthof
    308:309:void glPixelStorei(int,int) -> glPixelStorei
    313:314:void glPointSize(float) -> glPointSize
    318:319:void glPolygonOffset(float,float) -> glPolygonOffset
    323:324:void glPopMatrix() -> glPopMatrix
    328:329:void glPushMatrix() -> glPushMatrix
    333:334:void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    338:339:void glRotatef(float,float,float,float) -> glRotatef
    343:344:void glSampleCoverage(float,boolean) -> glSampleCoverage
    348:349:void glScalef(float,float,float) -> glScalef
    353:354:void glScissor(int,int,int,int) -> glScissor
    358:359:void glShadeModel(int) -> glShadeModel
    363:364:void glStencilFunc(int,int,int) -> glStencilFunc
    368:369:void glStencilMask(int) -> glStencilMask
    373:374:void glStencilOp(int,int,int) -> glStencilOp
    378:379:void glTexCoordPointer(int,int,int,java.nio.Buffer) -> glTexCoordPointer
    383:384:void glTexEnvf(int,int,float) -> glTexEnvf
    388:389:void glTexEnvfv(int,int,java.nio.FloatBuffer) -> glTexEnvfv
    394:395:void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    399:400:void glTexParameterf(int,int,float) -> glTexParameterf
    405:406:void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    410:411:void glTranslatef(float,float,float) -> glTranslatef
    415:416:void glVertexPointer(int,int,int,java.nio.Buffer) -> glVertexPointer
    420:421:void glViewport(int,int,int,int) -> glViewport
    425:426:void glDeleteTextures(int,int[],int) -> glDeleteTextures
    430:431:void glFogfv(int,float[],int) -> glFogfv
    435:436:void glGenTextures(int,int[],int) -> glGenTextures
    440:441:void glGetIntegerv(int,int[],int) -> glGetIntegerv
    445:446:void glLightModelfv(int,float[],int) -> glLightModelfv
    450:451:void glLightfv(int,int,float[],int) -> glLightfv
    455:456:void glLoadMatrixf(float[],int) -> glLoadMatrixf
    460:461:void glMaterialfv(int,int,float[],int) -> glMaterialfv
    465:466:void glMultMatrixf(float[],int) -> glMultMatrixf
    470:471:void glTexEnvfv(int,int,float[],int) -> glTexEnvfv
    476:476:void glPolygonMode(int,int) -> glPolygonMode
com.badlogic.gdx.backends.android.AndroidGL11 -> com.badlogic.gdx.backends.android.AndroidGL11:
    javax.microedition.khronos.opengles.GL11 gl -> gl
    40:41:void glBindBuffer(int,int) -> glBindBuffer
    45:46:void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    50:51:void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    55:56:void glClipPlanef(int,java.nio.FloatBuffer) -> glClipPlanef
    60:61:void glColor4ub(byte,byte,byte,byte) -> glColor4ub
    65:66:void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    70:71:void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    75:76:void glGetBooleanv(int,java.nio.IntBuffer) -> glGetBooleanv
    80:81:void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    85:86:void glGetClipPlanef(int,java.nio.FloatBuffer) -> glGetClipPlanef
    90:91:void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    95:96:void glGetLightfv(int,int,java.nio.FloatBuffer) -> glGetLightfv
    100:101:void glGetMaterialfv(int,int,java.nio.FloatBuffer) -> glGetMaterialfv
    105:106:void glGetPointerv(int,java.nio.Buffer[]) -> glGetPointerv
    110:111:void glGetTexEnviv(int,int,java.nio.IntBuffer) -> glGetTexEnviv
    115:116:void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    120:121:void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    125:125:boolean glIsBuffer(int) -> glIsBuffer
    130:130:boolean glIsEnabled(int) -> glIsEnabled
    135:135:boolean glIsTexture(int) -> glIsTexture
    140:141:void glPointParameterf(int,float) -> glPointParameterf
    145:146:void glPointParameterfv(int,java.nio.FloatBuffer) -> glPointParameterfv
    150:151:void glPointSizePointerOES(int,int,java.nio.Buffer) -> glPointSizePointerOES
    155:156:void glTexEnvi(int,int,int) -> glTexEnvi
    160:161:void glTexEnviv(int,int,java.nio.IntBuffer) -> glTexEnviv
    165:166:void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    170:171:void glTexParameteri(int,int,int) -> glTexParameteri
    175:176:void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    180:181:void glClipPlanef(int,float[],int) -> glClipPlanef
    185:186:void glDeleteBuffers(int,int[],int) -> glDeleteBuffers
    190:191:void glGenBuffers(int,int[],int) -> glGenBuffers
    195:196:void glGetBooleanv(int,boolean[],int) -> glGetBooleanv
    200:201:void glGetBufferParameteriv(int,int,int[],int) -> glGetBufferParameteriv
    205:206:void glGetClipPlanef(int,float[],int) -> glGetClipPlanef
    210:211:void glGetFloatv(int,float[],int) -> glGetFloatv
    215:216:void glGetLightfv(int,int,float[],int) -> glGetLightfv
    220:221:void glGetMaterialfv(int,int,float[],int) -> glGetMaterialfv
    225:226:void glGetTexEnviv(int,int,int[],int) -> glGetTexEnviv
    230:231:void glGetTexParameterfv(int,int,float[],int) -> glGetTexParameterfv
    235:236:void glGetTexParameteriv(int,int,int[],int) -> glGetTexParameteriv
    240:241:void glPointParameterfv(int,float[],int) -> glPointParameterfv
    245:246:void glTexEnviv(int,int,int[],int) -> glTexEnviv
    250:251:void glTexParameterfv(int,int,float[],int) -> glTexParameterfv
    255:256:void glTexParameteriv(int,int,int[],int) -> glTexParameteriv
    260:261:void glColorPointer(int,int,int,int) -> glColorPointer
    265:266:void glNormalPointer(int,int,int) -> glNormalPointer
    270:271:void glTexCoordPointer(int,int,int,int) -> glTexCoordPointer
    275:276:void glVertexPointer(int,int,int,int) -> glVertexPointer
    280:281:void glDrawElements(int,int,int,int) -> glDrawElements
com.badlogic.gdx.backends.android.AndroidGL20 -> com.badlogic.gdx.backends.android.AndroidGL20:
    void init() -> init
    void glActiveTexture(int) -> glActiveTexture
    void glAttachShader(int,int) -> glAttachShader
    void glBindAttribLocation(int,int,java.lang.String) -> glBindAttribLocation
    void glBindBuffer(int,int) -> glBindBuffer
    void glBindFramebuffer(int,int) -> glBindFramebuffer
    void glBindRenderbuffer(int,int) -> glBindRenderbuffer
    void glBindTexture(int,int) -> glBindTexture
    void glBlendColor(float,float,float,float) -> glBlendColor
    void glBlendEquation(int) -> glBlendEquation
    void glBlendEquationSeparate(int,int) -> glBlendEquationSeparate
    void glBlendFunc(int,int) -> glBlendFunc
    void glBlendFuncSeparate(int,int,int,int) -> glBlendFuncSeparate
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    int glCheckFramebufferStatus(int) -> glCheckFramebufferStatus
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearDepthf(float) -> glClearDepthf
    void glClearStencil(int) -> glClearStencil
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glCompileShader(int) -> glCompileShader
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    int glCreateProgram() -> glCreateProgram
    int glCreateShader(int) -> glCreateShader
    void glCullFace(int) -> glCullFace
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glDeleteFramebuffers(int,java.nio.IntBuffer) -> glDeleteFramebuffers
    void glDeleteProgram(int) -> glDeleteProgram
    void glDeleteRenderbuffers(int,java.nio.IntBuffer) -> glDeleteRenderbuffers
    void glDeleteShader(int) -> glDeleteShader
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDetachShader(int,int) -> glDetachShader
    void glDisable(int) -> glDisable
    void glDisableVertexAttribArray(int) -> glDisableVertexAttribArray
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableVertexAttribArray(int) -> glEnableVertexAttribArray
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFramebufferRenderbuffer(int,int,int,int) -> glFramebufferRenderbuffer
    void glFramebufferTexture2D(int,int,int,int,int) -> glFramebufferTexture2D
    void glFrontFace(int) -> glFrontFace
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGenerateMipmap(int) -> glGenerateMipmap
    void glGenFramebuffers(int,java.nio.IntBuffer) -> glGenFramebuffers
    void glGenRenderbuffers(int,java.nio.IntBuffer) -> glGenRenderbuffers
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveAttrib
    java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveUniform
    void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer) -> glGetAttachedShaders
    int glGetAttribLocation(int,java.lang.String) -> glGetAttribLocation
    void glGetBooleanv(int,java.nio.Buffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    int glGetError() -> glGetError
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer) -> glGetFramebufferAttachmentParameteriv
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    void glGetProgramiv(int,int,java.nio.IntBuffer) -> glGetProgramiv
    java.lang.String glGetProgramInfoLog(int) -> glGetProgramInfoLog
    void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer) -> glGetRenderbufferParameteriv
    void glGetShaderiv(int,int,java.nio.IntBuffer) -> glGetShaderiv
    java.lang.String glGetShaderInfoLog(int) -> glGetShaderInfoLog
    void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer) -> glGetShaderPrecisionFormat
    void glGetShaderSource(int,int,java.nio.Buffer,java.lang.String) -> glGetShaderSource
    java.lang.String glGetString(int) -> glGetString
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetUniformfv(int,int,java.nio.FloatBuffer) -> glGetUniformfv
    void glGetUniformiv(int,int,java.nio.IntBuffer) -> glGetUniformiv
    int glGetUniformLocation(int,java.lang.String) -> glGetUniformLocation
    void glGetVertexAttribfv(int,int,java.nio.FloatBuffer) -> glGetVertexAttribfv
    void glGetVertexAttribiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribiv
    void glGetVertexAttribPointerv(int,int,java.nio.Buffer) -> glGetVertexAttribPointerv
    void glHint(int,int) -> glHint
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsFramebuffer(int) -> glIsFramebuffer
    boolean glIsProgram(int) -> glIsProgram
    boolean glIsRenderbuffer(int) -> glIsRenderbuffer
    boolean glIsShader(int) -> glIsShader
    boolean glIsTexture(int) -> glIsTexture
    void glLineWidth(float) -> glLineWidth
    void glLinkProgram(int) -> glLinkProgram
    void glPixelStorei(int,int) -> glPixelStorei
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glReleaseShaderCompiler() -> glReleaseShaderCompiler
    void glRenderbufferStorage(int,int,int,int) -> glRenderbufferStorage
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glScissor(int,int,int,int) -> glScissor
    void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int) -> glShaderBinary
    void glShaderSource(int,java.lang.String) -> glShaderSource
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilFuncSeparate(int,int,int,int) -> glStencilFuncSeparate
    void glStencilMask(int) -> glStencilMask
    void glStencilMaskSeparate(int,int) -> glStencilMaskSeparate
    void glStencilOp(int,int,int) -> glStencilOp
    void glStencilOpSeparate(int,int,int,int) -> glStencilOpSeparate
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glUniform1f(int,float) -> glUniform1f
    void glUniform1fv(int,int,java.nio.FloatBuffer) -> glUniform1fv
    void glUniform1i(int,int) -> glUniform1i
    void glUniform1iv(int,int,java.nio.IntBuffer) -> glUniform1iv
    void glUniform2f(int,float,float) -> glUniform2f
    void glUniform2fv(int,int,java.nio.FloatBuffer) -> glUniform2fv
    void glUniform2i(int,int,int) -> glUniform2i
    void glUniform2iv(int,int,java.nio.IntBuffer) -> glUniform2iv
    void glUniform3f(int,float,float,float) -> glUniform3f
    void glUniform3fv(int,int,java.nio.FloatBuffer) -> glUniform3fv
    void glUniform3i(int,int,int,int) -> glUniform3i
    void glUniform3iv(int,int,java.nio.IntBuffer) -> glUniform3iv
    void glUniform4f(int,float,float,float,float) -> glUniform4f
    void glUniform4fv(int,int,java.nio.FloatBuffer) -> glUniform4fv
    void glUniform4i(int,int,int,int,int) -> glUniform4i
    void glUniform4iv(int,int,java.nio.IntBuffer) -> glUniform4iv
    void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2fv
    void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3fv
    void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4fv
    void glUseProgram(int) -> glUseProgram
    void glValidateProgram(int) -> glValidateProgram
    void glVertexAttrib1f(int,float) -> glVertexAttrib1f
    void glVertexAttrib1fv(int,java.nio.FloatBuffer) -> glVertexAttrib1fv
    void glVertexAttrib2f(int,float,float) -> glVertexAttrib2f
    void glVertexAttrib2fv(int,java.nio.FloatBuffer) -> glVertexAttrib2fv
    void glVertexAttrib3f(int,float,float,float) -> glVertexAttrib3f
    void glVertexAttrib3fv(int,java.nio.FloatBuffer) -> glVertexAttrib3fv
    void glVertexAttrib4f(int,float,float,float,float) -> glVertexAttrib4f
    void glVertexAttrib4fv(int,java.nio.FloatBuffer) -> glVertexAttrib4fv
    void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer) -> glVertexAttribPointer
    void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
    void glViewport(int,int,int,int) -> glViewport
com.badlogic.gdx.backends.android.AndroidGraphics -> com.badlogic.gdx.backends.android.AndroidGraphics:
    android.view.View view -> view
    int width -> width
    int height -> height
    com.badlogic.gdx.backends.android.AndroidApplication app -> app
    com.badlogic.gdx.graphics.GLCommon gl -> gl
    com.badlogic.gdx.graphics.GL10 gl10 -> gl10
    com.badlogic.gdx.graphics.GL11 gl11 -> gl11
    com.badlogic.gdx.graphics.GL20 gl20 -> gl20
    javax.microedition.khronos.egl.EGLContext eglContext -> eglContext
    java.lang.String extensions -> extensions
    long lastFrameTime -> lastFrameTime
    float deltaTime -> deltaTime
    long frameStart -> frameStart
    int frames -> frames
    int fps -> fps
    com.badlogic.gdx.math.WindowedMean mean -> mean
    boolean created -> created
    boolean running -> running
    boolean pause -> pause
    boolean resume -> resume
    boolean destroy -> destroy
    float ppiX -> ppiX
    float ppiY -> ppiY
    float ppcX -> ppcX
    float ppcY -> ppcY
    float density -> density
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> config
    com.badlogic.gdx.Graphics$BufferFormat bufferFormat -> bufferFormat
    boolean isContinuous -> isContinuous
    int[] value -> value
    java.lang.Object synch -> synch
    107:123:void setPreserveContext(android.view.View) -> setPreserveContext
    126:192:android.view.View createGLSurfaceView(android.app.Activity,boolean,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy) -> createGLSurfaceView
    198:198:android.opengl.GLSurfaceView$EGLConfigChooser getEglConfigChooser() -> getEglConfigChooser
    203:211:void updatePpi() -> updatePpi
    214:228:boolean checkGL20() -> checkGL20
    234:234:com.badlogic.gdx.graphics.GL10 getGL10() -> getGL10
    240:240:com.badlogic.gdx.graphics.GL11 getGL11() -> getGL11
    246:246:com.badlogic.gdx.graphics.GL20 getGL20() -> getGL20
    252:252:int getHeight() -> getHeight
    258:258:int getWidth() -> getWidth
    264:264:boolean isGL11Available() -> isGL11Available
    270:270:boolean isGL20Available() -> isGL20Available
    274:274:boolean isPowerOfTwo(int) -> isPowerOfTwo
    283:313:void setupGL(javax.microedition.khronos.opengles.GL10) -> setupGL
    317:329:void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    333:355:void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    358:377:void logConfig(javax.microedition.khronos.egl.EGLConfig) -> logConfig
    382:385:int getAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> getAttrib
    391:394:void resume() -> resume
    398:409:void pause() -> pause
    413:424:void destroy() -> destroy
    429:521:void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    526:526:float getDeltaTime() -> getDeltaTime
    531:531:float getRawDeltaTime() -> getRawDeltaTime
    537:537:com.badlogic.gdx.Graphics$GraphicsType getType() -> getType
    543:543:int getFramesPerSecond() -> getFramesPerSecond
    547:556:void clearManagedCaches() -> clearManagedCaches
    559:559:android.view.View getView() -> getView
    565:565:com.badlogic.gdx.graphics.GLCommon getGLCommon() -> getGLCommon
    570:570:float getPpiX() -> getPpiX
    575:575:float getPpiY() -> getPpiY
    580:580:float getPpcX() -> getPpcX
    585:585:float getPpcY() -> getPpcY
    590:590:float getDensity() -> getDensity
    595:595:boolean supportsDisplayModeChange() -> supportsDisplayModeChange
    600:600:boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode) -> setDisplayMode
    605:605:com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes() -> getDisplayModes
    610:610:boolean setDisplayMode(int,int,boolean) -> setDisplayMode
    616:616:void setTitle(java.lang.String) -> setTitle
    626:628:com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> getDesktopDisplayMode
    633:633:com.badlogic.gdx.Graphics$BufferFormat getBufferFormat() -> getBufferFormat
    638:638:void setVSync(boolean) -> setVSync
    642:643:boolean supportsExtension(java.lang.String) -> supportsExtension
    648:655:void setContinuousRendering(boolean) -> setContinuousRendering
    658:658:boolean isContinuousRendering() -> isContinuousRendering
    663:667:void requestRendering() -> requestRendering
    671:671:boolean isFullscreen() -> isFullscreen
com.badlogic.gdx.backends.android.AndroidGraphics$1 -> com.badlogic.gdx.backends.android.AndroidGraphics$1:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy val$resolutionStrategy -> val$resolutionStrategy
    com.badlogic.gdx.backends.android.AndroidGraphics this$0 -> this$0
    145:148:void onMeasure(int,int) -> onMeasure
    152:175:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
com.badlogic.gdx.backends.android.AndroidGraphics$1$1 -> com.badlogic.gdx.backends.android.AndroidGraphics$1$1:
    com.badlogic.gdx.backends.android.AndroidGraphics$1 this$1 -> this$1
    155:165:boolean deleteSurroundingText(int,int) -> deleteSurroundingText
    168:173:void sendDownUpKeyEventForBackwardCompatibility(int) -> sendDownUpKeyEventForBackwardCompatibility
com.badlogic.gdx.backends.android.AndroidGraphics$AndroidDisplayMode -> com.badlogic.gdx.backends.android.AndroidGraphics$AndroidDisplayMode:
    com.badlogic.gdx.backends.android.AndroidGraphics this$0 -> this$0
com.badlogic.gdx.backends.android.AndroidGraphicsDaydream -> com.badlogic.gdx.backends.android.AndroidGraphicsDaydream:
    android.view.View view -> view
    int width -> width
    int height -> height
    com.badlogic.gdx.backends.android.AndroidDaydream app -> app
    com.badlogic.gdx.graphics.GLCommon gl -> gl
    com.badlogic.gdx.graphics.GL10 gl10 -> gl10
    com.badlogic.gdx.graphics.GL11 gl11 -> gl11
    com.badlogic.gdx.graphics.GL20 gl20 -> gl20
    javax.microedition.khronos.egl.EGLContext eglContext -> eglContext
    java.lang.String extensions -> extensions
    long lastFrameTime -> lastFrameTime
    float deltaTime -> deltaTime
    long frameStart -> frameStart
    int frames -> frames
    int fps -> fps
    com.badlogic.gdx.math.WindowedMean mean -> mean
    boolean created -> created
    boolean running -> running
    boolean pause -> pause
    boolean resume -> resume
    boolean destroy -> destroy
    float ppiX -> ppiX
    float ppiY -> ppiY
    float ppcX -> ppcX
    float ppcY -> ppcY
    float density -> density
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> config
    com.badlogic.gdx.Graphics$BufferFormat bufferFormat -> bufferFormat
    boolean isContinuous -> isContinuous
    int[] value -> value
    java.lang.Object synch -> synch
    116:132:void setPreserveContext(android.view.View) -> setPreserveContext
    135:172:android.view.View createGLSurfaceView(android.service.dreams.DreamService,boolean,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy) -> createGLSurfaceView
    178:178:android.opengl.GLSurfaceView$EGLConfigChooser getEglConfigChooser() -> getEglConfigChooser
    183:191:void updatePpi() -> updatePpi
    194:208:boolean checkGL20() -> checkGL20
    214:214:com.badlogic.gdx.graphics.GL10 getGL10() -> getGL10
    220:220:com.badlogic.gdx.graphics.GL11 getGL11() -> getGL11
    226:226:com.badlogic.gdx.graphics.GL20 getGL20() -> getGL20
    232:232:int getHeight() -> getHeight
    238:238:int getWidth() -> getWidth
    244:244:boolean isGL11Available() -> isGL11Available
    250:250:boolean isGL20Available() -> isGL20Available
    254:254:boolean isPowerOfTwo(int) -> isPowerOfTwo
    263:293:void setupGL(javax.microedition.khronos.opengles.GL10) -> setupGL
    297:309:void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    313:335:void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    338:357:void logConfig(javax.microedition.khronos.egl.EGLConfig) -> logConfig
    362:365:int getAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> getAttrib
    371:374:void resume() -> resume
    378:389:void pause() -> pause
    393:404:void destroy() -> destroy
    409:501:void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    506:506:float getDeltaTime() -> getDeltaTime
    511:511:float getRawDeltaTime() -> getRawDeltaTime
    517:517:com.badlogic.gdx.Graphics$GraphicsType getType() -> getType
    523:523:int getFramesPerSecond() -> getFramesPerSecond
    527:536:void clearManagedCaches() -> clearManagedCaches
    539:539:android.view.View getView() -> getView
    545:545:com.badlogic.gdx.graphics.GLCommon getGLCommon() -> getGLCommon
    550:550:float getPpiX() -> getPpiX
    555:555:float getPpiY() -> getPpiY
    560:560:float getPpcX() -> getPpcX
    565:565:float getPpcY() -> getPpcY
    570:570:float getDensity() -> getDensity
    575:575:boolean supportsDisplayModeChange() -> supportsDisplayModeChange
    580:580:boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode) -> setDisplayMode
    585:585:com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes() -> getDisplayModes
    590:590:boolean setDisplayMode(int,int,boolean) -> setDisplayMode
    596:596:void setTitle(java.lang.String) -> setTitle
    606:608:com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> getDesktopDisplayMode
    613:613:com.badlogic.gdx.Graphics$BufferFormat getBufferFormat() -> getBufferFormat
    618:618:void setVSync(boolean) -> setVSync
    622:623:boolean supportsExtension(java.lang.String) -> supportsExtension
    628:635:void setContinuousRendering(boolean) -> setContinuousRendering
    638:638:boolean isContinuousRendering() -> isContinuousRendering
    643:647:void requestRendering() -> requestRendering
    651:651:boolean isFullscreen() -> isFullscreen
com.badlogic.gdx.backends.android.AndroidGraphicsDaydream$1 -> com.badlogic.gdx.backends.android.AndroidGraphicsDaydream$1:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy val$resolutionStrategy -> val$resolutionStrategy
    com.badlogic.gdx.backends.android.AndroidGraphicsDaydream this$0 -> this$0
    154:157:void onMeasure(int,int) -> onMeasure
com.badlogic.gdx.backends.android.AndroidGraphicsDaydream$AndroidDisplayMode -> com.badlogic.gdx.backends.android.AndroidGraphicsDaydream$AndroidDisplayMode:
    com.badlogic.gdx.backends.android.AndroidGraphicsDaydream this$0 -> this$0
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper -> com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper:
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW view -> view
    com.badlogic.gdx.backends.android.AndroidLiveWallpaper app -> app
    int width -> width
    int height -> height
    com.badlogic.gdx.graphics.GLCommon gl -> gl
    com.badlogic.gdx.graphics.GL10 gl10 -> gl10
    com.badlogic.gdx.graphics.GL11 gl11 -> gl11
    com.badlogic.gdx.graphics.GL20 gl20 -> gl20
    javax.microedition.khronos.egl.EGLContext eglContext -> eglContext
    java.lang.String extensions -> extensions
    long lastFrameTime -> lastFrameTime
    float deltaTime -> deltaTime
    long frameStart -> frameStart
    int frames -> frames
    int fps -> fps
    com.badlogic.gdx.math.WindowedMean mean -> mean
    boolean created -> created
    boolean running -> running
    boolean pause -> pause
    boolean resume -> resume
    boolean destroy -> destroy
    float ppiX -> ppiX
    float ppiY -> ppiY
    float ppcX -> ppcX
    float ppcY -> ppcY
    float density -> density
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> config
    com.badlogic.gdx.Graphics$BufferFormat bufferFormat -> bufferFormat
    boolean isContinuous -> isContinuous
    int[] value -> value
    java.lang.Object synch -> synch
    99:113:boolean checkGL20() -> checkGL20
    118:118:com.badlogic.gdx.graphics.GL10 getGL10() -> getGL10
    123:123:com.badlogic.gdx.graphics.GL11 getGL11() -> getGL11
    128:128:com.badlogic.gdx.graphics.GL20 getGL20() -> getGL20
    133:133:int getHeight() -> getHeight
    138:138:int getWidth() -> getWidth
    143:143:boolean isGL11Available() -> isGL11Available
    148:148:boolean isGL20Available() -> isGL20Available
    152:171:void logConfig(javax.microedition.khronos.egl.EGLConfig) -> logConfig
    174:177:int getAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> getAttrib
    181:184:void resume() -> resume
    188:199:void pause() -> pause
    203:214:void destroy() -> destroy
    220:220:float getDeltaTime() -> getDeltaTime
    225:225:float getRawDeltaTime() -> getRawDeltaTime
    231:231:com.badlogic.gdx.Graphics$GraphicsType getType() -> getType
    237:237:int getFramesPerSecond() -> getFramesPerSecond
    243:243:com.badlogic.gdx.graphics.GLCommon getGLCommon() -> getGLCommon
    248:248:float getPpiX() -> getPpiX
    253:253:float getPpiY() -> getPpiY
    258:258:float getPpcX() -> getPpcX
    263:263:float getPpcY() -> getPpcY
    268:268:boolean supportsDisplayModeChange() -> supportsDisplayModeChange
    273:273:boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode) -> setDisplayMode
    279:279:void setTitle(java.lang.String) -> setTitle
    289:289:com.badlogic.gdx.Graphics$BufferFormat getBufferFormat() -> getBufferFormat
    294:294:void setVSync(boolean) -> setVSync
    298:299:boolean supportsExtension(java.lang.String) -> supportsExtension
    303:303:boolean isContinuousRendering() -> isContinuousRendering
    308:308:boolean isFullscreen() -> isFullscreen
    320:342:com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidLiveWallpaper,boolean,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy) -> createGLSurfaceView
    347:347:android.opengl.GLSurfaceView$EGLConfigChooser getEglConfigChooser() -> getEglConfigChooser
    370:380:void updatePpi() -> updatePpi
    392:425:void setupGL(javax.microedition.khronos.opengles.GL10) -> setupGL
    429:434:void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    438:463:void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    487:574:void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    577:586:void clearManagedCaches() -> clearManagedCaches
    589:589:com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW getView() -> getView
    594:594:com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes() -> getDisplayModes
    599:599:float getDensity() -> getDensity
    604:609:com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> getDesktopDisplayMode
    614:614:boolean setDisplayMode(int,int,boolean) -> setDisplayMode
    619:624:void setContinuousRendering(boolean) -> setContinuousRendering
    628:632:void requestRendering() -> requestRendering
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$AndroidDisplayMode -> com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$AndroidDisplayMode:
    com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper this$0 -> this$0
com.badlogic.gdx.backends.android.AndroidInput -> com.badlogic.gdx.backends.android.AndroidInput:
    com.badlogic.gdx.utils.Pool usedKeyEvents -> usedKeyEvents
    com.badlogic.gdx.utils.Pool usedTouchEvents -> usedTouchEvents
    java.util.ArrayList keyListeners -> keyListeners
    java.util.ArrayList keyEvents -> keyEvents
    java.util.ArrayList touchEvents -> touchEvents
    int[] touchX -> touchX
    int[] touchY -> touchY
    int[] deltaX -> deltaX
    int[] deltaY -> deltaY
    boolean[] touched -> touched
    int[] realId -> realId
    boolean hasMultitouch -> hasMultitouch
    com.badlogic.gdx.utils.IntMap keys -> keys
    android.hardware.SensorManager manager -> manager
    boolean accelerometerAvailable -> accelerometerAvailable
    float[] accelerometerValues -> accelerometerValues
    java.lang.String text -> text
    com.badlogic.gdx.Input$TextInputListener textListener -> textListener
    android.os.Handler handle -> handle
    com.badlogic.gdx.Application app -> app
    android.content.Context context -> context
    com.badlogic.gdx.backends.android.AndroidTouchHandler touchHandler -> touchHandler
    int sleepTime -> sleepTime
    boolean catchBack -> catchBack
    boolean catchMenu -> catchMenu
    android.os.Vibrator vibrator -> vibrator
    boolean compassAvailable -> compassAvailable
    boolean keyboardAvailable -> keyboardAvailable
    float[] magneticFieldValues -> magneticFieldValues
    float azimuth -> azimuth
    float pitch -> pitch
    float roll -> roll
    float inclination -> inclination
    boolean justTouched -> justTouched
    com.badlogic.gdx.InputProcessor processor -> processor
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> config
    com.badlogic.gdx.Input$Orientation nativeOrientation -> nativeOrientation
    long currentEventTimeStamp -> currentEventTimeStamp
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard onscreenKeyboard -> onscreenKeyboard
    android.hardware.SensorEventListener accelerometerListener -> accelerometerListener
    android.hardware.SensorEventListener compassListener -> compassListener
    boolean requestFocus -> requestFocus
    float[] R -> R
    float[] orientation -> orientation
    174:174:float getAccelerometerX() -> getAccelerometerX
    179:179:float getAccelerometerY() -> getAccelerometerY
    184:184:float getAccelerometerZ() -> getAccelerometerZ
    189:231:void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getTextInput
    234:266:void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getPlaceholderTextInput
    270:272:int getX() -> getX
    277:279:int getY() -> getY
    284:286:int getX(int) -> getX
    291:293:int getY(int) -> getY
    297:299:boolean isTouched(int) -> isTouched
    304:309:boolean isKeyPressed(int) -> isKeyPressed
    314:316:boolean isTouched() -> isTouched
    320:322:void setInputProcessor(com.badlogic.gdx.InputProcessor) -> setInputProcessor
    326:389:void processEvents() -> processEvents
    396:411:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    418:419:void onTap(int,int) -> onTap
    425:426:void onDrop(int,int) -> onDrop
    429:447:void postTap(int,int) -> postTap
    451:520:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    526:539:void setOnscreenKeyboardVisible(boolean) -> setOnscreenKeyboardVisible
    543:544:void setCatchBackKey(boolean) -> setCatchBackKey
    548:549:void setCatchMenuKey(boolean) -> setCatchMenuKey
    553:554:void vibrate(int) -> vibrate
    558:559:void vibrate(long[],int) -> vibrate
    563:564:void cancelVibrate() -> cancelVibrate
    568:568:boolean justTouched() -> justTouched
    573:576:boolean isButtonPressed(int) -> isButtonPressed
    583:589:void updateOrientation() -> updateOrientation
    597:598:void getRotationMatrix(float[]) -> getRotationMatrix
    602:605:float getAzimuth() -> getAzimuth
    610:613:float getPitch() -> getPitch
    618:621:float getRoll() -> getRoll
    625:653:void registerSensorListeners() -> registerSensorListeners
    656:668:void unregisterSensorListeners() -> unregisterSensorListeners
    672:672:com.badlogic.gdx.InputProcessor getInputProcessor() -> getInputProcessor
    677:683:boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral) -> isPeripheralAvailable
    687:695:int getFreePointerIndex() -> getFreePointerIndex
    699:709:int lookUpPointerIndex(int) -> lookUpPointerIndex
    714:732:int getRotation() -> getRotation
    738:738:com.badlogic.gdx.Input$Orientation getNativeOrientation() -> getNativeOrientation
    743:743:void setCursorCatched(boolean) -> setCursorCatched
    747:747:boolean isCursorCatched() -> isCursorCatched
    752:752:int getDeltaX() -> getDeltaX
    757:757:int getDeltaX(int) -> getDeltaX
    762:762:int getDeltaY() -> getDeltaY
    767:767:int getDeltaY(int) -> getDeltaY
    772:772:void setCursorPosition(int,int) -> setCursorPosition
    776:776:long getCurrentEventTime() -> getCurrentEventTime
    780:781:void addKeyListener(android.view.View$OnKeyListener) -> addKeyListener
com.badlogic.gdx.backends.android.AndroidInput$1 -> com.badlogic.gdx.backends.android.AndroidInput$1:
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    81:81:com.badlogic.gdx.backends.android.AndroidInput$KeyEvent newObject() -> newObject
    79:79:java.lang.Object newObject() -> newObject
com.badlogic.gdx.backends.android.AndroidInput$2 -> com.badlogic.gdx.backends.android.AndroidInput$2:
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    87:87:com.badlogic.gdx.backends.android.AndroidInput$TouchEvent newObject() -> newObject
    85:85:java.lang.Object newObject() -> newObject
com.badlogic.gdx.backends.android.AndroidInput$3 -> com.badlogic.gdx.backends.android.AndroidInput$3:
    java.lang.String val$title -> val$title
    java.lang.String val$text -> val$text
    com.badlogic.gdx.Input$TextInputListener val$listener -> val$listener
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    191:229:void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$3$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$1:
    android.widget.EditText val$input -> val$input
    com.badlogic.gdx.backends.android.AndroidInput$3 this$1 -> this$1
    199:205:void onClick(android.content.DialogInterface,int) -> onClick
com.badlogic.gdx.backends.android.AndroidInput$3$1$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$1$1:
    com.badlogic.gdx.backends.android.AndroidInput$3$1 this$2 -> this$2
    202:203:void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$3$2 -> com.badlogic.gdx.backends.android.AndroidInput$3$2:
    com.badlogic.gdx.backends.android.AndroidInput$3 this$1 -> this$1
    209:215:void onClick(android.content.DialogInterface,int) -> onClick
com.badlogic.gdx.backends.android.AndroidInput$3$2$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$2$1:
    com.badlogic.gdx.backends.android.AndroidInput$3$2 this$2 -> this$2
    212:213:void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$3$3 -> com.badlogic.gdx.backends.android.AndroidInput$3$3:
    com.badlogic.gdx.backends.android.AndroidInput$3 this$1 -> this$1
    220:226:void onCancel(android.content.DialogInterface) -> onCancel
com.badlogic.gdx.backends.android.AndroidInput$3$3$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$3$1:
    com.badlogic.gdx.backends.android.AndroidInput$3$3 this$2 -> this$2
    223:224:void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$4 -> com.badlogic.gdx.backends.android.AndroidInput$4:
    java.lang.String val$title -> val$title
    java.lang.String val$placeholder -> val$placeholder
    com.badlogic.gdx.Input$TextInputListener val$listener -> val$listener
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    236:264:void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$4$1 -> com.badlogic.gdx.backends.android.AndroidInput$4$1:
    android.widget.EditText val$input -> val$input
    com.badlogic.gdx.backends.android.AndroidInput$4 this$1 -> this$1
    244:250:void onClick(android.content.DialogInterface,int) -> onClick
com.badlogic.gdx.backends.android.AndroidInput$4$1$1 -> com.badlogic.gdx.backends.android.AndroidInput$4$1$1:
    com.badlogic.gdx.backends.android.AndroidInput$4$1 this$2 -> this$2
    247:248:void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$4$2 -> com.badlogic.gdx.backends.android.AndroidInput$4$2:
    com.badlogic.gdx.backends.android.AndroidInput$4 this$1 -> this$1
    255:261:void onCancel(android.content.DialogInterface) -> onCancel
com.badlogic.gdx.backends.android.AndroidInput$4$2$1 -> com.badlogic.gdx.backends.android.AndroidInput$4$2$1:
    com.badlogic.gdx.backends.android.AndroidInput$4$2 this$2 -> this$2
    258:259:void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$5 -> com.badlogic.gdx.backends.android.AndroidInput$5:
    boolean val$visible -> val$visible
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    528:537:void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$KeyEvent -> com.badlogic.gdx.backends.android.AndroidInput$KeyEvent:
    int KEY_DOWN -> KEY_DOWN
    int KEY_UP -> KEY_UP
    int KEY_TYPED -> KEY_TYPED
    long timeStamp -> timeStamp
    int type -> type
    int keyCode -> keyCode
    char keyChar -> keyChar
com.badlogic.gdx.backends.android.AndroidInput$SensorListener -> com.badlogic.gdx.backends.android.AndroidInput$SensorListener:
    float[] accelerometerValues -> accelerometerValues
    float[] magneticFieldValues -> magneticFieldValues
    com.badlogic.gdx.Input$Orientation nativeOrientation -> nativeOrientation
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    800:800:void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    804:816:void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.badlogic.gdx.backends.android.AndroidInput$TouchEvent -> com.badlogic.gdx.backends.android.AndroidInput$TouchEvent:
    int TOUCH_DOWN -> TOUCH_DOWN
    int TOUCH_UP -> TOUCH_UP
    int TOUCH_DRAGGED -> TOUCH_DRAGGED
    long timeStamp -> timeStamp
    int type -> type
    int x -> x
    int y -> y
    int pointer -> pointer
com.badlogic.gdx.backends.android.AndroidInputFactory -> com.badlogic.gdx.backends.android.AndroidInputFactory:
    18:32:com.badlogic.gdx.backends.android.AndroidInput newAndroidInput(com.badlogic.gdx.Application,android.content.Context,java.lang.Object,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> newAndroidInput
com.badlogic.gdx.backends.android.AndroidInputThreePlus -> com.badlogic.gdx.backends.android.AndroidInputThreePlus:
    java.util.ArrayList genericMotionListeners -> genericMotionListeners
    33:35:boolean onGenericMotion(android.view.View,android.view.MotionEvent) -> onGenericMotion
    39:40:void addGenericMotionListener(android.view.View$OnGenericMotionListener) -> addGenericMotionListener
com.badlogic.gdx.backends.android.AndroidLiveWallpaper -> com.badlogic.gdx.backends.android.AndroidLiveWallpaper:
    android.service.wallpaper.WallpaperService service -> service
    android.service.wallpaper.WallpaperService$Engine engine -> engine
    com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper graphics -> graphics
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    com.badlogic.gdx.backends.android.AndroidFiles files -> files
    com.badlogic.gdx.backends.android.AndroidNet net -> net
    com.badlogic.gdx.ApplicationListener listener -> listener
    boolean firstResume -> firstResume
    com.badlogic.gdx.utils.Array runnables -> runnables
    com.badlogic.gdx.utils.Array executedRunnables -> executedRunnables
    com.badlogic.gdx.utils.Array lifecycleListeners -> lifecycleListeners
    int logLevel -> logLevel
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard -> clipboard
    85:98:void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    101:104:void onPause() -> onPause
    107:121:void onResume() -> onResume
    124:126:void onDestroy() -> onDestroy
    129:129:android.service.wallpaper.WallpaperService getService() -> getService
    133:133:android.service.wallpaper.WallpaperService$Engine getEngine() -> getEngine
    138:138:com.badlogic.gdx.ApplicationListener getListener() -> getListener
    142:142:com.badlogic.gdx.ApplicationListener getApplicationListener() -> getApplicationListener
    147:149:void postRunnable(java.lang.Runnable) -> postRunnable
    154:154:com.badlogic.gdx.Audio getAudio() -> getAudio
    159:159:com.badlogic.gdx.Files getFiles() -> getFiles
    164:164:com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    169:169:com.badlogic.gdx.Input getInput() -> getInput
    174:174:com.badlogic.gdx.Net getNet() -> getNet
    179:179:com.badlogic.gdx.Application$ApplicationType getType() -> getType
    184:184:int getVersion() -> getVersion
    189:189:long getJavaHeap() -> getJavaHeap
    194:194:long getNativeHeap() -> getNativeHeap
    199:199:com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    206:209:com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    214:217:void debug(java.lang.String,java.lang.String) -> debug
    221:224:void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    228:229:void log(java.lang.String,java.lang.String) -> log
    233:234:void log(java.lang.String,java.lang.String,java.lang.Exception) -> log
    238:239:void error(java.lang.String,java.lang.String) -> error
    243:244:void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    248:249:void setLogLevel(int) -> setLogLevel
    254:254:void exit() -> exit
    258:260:void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    265:267:void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    int runningEngines -> runningEngines
    40:42:void onCreate() -> onCreate
    46:46:android.service.wallpaper.WallpaperService$Engine onCreateEngine() -> onCreateEngine
    com.badlogic.gdx.ApplicationListener createListener(boolean) -> createListener
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration createConfig() -> createConfig
    void offsetChange(com.badlogic.gdx.ApplicationListener,float,float,float,float,int,int) -> offsetChange
    73:75:void onDestroy() -> onDestroy
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine:
    com.badlogic.gdx.backends.android.AndroidLiveWallpaper app -> app
    com.badlogic.gdx.ApplicationListener listener -> listener
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW view -> view
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService this$0 -> this$0
    90:100:android.os.Bundle onCommand(java.lang.String,int,int,int,android.os.Bundle,boolean) -> onCommand
    105:116:void onCreate(android.view.SurfaceHolder) -> onCreate
    120:127:void onDestroy() -> onDestroy
    130:133:void onPause() -> onPause
    136:139:void onResume() -> onResume
    143:146:void onSurfaceChanged(android.view.SurfaceHolder,int,int,int) -> onSurfaceChanged
    150:152:void onSurfaceCreated(android.view.SurfaceHolder) -> onSurfaceCreated
    156:158:void onSurfaceDestroyed(android.view.SurfaceHolder) -> onSurfaceDestroyed
    162:171:void onVisibilityChanged(boolean) -> onVisibilityChanged
    175:176:void onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    182:193:void onOffsetsChanged(float,float,float,float,int,int) -> onOffsetsChanged
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$1 -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$1:
    float val$xOffset -> val$xOffset
    float val$yOffset -> val$yOffset
    float val$xOffsetStep -> val$xOffsetStep
    float val$yOffsetStep -> val$yOffsetStep
    int val$xPixelOffset -> val$xPixelOffset
    int val$yPixelOffset -> val$yPixelOffset
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine this$1 -> this$1
    189:190:void run() -> run
com.badlogic.gdx.backends.android.AndroidMultiTouchHandler -> com.badlogic.gdx.backends.android.AndroidMultiTouchHandler:
    31:91:void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> onTouch
    94:112:void logAction(int,int) -> logAction
    115:122:void postTouchEvent(com.badlogic.gdx.backends.android.AndroidInput,int,int,int,int,long) -> postTouchEvent
    125:125:boolean supportsMultitouch(android.content.Context) -> supportsMultitouch
com.badlogic.gdx.backends.android.AndroidMusic -> com.badlogic.gdx.backends.android.AndroidMusic:
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    android.media.MediaPlayer player -> player
    boolean isPrepared -> isPrepared
    boolean wasPlaying -> wasPlaying
    39:49:void dispose() -> dispose
    55:55:boolean isLooping() -> isLooping
    60:60:boolean isPlaying() -> isPlaying
    65:66:void pause() -> pause
    70:83:void play() -> play
    87:88:void setLooping(boolean) -> setLooping
    92:93:void setVolume(float) -> setVolume
    97:102:void stop() -> stop
    105:105:float getPosition() -> getPosition
com.badlogic.gdx.backends.android.AndroidNet -> com.badlogic.gdx.backends.android.AndroidNet:
    com.badlogic.gdx.backends.android.AndroidApplication app -> app
    com.badlogic.gdx.net.NetJavaImpl netJavaImpl -> netJavaImpl
    77:78:void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener) -> sendHttpRequest
    82:82:com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,int,com.badlogic.gdx.net.ServerSocketHints) -> newServerSocket
    87:87:com.badlogic.gdx.net.Socket newClientSocket(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.SocketHints) -> newClientSocket
    92:103:void openURI(java.lang.String) -> openURI
com.badlogic.gdx.backends.android.AndroidNet$1 -> com.badlogic.gdx.backends.android.AndroidNet$1:
    android.net.Uri val$uri -> val$uri
    com.badlogic.gdx.backends.android.AndroidNet this$0 -> this$0
    100:101:void run() -> run
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard:
    android.content.Context context -> context
    android.os.Handler handler -> handler
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    android.app.Dialog dialog -> dialog
    android.widget.TextView textView -> textView
    66:83:android.app.Dialog createDialog() -> createDialog
    87:118:android.widget.TextView createView(android.content.Context) -> createView
    122:167:void setVisible(boolean) -> setVisible
    306:306:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    311:311:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1:
    android.text.Editable editable -> editable
    92:92:boolean getDefaultEditable() -> getDefaultEditable
    97:97:android.text.Editable getEditableText() -> getEditableText
    102:102:android.text.method.MovementMethod getDefaultMovementMethod() -> getDefaultMovementMethod
    107:108:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    113:114:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2:
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard this$0 -> this$0
    130:160:void run() -> run
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$1 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$1:
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2 this$1 -> this$1
    136:139:void run() -> run
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2:
    int[] screenloc -> screenloc
    int keyboardHeight -> keyboardHeight
    boolean keyboardShowing -> keyboardShowing
    android.view.View val$content -> val$content
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2 this$1 -> this$1
    150:157:boolean onPreDraw() -> onPreDraw
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable:
    173:174:char charAt(int) -> charAt
    179:180:int length() -> length
    185:186:java.lang.CharSequence subSequence(int,int) -> subSequence
    191:192:void getChars(int,int,char[],int) -> getChars
    196:197:void removeSpan(java.lang.Object) -> removeSpan
    201:202:void setSpan(java.lang.Object,int,int,int) -> setSpan
    206:207:int getSpanEnd(java.lang.Object) -> getSpanEnd
    212:213:int getSpanFlags(java.lang.Object) -> getSpanFlags
    218:219:int getSpanStart(java.lang.Object) -> getSpanStart
    224:225:java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    230:231:int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    236:237:android.text.Editable append(java.lang.CharSequence) -> append
    242:243:android.text.Editable append(char) -> append
    248:249:android.text.Editable append(java.lang.CharSequence,int,int) -> append
    254:255:void clear() -> clear
    259:260:void clearSpans() -> clearSpans
    264:265:android.text.Editable delete(int,int) -> delete
    270:271:android.text.InputFilter[] getFilters() -> getFilters
    276:277:android.text.Editable insert(int,java.lang.CharSequence) -> insert
    282:283:android.text.Editable insert(int,java.lang.CharSequence,int,int) -> insert
    288:289:android.text.Editable replace(int,int,java.lang.CharSequence) -> replace
    294:295:android.text.Editable replace(int,int,java.lang.CharSequence,int,int) -> replace
    300:301:void setFilters(android.text.InputFilter[]) -> setFilters
    169:169:java.lang.Appendable append(char) -> append
    169:169:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    169:169:java.lang.Appendable append(java.lang.CharSequence) -> append
com.badlogic.gdx.backends.android.AndroidPreferences -> com.badlogic.gdx.backends.android.AndroidPreferences:
    android.content.SharedPreferences sharedPrefs -> sharedPrefs
    android.content.SharedPreferences$Editor editor -> editor
    37:39:void putBoolean(java.lang.String,boolean) -> putBoolean
    43:45:void putInteger(java.lang.String,int) -> putInteger
    49:51:void putLong(java.lang.String,long) -> putLong
    55:57:void putFloat(java.lang.String,float) -> putFloat
    61:63:void putString(java.lang.String,java.lang.String) -> putString
    67:75:void put(java.util.Map) -> put
    79:79:boolean getBoolean(java.lang.String) -> getBoolean
    84:84:int getInteger(java.lang.String) -> getInteger
    89:89:long getLong(java.lang.String) -> getLong
    94:94:float getFloat(java.lang.String) -> getFloat
    99:99:java.lang.String getString(java.lang.String) -> getString
    104:104:boolean getBoolean(java.lang.String,boolean) -> getBoolean
    109:109:int getInteger(java.lang.String,int) -> getInteger
    114:114:long getLong(java.lang.String,long) -> getLong
    119:119:float getFloat(java.lang.String,float) -> getFloat
    124:124:java.lang.String getString(java.lang.String,java.lang.String) -> getString
    129:129:java.util.Map get() -> get
    134:134:boolean contains(java.lang.String) -> contains
    139:141:void clear() -> clear
    145:149:void flush() -> flush
    153:155:void remove(java.lang.String) -> remove
    158:161:void edit() -> edit
com.badlogic.gdx.backends.android.AndroidServerSocket -> com.badlogic.gdx.backends.android.AndroidServerSocket:
    com.badlogic.gdx.Net$Protocol protocol -> protocol
    java.net.ServerSocket server -> server
    74:74:com.badlogic.gdx.Net$Protocol getProtocol() -> getProtocol
    80:83:com.badlogic.gdx.net.Socket accept(com.badlogic.gdx.net.SocketHints) -> accept
    89:98:void dispose() -> dispose
com.badlogic.gdx.backends.android.AndroidSingleTouchHandler -> com.badlogic.gdx.backends.android.AndroidSingleTouchHandler:
    30:59:void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> onTouch
    62:72:void postTouchEvent(com.badlogic.gdx.backends.android.AndroidInput,int,int,int,int,long) -> postTouchEvent
    75:75:boolean supportsMultitouch(android.content.Context) -> supportsMultitouch
com.badlogic.gdx.backends.android.AndroidSocket -> com.badlogic.gdx.backends.android.AndroidSocket:
    java.net.Socket socket -> socket
    65:81:void applyHints(com.badlogic.gdx.net.SocketHints) -> applyHints
    85:89:boolean isConnected() -> isConnected
    96:99:java.io.InputStream getInputStream() -> getInputStream
    106:109:java.io.OutputStream getOutputStream() -> getOutputStream
    115:124:void dispose() -> dispose
com.badlogic.gdx.backends.android.AndroidSound -> com.badlogic.gdx.backends.android.AndroidSound:
    android.media.SoundPool soundPool -> soundPool
    android.media.AudioManager manager -> manager
    int soundId -> soundId
    com.badlogic.gdx.utils.IntArray streamIds -> streamIds
    39:40:void dispose() -> dispose
    44:44:long play() -> play
    49:52:long play(float) -> play
    56:58:void stop() -> stop
    62:63:void stop(long) -> stop
    67:68:void setPitch(long,float) -> setPitch
    72:73:void setVolume(long,float) -> setVolume
    77:77:long loop() -> loop
    82:85:long loop(float) -> loop
    90:91:void setLooping(long,boolean) -> setLooping
    95:105:void setPan(long,float,float) -> setPan
    109:119:long play(float,float,float) -> play
    124:134:long loop(float,float,float) -> loop
    139:140:void setPriority(long,int) -> setPriority
com.badlogic.gdx.backends.android.AndroidTouchHandler -> com.badlogic.gdx.backends.android.AndroidTouchHandler:
    void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> onTouch
    boolean supportsMultitouch(android.content.Context) -> supportsMultitouch
com.badlogic.gdx.backends.android.InputProcessorLW -> com.badlogic.gdx.backends.android.InputProcessorLW:
    void touchDrop(int,int) -> touchDrop
com.badlogic.gdx.backends.android.surfaceview.DefaultGLSurfaceView -> com.badlogic.gdx.backends.android.surfaceview.DefaultGLSurfaceView:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    39:41:void onMeasure(int,int) -> onMeasure
com.badlogic.gdx.backends.android.surfaceview.DefaultGLSurfaceViewLW -> com.badlogic.gdx.backends.android.surfaceview.DefaultGLSurfaceViewLW:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
com.badlogic.gdx.backends.android.surfaceview.EGLLogWrapper -> com.badlogic.gdx.backends.android.surfaceview.EGLLogWrapper:
    javax.microedition.khronos.egl.EGL10 mEgl10 -> mEgl10
    java.io.Writer mLog -> mLog
    boolean mLogArgumentNames -> mLogArgumentNames
    boolean mCheckError -> mCheckError
    int mArgCount -> mArgCount
    42:53:boolean eglChooseConfig(javax.microedition.khronos.egl.EGLDisplay,int[],javax.microedition.khronos.egl.EGLConfig[],int,int[]) -> eglChooseConfig
    57:66:boolean eglCopyBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,java.lang.Object) -> eglCopyBuffers
    70:80:javax.microedition.khronos.egl.EGLContext eglCreateContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLContext,int[]) -> eglCreateContext
    84:93:javax.microedition.khronos.egl.EGLSurface eglCreatePbufferSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int[]) -> eglCreatePbufferSurface
    97:107:javax.microedition.khronos.egl.EGLSurface eglCreatePixmapSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[]) -> eglCreatePixmapSurface
    111:121:javax.microedition.khronos.egl.EGLSurface eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[]) -> eglCreateWindowSurface
    125:133:boolean eglDestroyContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> eglDestroyContext
    137:145:boolean eglDestroySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> eglDestroySurface
    149:158:boolean eglGetConfigAttrib(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int[]) -> eglGetConfigAttrib
    162:172:boolean eglGetConfigs(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[],int,int[]) -> eglGetConfigs
    176:183:javax.microedition.khronos.egl.EGLContext eglGetCurrentContext() -> eglGetCurrentContext
    187:194:javax.microedition.khronos.egl.EGLDisplay eglGetCurrentDisplay() -> eglGetCurrentDisplay
    198:206:javax.microedition.khronos.egl.EGLSurface eglGetCurrentSurface(int) -> eglGetCurrentSurface
    210:218:javax.microedition.khronos.egl.EGLDisplay eglGetDisplay(java.lang.Object) -> eglGetDisplay
    222:228:int eglGetError() -> eglGetError
    232:239:boolean eglInitialize(javax.microedition.khronos.egl.EGLDisplay,int[]) -> eglInitialize
    243:252:boolean eglMakeCurrent(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLContext) -> eglMakeCurrent
    256:265:boolean eglQueryContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext,int,int[]) -> eglQueryContext
    269:276:java.lang.String eglQueryString(javax.microedition.khronos.egl.EGLDisplay,int) -> eglQueryString
    280:289:boolean eglQuerySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,int,int[]) -> eglQuerySurface
    293:300:boolean eglSwapBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> eglSwapBuffers
    304:310:boolean eglTerminate(javax.microedition.khronos.egl.EGLDisplay) -> eglTerminate
    314:319:boolean eglWaitGL() -> eglWaitGL
    323:330:boolean eglWaitNative(int,java.lang.Object) -> eglWaitNative
    335:342:void checkError() -> checkError
    345:346:void logLine(java.lang.String) -> logLine
    350:354:void log(java.lang.String) -> log
    357:359:void begin(java.lang.String) -> begin
    362:369:void arg(java.lang.String,java.lang.String) -> arg
    372:374:void end() -> end
    378:382:void flush() -> flush
    385:386:void arg(java.lang.String,int) -> arg
    389:390:void arg(java.lang.String,java.lang.Object) -> arg
    393:400:void arg(java.lang.String,javax.microedition.khronos.egl.EGLDisplay) -> arg
    403:408:void arg(java.lang.String,javax.microedition.khronos.egl.EGLContext) -> arg
    411:416:void arg(java.lang.String,javax.microedition.khronos.egl.EGLSurface) -> arg
    419:421:void returns(java.lang.String) -> returns
    424:425:void returns(int) -> returns
    428:429:void returns(boolean) -> returns
    432:433:void returns(java.lang.Object) -> returns
    436:439:java.lang.String toString(java.lang.Object) -> toString
    444:449:void arg(java.lang.String,int[]) -> arg
    452:457:void arg(java.lang.String,java.lang.Object[]) -> arg
    460:474:java.lang.String toString(int,int[],int) -> toString
    478:492:java.lang.String toString(int,java.lang.Object[],int) -> toString
    496:496:java.lang.String getHex(int) -> getHex
    500:532:java.lang.String getErrorString(int) -> getErrorString
com.badlogic.gdx.backends.android.surfaceview.FillResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.FillResolutionStrategy:
    27:30:com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.FixedResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.FixedResolutionStrategy:
    int width -> width
    int height -> height
    31:31:com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView:
    boolean LOG_THREADS -> LOG_THREADS
    boolean LOG_SURFACE -> LOG_SURFACE
    boolean LOG_RENDERER -> LOG_RENDERER
    boolean DRAW_TWICE_AFTER_SIZE_CHANGED -> DRAW_TWICE_AFTER_SIZE_CHANGED
    int RENDERMODE_WHEN_DIRTY -> RENDERMODE_WHEN_DIRTY
    int RENDERMODE_CONTINUOUSLY -> RENDERMODE_CONTINUOUSLY
    int DEBUG_CHECK_GL_ERROR -> DEBUG_CHECK_GL_ERROR
    int DEBUG_LOG_GL_CALLS -> DEBUG_LOG_GL_CALLS
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThreadManager sGLThreadManager -> sGLThreadManager
    boolean mSizeChanged -> mSizeChanged
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread mGLThread -> mGLThread
    android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser -> mEGLConfigChooser
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory mEGLContextFactory -> mEGLContextFactory
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory -> mEGLWindowSurfaceFactory
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper mGLWrapper -> mGLWrapper
    int mDebugFlags -> mDebugFlags
    176:178:void init() -> init
    189:190:void setGLWrapper(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper) -> setGLWrapper
    198:199:void setDebugFlags(int) -> setDebugFlags
    204:204:int getDebugFlags() -> getDebugFlags
    231:243:void setRenderer(android.opengl.GLSurfaceView$Renderer) -> setRenderer
    252:254:void setEGLContextFactory(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory) -> setEGLContextFactory
    262:264:void setEGLWindowSurfaceFactory(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory) -> setEGLWindowSurfaceFactory
    274:276:void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser) -> setEGLConfigChooser
    288:289:void setEGLConfigChooser(boolean) -> setEGLConfigChooser
    299:300:void setEGLConfigChooser(int,int,int,int,int,int) -> setEGLConfigChooser
    315:316:void setRenderMode(int) -> setRenderMode
    323:323:int getRenderMode() -> getRenderMode
    330:331:void requestRender() -> requestRender
    336:337:void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    343:344:void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    349:350:void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    355:356:void onPause() -> onPause
    362:363:void onResume() -> onResume
    369:370:void queueEvent(java.lang.Runnable) -> queueEvent
    376:378:void onDetachedFromWindow() -> onDetachedFromWindow
    1041:1044:void checkRenderThreadState() -> checkRenderThreadState
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$BaseConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$BaseConfigChooser:
    int[] mConfigSpec -> mConfigSpec
    455:470:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$ComponentSizeChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$ComponentSizeChooser:
    int[] mValue -> mValue
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    495:513:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    518:521:int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultContextFactory:
    420:420:javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    424:425:void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultWindowSurfaceFactory:
    441:441:javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    445:446:void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EglHelper -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EglHelper:
    javax.microedition.khronos.egl.EGL10 mEgl -> mEgl
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> mEglDisplay
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> mEglSurface
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> mEglConfig
    javax.microedition.khronos.egl.EGLContext mEglContext -> mEglContext
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView this$0 -> this$0
    558:581:void start() -> start
    590:631:javax.microedition.khronos.opengles.GL createSurface(android.view.SurfaceHolder) -> createSurface
    637:643:boolean swap() -> swap
    647:652:void destroySurface() -> destroySurface
    655:663:void finish() -> finish
    666:666:void throwEglException(java.lang.String) -> throwEglException
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread:
    boolean mShouldExit -> mShouldExit
    boolean mExited -> mExited
    boolean mPaused -> mPaused
    boolean mHasSurface -> mHasSurface
    boolean mWaitingForSurface -> mWaitingForSurface
    boolean mHaveEgl -> mHaveEgl
    int mWidth -> mWidth
    int mHeight -> mHeight
    int mRenderMode -> mRenderMode
    boolean mRequestRender -> mRequestRender
    boolean mRenderComplete -> mRenderComplete
    java.util.ArrayList mEventQueue -> mEventQueue
    android.opengl.GLSurfaceView$Renderer mRenderer -> mRenderer
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EglHelper mEglHelper -> mEglHelper
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView this$0 -> this$0
    693:703:void run() -> run
    711:717:void stopEglLocked() -> stopEglLocked
    720:866:void guardedRun() -> guardedRun
    871:877:void setRenderMode(int) -> setRenderMode
    881:883:int getRenderMode() -> getRenderMode
    887:890:void requestRender() -> requestRender
    894:900:void surfaceCreated() -> surfaceCreated
    904:917:void surfaceDestroyed() -> surfaceDestroyed
    921:924:void onPause() -> onPause
    928:932:void onResume() -> onResume
    936:955:void onWindowResize(int,int) -> onWindowResize
    961:971:void requestExitAndWait() -> requestExitAndWait
    977:983:void queueEvent(java.lang.Runnable) -> queueEvent
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThreadManager -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThreadManager:
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread mEglOwner -> mEglOwner
    1052:1057:void threadExiting(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread) -> threadExiting
    1066:1071:boolean tryAcquireEglSurfaceLocked(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread) -> tryAcquireEglSurfaceLocked
    1078:1082:void releaseEglSurfaceLocked(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread) -> releaseEglSurfaceLocked
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper:
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL) -> wrap
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$LogWriter -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$LogWriter:
    java.lang.StringBuilder mBuilder -> mBuilder
    1010:1011:void close() -> close
    1015:1016:void flush() -> flush
    1020:1028:void write(char[],int,int) -> write
    1031:1035:void flushBuilder() -> flushBuilder
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$SimpleEGLConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$SimpleEGLConfigChooser:
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW:
    java.lang.String TAG -> TAG
    boolean LOG_VIEW -> LOG_VIEW
    boolean LOG_THREADS -> LOG_THREADS
    boolean LOG_SURFACE -> LOG_SURFACE
    boolean LOG_RENDERER -> LOG_RENDERER
    boolean DRAW_TWICE_AFTER_SIZE_CHANGED -> DRAW_TWICE_AFTER_SIZE_CHANGED
    int RENDERMODE_WHEN_DIRTY -> RENDERMODE_WHEN_DIRTY
    int RENDERMODE_CONTINUOUSLY -> RENDERMODE_CONTINUOUSLY
    int DEBUG_CHECK_GL_ERROR -> DEBUG_CHECK_GL_ERROR
    int DEBUG_LOG_GL_CALLS -> DEBUG_LOG_GL_CALLS
    android.service.wallpaper.WallpaperService$Engine engine -> engine
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThreadManager sGLThreadManager -> sGLThreadManager
    boolean mSizeChanged -> mSizeChanged
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread mGLThread -> mGLThread
    android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser -> mEGLConfigChooser
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLContextFactory mEGLContextFactory -> mEGLContextFactory
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory -> mEGLWindowSurfaceFactory
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLWrapper mGLWrapper -> mGLWrapper
    int mDebugFlags -> mDebugFlags
    200:203:void init() -> init
    206:206:android.view.SurfaceHolder getHolder() -> getHolder
    222:223:void setGLWrapper(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLWrapper) -> setGLWrapper
    233:234:void setDebugFlags(int) -> setDebugFlags
    241:241:int getDebugFlags() -> getDebugFlags
    270:282:void setRenderer(android.opengl.GLSurfaceView$Renderer) -> setRenderer
    293:295:void setEGLContextFactory(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ContextFactory) -> setEGLContextFactory
    305:307:void setEGLWindowSurfaceFactory(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ContextFactory) -> setEGLWindowSurfaceFactory
    319:321:void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser) -> setEGLConfigChooser
    335:336:void setEGLConfigChooser(boolean) -> setEGLConfigChooser
    349:350:void setEGLConfigChooser(int,int,int,int,int,int) -> setEGLConfigChooser
    367:368:void setRenderMode(int) -> setRenderMode
    377:377:int getRenderMode() -> getRenderMode
    386:387:void requestRender() -> requestRender
    399:400:void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    413:414:void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    426:427:void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    439:440:void onPause() -> onPause
    453:454:void onResume() -> onResume
    462:463:void queueEvent(java.lang.Runnable) -> queueEvent
    471:472:void onDestroy() -> onDestroy
    1195:1198:void checkRenderThreadState() -> checkRenderThreadState
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$BaseConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$BaseConfigChooser:
    int[] mConfigSpec -> mConfigSpec
    584:599:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$ComponentSizeChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$ComponentSizeChooser:
    int[] mValue -> mValue
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    623:641:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    646:649:int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$DefaultContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$DefaultContextFactory:
    520:520:javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    524:525:void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$DefaultWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$DefaultWindowSurfaceFactory:
    554:569:javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    573:574:void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLContextFactory:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLWindowSurfaceFactory:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EglHelper -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EglHelper:
    javax.microedition.khronos.egl.EGL10 mEgl -> mEgl
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> mEglDisplay
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> mEglSurface
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> mEglConfig
    javax.microedition.khronos.egl.EGLContext mEglContext -> mEglContext
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW this$0 -> this$0
    693:716:void start() -> start
    725:766:javax.microedition.khronos.opengles.GL createSurface(android.view.SurfaceHolder) -> createSurface
    774:780:boolean swap() -> swap
    784:789:void destroySurface() -> destroySurface
    792:800:void finish() -> finish
    803:803:void throwEglException(java.lang.String) -> throwEglException
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread:
    boolean mShouldExit -> mShouldExit
    boolean mExited -> mExited
    boolean mPaused -> mPaused
    boolean mHasSurface -> mHasSurface
    boolean mWaitingForSurface -> mWaitingForSurface
    boolean mHaveEgl -> mHaveEgl
    int mWidth -> mWidth
    int mHeight -> mHeight
    int mRenderMode -> mRenderMode
    boolean mRequestRender -> mRequestRender
    boolean mRenderComplete -> mRenderComplete
    java.util.ArrayList mEventQueue -> mEventQueue
    android.opengl.GLSurfaceView$Renderer mRenderer -> mRenderer
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EglHelper mEglHelper -> mEglHelper
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW this$0 -> this$0
    832:842:void run() -> run
    850:856:void stopEglLocked() -> stopEglLocked
    859:1005:void guardedRun() -> guardedRun
    1010:1016:void setRenderMode(int) -> setRenderMode
    1020:1022:int getRenderMode() -> getRenderMode
    1026:1029:void requestRender() -> requestRender
    1033:1039:void surfaceCreated() -> surfaceCreated
    1043:1056:void surfaceDestroyed() -> surfaceDestroyed
    1060:1066:void onPause() -> onPause
    1070:1077:void onResume() -> onResume
    1081:1105:void onWindowResize(int,int) -> onWindowResize
    1111:1124:void requestExitAndWait() -> requestExitAndWait
    1132:1138:void queueEvent(java.lang.Runnable) -> queueEvent
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThreadManager -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThreadManager:
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread mEglOwner -> mEglOwner
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW this$0 -> this$0
    1206:1211:void threadExiting(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread) -> threadExiting
    1220:1225:boolean tryAcquireEglSurfaceLocked(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread) -> tryAcquireEglSurfaceLocked
    1232:1236:void releaseEglSurfaceLocked(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread) -> releaseEglSurfaceLocked
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLWrapper:
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL) -> wrap
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$LogWriter -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$LogWriter:
    java.lang.StringBuilder mBuilder -> mBuilder
    1164:1165:void close() -> close
    1168:1169:void flush() -> flush
    1172:1180:void write(char[],int,int) -> write
    1183:1189:void flushBuilder() -> flushBuilder
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$SimpleEGLConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$SimpleEGLConfigChooser:
com.badlogic.gdx.backends.android.surfaceview.GLDebugHelper -> com.badlogic.gdx.backends.android.surfaceview.GLDebugHelper:
    int CONFIG_CHECK_GL_ERROR -> CONFIG_CHECK_GL_ERROR
    int CONFIG_CHECK_THREAD -> CONFIG_CHECK_THREAD
    int CONFIG_LOG_ARGUMENT_NAMES -> CONFIG_LOG_ARGUMENT_NAMES
    int ERROR_WRONG_THREAD -> ERROR_WRONG_THREAD
    56:63:javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL,int,java.io.Writer) -> wrap
    72:75:javax.microedition.khronos.egl.EGL wrap(javax.microedition.khronos.egl.EGL,int,java.io.Writer) -> wrap
com.badlogic.gdx.backends.android.surfaceview.GLErrorWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLErrorWrapper:
    boolean mCheckError -> mCheckError
    boolean mCheckThread -> mCheckThread
    java.lang.Thread mOurThread -> mOurThread
    38:48:void checkThread() -> checkThread
    51:57:void checkError() -> checkError
    63:66:void glActiveTexture(int) -> glActiveTexture
    69:72:void glAlphaFunc(int,float) -> glAlphaFunc
    75:78:void glAlphaFuncx(int,int) -> glAlphaFuncx
    81:84:void glBindTexture(int,int) -> glBindTexture
    87:90:void glBlendFunc(int,int) -> glBlendFunc
    93:96:void glClear(int) -> glClear
    99:102:void glClearColor(float,float,float,float) -> glClearColor
    105:108:void glClearColorx(int,int,int,int) -> glClearColorx
    111:114:void glClearDepthf(float) -> glClearDepthf
    117:120:void glClearDepthx(int) -> glClearDepthx
    123:126:void glClearStencil(int) -> glClearStencil
    129:132:void glClientActiveTexture(int) -> glClientActiveTexture
    135:138:void glColor4f(float,float,float,float) -> glColor4f
    141:144:void glColor4x(int,int,int,int) -> glColor4x
    147:150:void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    153:156:void glColorPointer(int,int,int,java.nio.Buffer) -> glColorPointer
    160:163:void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    167:170:void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    173:176:void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    179:182:void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    185:188:void glCullFace(int) -> glCullFace
    191:194:void glDeleteTextures(int,int[],int) -> glDeleteTextures
    197:200:void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    203:206:void glDepthFunc(int) -> glDepthFunc
    209:212:void glDepthMask(boolean) -> glDepthMask
    215:218:void glDepthRangef(float,float) -> glDepthRangef
    221:224:void glDepthRangex(int,int) -> glDepthRangex
    227:230:void glDisable(int) -> glDisable
    233:236:void glDisableClientState(int) -> glDisableClientState
    239:242:void glDrawArrays(int,int,int) -> glDrawArrays
    245:248:void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    251:254:void glEnable(int) -> glEnable
    257:260:void glEnableClientState(int) -> glEnableClientState
    263:266:void glFinish() -> glFinish
    269:272:void glFlush() -> glFlush
    275:278:void glFogf(int,float) -> glFogf
    281:284:void glFogfv(int,float[],int) -> glFogfv
    287:290:void glFogfv(int,java.nio.FloatBuffer) -> glFogfv
    293:296:void glFogx(int,int) -> glFogx
    299:302:void glFogxv(int,int[],int) -> glFogxv
    305:308:void glFogxv(int,java.nio.IntBuffer) -> glFogxv
    311:314:void glFrontFace(int) -> glFrontFace
    317:320:void glFrustumf(float,float,float,float,float,float) -> glFrustumf
    323:326:void glFrustumx(int,int,int,int,int,int) -> glFrustumx
    329:332:void glGenTextures(int,int[],int) -> glGenTextures
    335:338:void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    341:343:int glGetError() -> glGetError
    347:350:void glGetIntegerv(int,int[],int) -> glGetIntegerv
    353:356:void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    359:362:java.lang.String glGetString(int) -> glGetString
    366:369:void glHint(int,int) -> glHint
    372:375:void glLightModelf(int,float) -> glLightModelf
    378:381:void glLightModelfv(int,float[],int) -> glLightModelfv
    384:387:void glLightModelfv(int,java.nio.FloatBuffer) -> glLightModelfv
    390:393:void glLightModelx(int,int) -> glLightModelx
    396:399:void glLightModelxv(int,int[],int) -> glLightModelxv
    402:405:void glLightModelxv(int,java.nio.IntBuffer) -> glLightModelxv
    408:411:void glLightf(int,int,float) -> glLightf
    414:417:void glLightfv(int,int,float[],int) -> glLightfv
    420:423:void glLightfv(int,int,java.nio.FloatBuffer) -> glLightfv
    426:429:void glLightx(int,int,int) -> glLightx
    432:435:void glLightxv(int,int,int[],int) -> glLightxv
    438:441:void glLightxv(int,int,java.nio.IntBuffer) -> glLightxv
    444:447:void glLineWidth(float) -> glLineWidth
    450:453:void glLineWidthx(int) -> glLineWidthx
    456:459:void glLoadIdentity() -> glLoadIdentity
    462:465:void glLoadMatrixf(float[],int) -> glLoadMatrixf
    468:471:void glLoadMatrixf(java.nio.FloatBuffer) -> glLoadMatrixf
    474:477:void glLoadMatrixx(int[],int) -> glLoadMatrixx
    480:483:void glLoadMatrixx(java.nio.IntBuffer) -> glLoadMatrixx
    486:489:void glLogicOp(int) -> glLogicOp
    492:495:void glMaterialf(int,int,float) -> glMaterialf
    498:501:void glMaterialfv(int,int,float[],int) -> glMaterialfv
    504:507:void glMaterialfv(int,int,java.nio.FloatBuffer) -> glMaterialfv
    510:513:void glMaterialx(int,int,int) -> glMaterialx
    516:519:void glMaterialxv(int,int,int[],int) -> glMaterialxv
    522:525:void glMaterialxv(int,int,java.nio.IntBuffer) -> glMaterialxv
    528:531:void glMatrixMode(int) -> glMatrixMode
    534:537:void glMultMatrixf(float[],int) -> glMultMatrixf
    540:543:void glMultMatrixf(java.nio.FloatBuffer) -> glMultMatrixf
    546:549:void glMultMatrixx(int[],int) -> glMultMatrixx
    552:555:void glMultMatrixx(java.nio.IntBuffer) -> glMultMatrixx
    558:561:void glMultiTexCoord4f(int,float,float,float,float) -> glMultiTexCoord4f
    564:567:void glMultiTexCoord4x(int,int,int,int,int) -> glMultiTexCoord4x
    570:573:void glNormal3f(float,float,float) -> glNormal3f
    576:579:void glNormal3x(int,int,int) -> glNormal3x
    582:585:void glNormalPointer(int,int,java.nio.Buffer) -> glNormalPointer
    588:591:void glOrthof(float,float,float,float,float,float) -> glOrthof
    594:597:void glOrthox(int,int,int,int,int,int) -> glOrthox
    600:603:void glPixelStorei(int,int) -> glPixelStorei
    606:609:void glPointSize(float) -> glPointSize
    612:615:void glPointSizex(int) -> glPointSizex
    618:621:void glPolygonOffset(float,float) -> glPolygonOffset
    624:627:void glPolygonOffsetx(int,int) -> glPolygonOffsetx
    630:633:void glPopMatrix() -> glPopMatrix
    636:639:void glPushMatrix() -> glPushMatrix
    642:645:void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    648:651:void glRotatef(float,float,float,float) -> glRotatef
    654:657:void glRotatex(int,int,int,int) -> glRotatex
    660:663:void glSampleCoverage(float,boolean) -> glSampleCoverage
    666:669:void glSampleCoveragex(int,boolean) -> glSampleCoveragex
    672:675:void glScalef(float,float,float) -> glScalef
    678:681:void glScalex(int,int,int) -> glScalex
    684:687:void glScissor(int,int,int,int) -> glScissor
    690:693:void glShadeModel(int) -> glShadeModel
    696:699:void glStencilFunc(int,int,int) -> glStencilFunc
    702:705:void glStencilMask(int) -> glStencilMask
    708:711:void glStencilOp(int,int,int) -> glStencilOp
    714:717:void glTexCoordPointer(int,int,int,java.nio.Buffer) -> glTexCoordPointer
    720:723:void glTexEnvf(int,int,float) -> glTexEnvf
    726:729:void glTexEnvfv(int,int,float[],int) -> glTexEnvfv
    732:735:void glTexEnvfv(int,int,java.nio.FloatBuffer) -> glTexEnvfv
    738:741:void glTexEnvx(int,int,int) -> glTexEnvx
    744:747:void glTexEnvxv(int,int,int[],int) -> glTexEnvxv
    750:753:void glTexEnvxv(int,int,java.nio.IntBuffer) -> glTexEnvxv
    757:760:void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    763:766:void glTexParameterf(int,int,float) -> glTexParameterf
    769:772:void glTexParameterx(int,int,int) -> glTexParameterx
    775:778:void glTexParameteriv(int,int,int[],int) -> glTexParameteriv
    781:784:void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    788:791:void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    794:797:void glTranslatef(float,float,float) -> glTranslatef
    800:803:void glTranslatex(int,int,int) -> glTranslatex
    806:809:void glVertexPointer(int,int,int,java.nio.Buffer) -> glVertexPointer
    812:815:void glViewport(int,int,int,int) -> glViewport
    818:821:void glClipPlanef(int,float[],int) -> glClipPlanef
    824:827:void glClipPlanef(int,java.nio.FloatBuffer) -> glClipPlanef
    830:833:void glClipPlanex(int,int[],int) -> glClipPlanex
    836:839:void glClipPlanex(int,java.nio.IntBuffer) -> glClipPlanex
    844:847:void glDrawTexfOES(float,float,float,float,float) -> glDrawTexfOES
    850:853:void glDrawTexfvOES(float[],int) -> glDrawTexfvOES
    856:859:void glDrawTexfvOES(java.nio.FloatBuffer) -> glDrawTexfvOES
    862:865:void glDrawTexiOES(int,int,int,int,int) -> glDrawTexiOES
    868:871:void glDrawTexivOES(int[],int) -> glDrawTexivOES
    874:877:void glDrawTexivOES(java.nio.IntBuffer) -> glDrawTexivOES
    880:883:void glDrawTexsOES(short,short,short,short,short) -> glDrawTexsOES
    886:889:void glDrawTexsvOES(short[],int) -> glDrawTexsvOES
    892:895:void glDrawTexsvOES(java.nio.ShortBuffer) -> glDrawTexsvOES
    898:901:void glDrawTexxOES(int,int,int,int,int) -> glDrawTexxOES
    904:907:void glDrawTexxvOES(int[],int) -> glDrawTexxvOES
    910:913:void glDrawTexxvOES(java.nio.IntBuffer) -> glDrawTexxvOES
    916:919:int glQueryMatrixxOES(int[],int,int[],int) -> glQueryMatrixxOES
    923:926:int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer) -> glQueryMatrixxOES
com.badlogic.gdx.backends.android.surfaceview.GLException -> com.badlogic.gdx.backends.android.surfaceview.GLException:
    int mError -> mError
    32:36:java.lang.String getErrorString(int) -> getErrorString
    40:40:int getError() -> getError
com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper:
    int FORMAT_INT -> FORMAT_INT
    int FORMAT_FLOAT -> FORMAT_FLOAT
    int FORMAT_FIXED -> FORMAT_FIXED
    java.io.Writer mLog -> mLog
    boolean mLogArgumentNames -> mLogArgumentNames
    int mArgCount -> mArgCount
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mColorPointer -> mColorPointer
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mNormalPointer -> mNormalPointer
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mTexCoordPointer -> mTexCoordPointer
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mVertexPointer -> mVertexPointer
    boolean mColorArrayEnabled -> mColorArrayEnabled
    boolean mNormalArrayEnabled -> mNormalArrayEnabled
    boolean mTextureCoordArrayEnabled -> mTextureCoordArrayEnabled
    boolean mVertexArrayEnabled -> mVertexArrayEnabled
    java.lang.StringBuilder mStringBuilder -> mStringBuilder
    45:49:void checkError() -> checkError
    52:53:void logLine(java.lang.String) -> logLine
    57:61:void log(java.lang.String) -> log
    64:66:void begin(java.lang.String) -> begin
    69:76:void arg(java.lang.String,java.lang.String) -> arg
    79:81:void end() -> end
    85:89:void flush() -> flush
    92:93:void arg(java.lang.String,boolean) -> arg
    96:97:void arg(java.lang.String,int) -> arg
    100:101:void arg(java.lang.String,float) -> arg
    104:106:void returns(java.lang.String) -> returns
    109:110:void returns(int) -> returns
    113:114:void arg(java.lang.String,int,int[],int) -> arg
    117:118:void arg(java.lang.String,int,short[],int) -> arg
    121:122:void arg(java.lang.String,int,float[],int) -> arg
    125:136:void formattedAppend(java.lang.StringBuilder,int,int) -> formattedAppend
    139:153:java.lang.String toString(int,int,int[],int) -> toString
    157:171:java.lang.String toString(int,short[],int) -> toString
    175:189:java.lang.String toString(int,float[],int) -> toString
    193:199:java.lang.String toString(int,java.nio.FloatBuffer) -> toString
    203:211:java.lang.String toString(int,int,java.nio.IntBuffer) -> toString
    215:221:java.lang.String toString(int,java.nio.ShortBuffer) -> toString
    225:226:void arg(java.lang.String,int,java.nio.FloatBuffer) -> arg
    229:230:void arg(java.lang.String,int,java.nio.IntBuffer) -> arg
    233:234:void arg(java.lang.String,int,java.nio.ShortBuffer) -> arg
    237:241:void argPointer(int,int,int,java.nio.Buffer) -> argPointer
    244:244:java.lang.String getHex(int) -> getHex
    248:264:java.lang.String getErrorString(int) -> getErrorString
    269:294:java.lang.String getClearBufferMask(int) -> getClearBufferMask
    298:323:java.lang.String getFactor(int) -> getFactor
    328:334:java.lang.String getShadeModel(int) -> getShadeModel
    339:343:java.lang.String getTextureTarget(int) -> getTextureTarget
    348:352:java.lang.String getTextureEnvTarget(int) -> getTextureEnvTarget
    357:363:java.lang.String getTextureEnvPName(int) -> getTextureEnvPName
    368:374:int getTextureEnvParamCount(int) -> getTextureEnvParamCount
    379:398:java.lang.String getTextureEnvParamName(float) -> getTextureEnvParamName
    402:410:java.lang.String getMatrixMode(int) -> getMatrixMode
    415:425:java.lang.String getClientState(int) -> getClientState
    430:496:java.lang.String getCap(int) -> getCap
    501:515:java.lang.String getTexturePName(int) -> getTexturePName
    520:543:java.lang.String getTextureParamName(float) -> getTextureParamName
    547:559:java.lang.String getFogPName(int) -> getFogPName
    564:576:int getFogParamCount(int) -> getFogParamCount
    581:597:java.lang.String getBeginMode(int) -> getBeginMode
    602:608:java.lang.String getIndexType(int) -> getIndexType
    613:667:java.lang.String getIntegerStateName(int) -> getIntegerStateName
    672:729:int getIntegerStateSize(int) -> getIntegerStateSize
    734:741:int getIntegerStateFormat(int) -> getIntegerStateFormat
    746:760:java.lang.String getHintTarget(int) -> getHintTarget
    765:773:java.lang.String getHintMode(int) -> getHintMode
    778:782:java.lang.String getFaceName(int) -> getFaceName
    787:801:java.lang.String getMaterialPName(int) -> getMaterialPName
    806:820:int getMaterialParamCount(int) -> getMaterialParamCount
    825:828:java.lang.String getLightName(int) -> getLightName
    832:854:java.lang.String getLightPName(int) -> getLightPName
    859:881:int getLightParamCount(int) -> getLightParamCount
    886:892:java.lang.String getLightModelPName(int) -> getLightModelPName
    897:903:int getLightModelParamCount(int) -> getLightModelParamCount
    908:920:java.lang.String getPointerTypeName(int) -> getPointerTypeName
    925:1017:java.nio.ByteBuffer toByteBuffer(int,java.nio.Buffer) -> toByteBuffer
    1021:1045:char[] toCharIndices(int,int,java.nio.Buffer) -> toCharIndices
    1055:1115:void doArrayElement(java.lang.StringBuilder,boolean,java.lang.String,com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo,int) -> doArrayElement
    1118:1128:void doElement(java.lang.StringBuilder,int,int) -> doElement
    1131:1135:void bindArrays() -> bindArrays
    1138:1142:void unbindArrays() -> unbindArrays
    1145:1148:void startLogIndices() -> startLogIndices
    1151:1153:void endLogIndices() -> endLogIndices
    1159:1164:void glActiveTexture(int) -> glActiveTexture
    1167:1173:void glAlphaFunc(int,float) -> glAlphaFunc
    1176:1182:void glAlphaFuncx(int,int) -> glAlphaFuncx
    1185:1191:void glBindTexture(int,int) -> glBindTexture
    1194:1201:void glBlendFunc(int,int) -> glBlendFunc
    1204:1210:void glClear(int) -> glClear
    1213:1222:void glClearColor(float,float,float,float) -> glClearColor
    1225:1234:void glClearColorx(int,int,int,int) -> glClearColorx
    1237:1243:void glClearDepthf(float) -> glClearDepthf
    1246:1252:void glClearDepthx(int) -> glClearDepthx
    1255:1261:void glClearStencil(int) -> glClearStencil
    1264:1270:void glClientActiveTexture(int) -> glClientActiveTexture
    1273:1282:void glColor4f(float,float,float,float) -> glColor4f
    1285:1294:void glColor4x(int,int,int,int) -> glColor4x
    1297:1306:void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    1309:1316:void glColorPointer(int,int,int,java.nio.Buffer) -> glColorPointer
    1320:1333:void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    1337:1351:void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    1354:1367:void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    1370:1383:void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    1386:1392:void glCullFace(int) -> glCullFace
    1395:1403:void glDeleteTextures(int,int[],int) -> glDeleteTextures
    1406:1413:void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    1416:1422:void glDepthFunc(int) -> glDepthFunc
    1425:1431:void glDepthMask(boolean) -> glDepthMask
    1434:1441:void glDepthRangef(float,float) -> glDepthRangef
    1444:1451:void glDepthRangex(int,int) -> glDepthRangex
    1454:1460:void glDisable(int) -> glDisable
    1463:1483:void glDisableClientState(int) -> glDisableClientState
    1486:1499:void glDrawArrays(int,int,int) -> glDrawArrays
    1502:1517:void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    1520:1526:void glEnable(int) -> glEnable
    1529:1549:void glEnableClientState(int) -> glEnableClientState
    1552:1557:void glFinish() -> glFinish
    1560:1565:void glFlush() -> glFlush
    1568:1575:void glFogf(int,float) -> glFogf
    1578:1586:void glFogfv(int,float[],int) -> glFogfv
    1589:1596:void glFogfv(int,java.nio.FloatBuffer) -> glFogfv
    1599:1606:void glFogx(int,int) -> glFogx
    1609:1617:void glFogxv(int,int[],int) -> glFogxv
    1620:1627:void glFogxv(int,java.nio.IntBuffer) -> glFogxv
    1630:1636:void glFrontFace(int) -> glFrontFace
    1639:1650:void glFrustumf(float,float,float,float,float,float) -> glFrustumf
    1653:1664:void glFrustumx(int,int,int,int,int,int) -> glFrustumx
    1667:1677:void glGenTextures(int,int[],int) -> glGenTextures
    1680:1689:void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    1692:1698:int glGetError() -> glGetError
    1702:1712:void glGetIntegerv(int,int[],int) -> glGetIntegerv
    1715:1724:void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    1727:1735:java.lang.String glGetString(int) -> glGetString
    1739:1746:void glHint(int,int) -> glHint
    1749:1756:void glLightModelf(int,float) -> glLightModelf
    1759:1767:void glLightModelfv(int,float[],int) -> glLightModelfv
    1770:1777:void glLightModelfv(int,java.nio.FloatBuffer) -> glLightModelfv
    1780:1787:void glLightModelx(int,int) -> glLightModelx
    1790:1798:void glLightModelxv(int,int[],int) -> glLightModelxv
    1801:1808:void glLightModelxv(int,java.nio.IntBuffer) -> glLightModelxv
    1811:1819:void glLightf(int,int,float) -> glLightf
    1822:1831:void glLightfv(int,int,float[],int) -> glLightfv
    1834:1842:void glLightfv(int,int,java.nio.FloatBuffer) -> glLightfv
    1845:1853:void glLightx(int,int,int) -> glLightx
    1856:1865:void glLightxv(int,int,int[],int) -> glLightxv
    1868:1876:void glLightxv(int,int,java.nio.IntBuffer) -> glLightxv
    1879:1885:void glLineWidth(float) -> glLineWidth
    1888:1894:void glLineWidthx(int) -> glLineWidthx
    1897:1902:void glLoadIdentity() -> glLoadIdentity
    1905:1912:void glLoadMatrixf(float[],int) -> glLoadMatrixf
    1915:1921:void glLoadMatrixf(java.nio.FloatBuffer) -> glLoadMatrixf
    1924:1931:void glLoadMatrixx(int[],int) -> glLoadMatrixx
    1934:1940:void glLoadMatrixx(java.nio.IntBuffer) -> glLoadMatrixx
    1943:1949:void glLogicOp(int) -> glLogicOp
    1952:1960:void glMaterialf(int,int,float) -> glMaterialf
    1963:1972:void glMaterialfv(int,int,float[],int) -> glMaterialfv
    1975:1983:void glMaterialfv(int,int,java.nio.FloatBuffer) -> glMaterialfv
    1986:1994:void glMaterialx(int,int,int) -> glMaterialx
    1997:2006:void glMaterialxv(int,int,int[],int) -> glMaterialxv
    2009:2017:void glMaterialxv(int,int,java.nio.IntBuffer) -> glMaterialxv
    2020:2026:void glMatrixMode(int) -> glMatrixMode
    2029:2036:void glMultMatrixf(float[],int) -> glMultMatrixf
    2039:2045:void glMultMatrixf(java.nio.FloatBuffer) -> glMultMatrixf
    2048:2055:void glMultMatrixx(int[],int) -> glMultMatrixx
    2058:2064:void glMultMatrixx(java.nio.IntBuffer) -> glMultMatrixx
    2067:2077:void glMultiTexCoord4f(int,float,float,float,float) -> glMultiTexCoord4f
    2080:2090:void glMultiTexCoord4x(int,int,int,int,int) -> glMultiTexCoord4x
    2093:2101:void glNormal3f(float,float,float) -> glNormal3f
    2104:2112:void glNormal3x(int,int,int) -> glNormal3x
    2115:2124:void glNormalPointer(int,int,java.nio.Buffer) -> glNormalPointer
    2127:2138:void glOrthof(float,float,float,float,float,float) -> glOrthof
    2141:2152:void glOrthox(int,int,int,int,int,int) -> glOrthox
    2155:2162:void glPixelStorei(int,int) -> glPixelStorei
    2165:2171:void glPointSize(float) -> glPointSize
    2174:2180:void glPointSizex(int) -> glPointSizex
    2183:2189:void glPolygonOffset(float,float) -> glPolygonOffset
    2192:2199:void glPolygonOffsetx(int,int) -> glPolygonOffsetx
    2202:2207:void glPopMatrix() -> glPopMatrix
    2210:2215:void glPushMatrix() -> glPushMatrix
    2218:2230:void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    2233:2242:void glRotatef(float,float,float,float) -> glRotatef
    2245:2254:void glRotatex(int,int,int,int) -> glRotatex
    2257:2264:void glSampleCoverage(float,boolean) -> glSampleCoverage
    2267:2274:void glSampleCoveragex(int,boolean) -> glSampleCoveragex
    2277:2285:void glScalef(float,float,float) -> glScalef
    2288:2296:void glScalex(int,int,int) -> glScalex
    2299:2308:void glScissor(int,int,int,int) -> glScissor
    2311:2317:void glShadeModel(int) -> glShadeModel
    2320:2328:void glStencilFunc(int,int,int) -> glStencilFunc
    2331:2337:void glStencilMask(int) -> glStencilMask
    2340:2348:void glStencilOp(int,int,int) -> glStencilOp
    2351:2358:void glTexCoordPointer(int,int,int,java.nio.Buffer) -> glTexCoordPointer
    2361:2369:void glTexEnvf(int,int,float) -> glTexEnvf
    2372:2381:void glTexEnvfv(int,int,float[],int) -> glTexEnvfv
    2384:2392:void glTexEnvfv(int,int,java.nio.FloatBuffer) -> glTexEnvfv
    2395:2403:void glTexEnvx(int,int,int) -> glTexEnvx
    2406:2415:void glTexEnvxv(int,int,int[],int) -> glTexEnvxv
    2418:2426:void glTexEnvxv(int,int,java.nio.IntBuffer) -> glTexEnvxv
    2430:2444:void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    2447:2455:void glTexParameterf(int,int,float) -> glTexParameterf
    2458:2466:void glTexParameterx(int,int,int) -> glTexParameterx
    2469:2477:void glTexParameteriv(int,int,int[],int) -> glTexParameteriv
    2480:2488:void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    2492:2505:void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    2508:2515:void glTranslatef(float,float,float) -> glTranslatef
    2518:2525:void glTranslatex(int,int,int) -> glTranslatex
    2528:2534:void glVertexPointer(int,int,int,java.nio.Buffer) -> glVertexPointer
    2537:2545:void glViewport(int,int,int,int) -> glViewport
    2548:2555:void glClipPlanef(int,float[],int) -> glClipPlanef
    2558:2564:void glClipPlanef(int,java.nio.FloatBuffer) -> glClipPlanef
    2567:2574:void glClipPlanex(int,int[],int) -> glClipPlanex
    2577:2583:void glClipPlanex(int,java.nio.IntBuffer) -> glClipPlanex
    2588:2597:void glDrawTexfOES(float,float,float,float,float) -> glDrawTexfOES
    2600:2606:void glDrawTexfvOES(float[],int) -> glDrawTexfvOES
    2609:2614:void glDrawTexfvOES(java.nio.FloatBuffer) -> glDrawTexfvOES
    2617:2626:void glDrawTexiOES(int,int,int,int,int) -> glDrawTexiOES
    2629:2635:void glDrawTexivOES(int[],int) -> glDrawTexivOES
    2638:2643:void glDrawTexivOES(java.nio.IntBuffer) -> glDrawTexivOES
    2646:2655:void glDrawTexsOES(short,short,short,short,short) -> glDrawTexsOES
    2658:2664:void glDrawTexsvOES(short[],int) -> glDrawTexsvOES
    2667:2672:void glDrawTexsvOES(java.nio.ShortBuffer) -> glDrawTexsvOES
    2675:2684:void glDrawTexxOES(int,int,int,int,int) -> glDrawTexxOES
    2687:2693:void glDrawTexxvOES(int[],int) -> glDrawTexxvOES
    2696:2701:void glDrawTexxvOES(java.nio.IntBuffer) -> glDrawTexxvOES
    2704:2712:int glQueryMatrixxOES(int[],int,int[],int) -> glQueryMatrixxOES
    2716:2724:int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer) -> glQueryMatrixxOES
    2730:2730:void glBindBuffer(int,int) -> glBindBuffer
    2734:2734:void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    2738:2738:void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    2742:2742:void glColor4ub(byte,byte,byte,byte) -> glColor4ub
    2746:2746:void glDeleteBuffers(int,int[],int) -> glDeleteBuffers
    2750:2750:void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    2754:2754:void glGenBuffers(int,int[],int) -> glGenBuffers
    2758:2758:void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    2762:2762:void glGetBooleanv(int,boolean[],int) -> glGetBooleanv
    2766:2766:void glGetBooleanv(int,java.nio.IntBuffer) -> glGetBooleanv
    2770:2770:void glGetBufferParameteriv(int,int,int[],int) -> glGetBufferParameteriv
    2774:2774:void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    2778:2778:void glGetClipPlanef(int,float[],int) -> glGetClipPlanef
    2782:2782:void glGetClipPlanef(int,java.nio.FloatBuffer) -> glGetClipPlanef
    2786:2786:void glGetClipPlanex(int,int[],int) -> glGetClipPlanex
    2790:2790:void glGetClipPlanex(int,java.nio.IntBuffer) -> glGetClipPlanex
    2794:2794:void glGetFixedv(int,int[],int) -> glGetFixedv
    2798:2798:void glGetFixedv(int,java.nio.IntBuffer) -> glGetFixedv
    2802:2802:void glGetFloatv(int,float[],int) -> glGetFloatv
    2806:2806:void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    2810:2810:void glGetLightfv(int,int,float[],int) -> glGetLightfv
    2814:2814:void glGetLightfv(int,int,java.nio.FloatBuffer) -> glGetLightfv
    2818:2818:void glGetLightxv(int,int,int[],int) -> glGetLightxv
    2822:2822:void glGetLightxv(int,int,java.nio.IntBuffer) -> glGetLightxv
    2826:2826:void glGetMaterialfv(int,int,float[],int) -> glGetMaterialfv
    2830:2830:void glGetMaterialfv(int,int,java.nio.FloatBuffer) -> glGetMaterialfv
    2834:2834:void glGetMaterialxv(int,int,int[],int) -> glGetMaterialxv
    2838:2838:void glGetMaterialxv(int,int,java.nio.IntBuffer) -> glGetMaterialxv
    2842:2842:void glGetTexEnviv(int,int,int[],int) -> glGetTexEnviv
    2846:2846:void glGetTexEnviv(int,int,java.nio.IntBuffer) -> glGetTexEnviv
    2850:2850:void glGetTexEnvxv(int,int,int[],int) -> glGetTexEnvxv
    2854:2854:void glGetTexEnvxv(int,int,java.nio.IntBuffer) -> glGetTexEnvxv
    2858:2858:void glGetTexParameterfv(int,int,float[],int) -> glGetTexParameterfv
    2862:2862:void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    2866:2866:void glGetTexParameteriv(int,int,int[],int) -> glGetTexParameteriv
    2870:2870:void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    2874:2874:void glGetTexParameterxv(int,int,int[],int) -> glGetTexParameterxv
    2878:2878:void glGetTexParameterxv(int,int,java.nio.IntBuffer) -> glGetTexParameterxv
    2882:2882:boolean glIsBuffer(int) -> glIsBuffer
    2886:2886:boolean glIsEnabled(int) -> glIsEnabled
    2890:2890:boolean glIsTexture(int) -> glIsTexture
    2894:2894:void glPointParameterf(int,float) -> glPointParameterf
    2898:2898:void glPointParameterfv(int,float[],int) -> glPointParameterfv
    2902:2902:void glPointParameterfv(int,java.nio.FloatBuffer) -> glPointParameterfv
    2906:2906:void glPointParameterx(int,int) -> glPointParameterx
    2910:2910:void glPointParameterxv(int,int[],int) -> glPointParameterxv
    2914:2914:void glPointParameterxv(int,java.nio.IntBuffer) -> glPointParameterxv
    2918:2918:void glPointSizePointerOES(int,int,java.nio.Buffer) -> glPointSizePointerOES
    2922:2922:void glTexEnvi(int,int,int) -> glTexEnvi
    2926:2926:void glTexEnviv(int,int,int[],int) -> glTexEnviv
    2930:2930:void glTexEnviv(int,int,java.nio.IntBuffer) -> glTexEnviv
    2934:2934:void glTexParameterfv(int,int,float[],int) -> glTexParameterfv
    2938:2938:void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    2942:2942:void glTexParameteri(int,int,int) -> glTexParameteri
    2946:2946:void glTexParameterxv(int,int,int[],int) -> glTexParameterxv
    2950:2950:void glTexParameterxv(int,int,java.nio.IntBuffer) -> glTexParameterxv
com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo -> com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo:
    int mSize -> mSize
    int mType -> mType
    int mStride -> mStride
    java.nio.Buffer mPointer -> mPointer
    java.nio.ByteBuffer mTempByteBuffer -> mTempByteBuffer
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper this$0 -> this$0
    2971:2983:int sizeof(int) -> sizeof
    2988:2988:int getStride() -> getStride
    2992:2993:void bindByteBuffer() -> bindByteBuffer
    2996:2997:void unbindByteBuffer() -> unbindByteBuffer
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20 -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    58:60:void onMeasure(int,int) -> onMeasure
    69:86:void init(boolean,int,int) -> init
    107:110:void checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10) -> checkEglError
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser:
    int EGL_OPENGL_ES2_BIT -> EGL_OPENGL_ES2_BIT
    int[] s_configAttribs2 -> s_configAttribs2
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int[] mValue -> mValue
    136:157:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    161:176:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    181:184:int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
    188:194:void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> printConfigs
    197:228:void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> printConfig
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory:
    int EGL_CONTEXT_CLIENT_VERSION -> EGL_CONTEXT_CLIENT_VERSION
    92:97:javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    101:102:void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    66:84:void init(boolean,int,int) -> init
    109:112:void checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10) -> checkEglError
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ConfigChooser:
    int EGL_OPENGL_ES2_BIT -> EGL_OPENGL_ES2_BIT
    int[] s_configAttribs2 -> s_configAttribs2
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int[] mValue -> mValue
    138:159:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    163:178:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    183:186:int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
    190:196:void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> printConfigs
    199:230:void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> printConfig
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ContextFactory:
    int EGL_CONTEXT_CLIENT_VERSION -> EGL_CONTEXT_CLIENT_VERSION
    93:98:javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    102:103:void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake:
    int RENDERMODE_WHEN_DIRTY -> RENDERMODE_WHEN_DIRTY
    int RENDERMODE_CONTINUOUSLY -> RENDERMODE_CONTINUOUSLY
    int DEBUG_CHECK_GL_ERROR -> DEBUG_CHECK_GL_ERROR
    int DEBUG_LOG_GL_CALLS -> DEBUG_LOG_GL_CALLS
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    java.lang.Object sEglLock -> sEglLock
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLThread mGLThread -> mGLThread
    android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser -> mEGLConfigChooser
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper mGLWrapper -> mGLWrapper
    int mDebugFlags -> mDebugFlags
    int mRenderMode -> mRenderMode
    android.opengl.GLSurfaceView$Renderer mRenderer -> mRenderer
    int mSurfaceWidth -> mSurfaceWidth
    int mSurfaceHeight -> mSurfaceHeight
    boolean mHasSurface -> mHasSurface
    176:178:void onMeasure(int,int) -> onMeasure
    183:187:void init() -> init
    198:199:void setGLWrapper(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper) -> setGLWrapper
    207:208:void setDebugFlags(int) -> setDebugFlags
    213:213:int getDebugFlags() -> getDebugFlags
    240:245:void setRenderer(android.opengl.GLSurfaceView$Renderer) -> setRenderer
    255:259:void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser) -> setEGLConfigChooser
    271:272:void setEGLConfigChooser(boolean) -> setEGLConfigChooser
    282:283:void setEGLConfigChooser(int,int,int,int,int,int) -> setEGLConfigChooser
    298:302:void setRenderMode(int) -> setRenderMode
    309:309:int getRenderMode() -> getRenderMode
    316:320:void requestRender() -> requestRender
    325:329:void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    335:339:void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    344:349:void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    354:357:void onPause() -> onPause
    363:376:void onResume() -> onResume
    382:385:void queueEvent(java.lang.Runnable) -> queueEvent
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$BaseConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$BaseConfigChooser:
    int[] mConfigSpec -> mConfigSpec
    420:435:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$ComponentSizeChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$ComponentSizeChooser:
    int[] mValue -> mValue
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    460:476:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    481:484:int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$EglHelper -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$EglHelper:
    javax.microedition.khronos.egl.EGL10 mEgl -> mEgl
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> mEglDisplay
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> mEglSurface
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> mEglConfig
    javax.microedition.khronos.egl.EGLContext mEglContext -> mEglContext
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake this$0 -> this$0
    521:541:void start() -> start
    550:580:javax.microedition.khronos.opengles.GL createSurface(android.view.SurfaceHolder) -> createSurface
    586:592:boolean swap() -> swap
    596:609:void finish() -> finish
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLThread -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLThread:
    boolean mDone -> mDone
    boolean mPaused -> mPaused
    boolean mHasSurface -> mHasSurface
    int mWidth -> mWidth
    int mHeight -> mHeight
    int mRenderMode -> mRenderMode
    boolean mRequestRender -> mRequestRender
    android.opengl.GLSurfaceView$Renderer mRenderer -> mRenderer
    java.util.ArrayList mEventQueue -> mEventQueue
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$EglHelper mEglHelper -> mEglHelper
    boolean mSizeChanged -> mSizeChanged
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake this$0 -> this$0
    645:650:void run() -> run
    655:726:void guardedRun() -> guardedRun
    729:741:boolean needToWait() -> needToWait
    745:753:void setRenderMode(int) -> setRenderMode
    757:759:int getRenderMode() -> getRenderMode
    763:766:void requestRender() -> requestRender
    770:773:void surfaceCreated() -> surfaceCreated
    777:780:void surfaceDestroyed() -> surfaceDestroyed
    784:786:void onPause() -> onPause
    790:793:void onResume() -> onResume
    797:802:void onWindowResize(int,int) -> onWindowResize
    808:817:void requestExitAndWait() -> requestExitAndWait
    822:824:void queueEvent(java.lang.Runnable) -> queueEvent
    828:834:java.lang.Runnable getEvent() -> getEvent
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper:
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL) -> wrap
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$LogWriter -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$LogWriter:
    java.lang.StringBuilder mBuilder -> mBuilder
    854:855:void close() -> close
    859:860:void flush() -> flush
    864:872:void write(char[],int,int) -> write
    875:879:void flushBuilder() -> flushBuilder
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$SimpleEGLConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$SimpleEGLConfigChooser:
com.badlogic.gdx.backends.android.surfaceview.GLWrapperBase -> com.badlogic.gdx.backends.android.surfaceview.GLWrapperBase:
    javax.microedition.khronos.opengles.GL10 mgl -> mgl
    javax.microedition.khronos.opengles.GL10Ext mgl10Ext -> mgl10Ext
    javax.microedition.khronos.opengles.GL11 mgl11 -> mgl11
    javax.microedition.khronos.opengles.GL11Ext mgl11Ext -> mgl11Ext
    javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack -> mgl11ExtensionPack
    54:54:void glGetPointerv(int,java.nio.Buffer[]) -> glGetPointerv
    59:59:void glColorPointer(int,int,int,int) -> glColorPointer
    63:63:void glNormalPointer(int,int,int) -> glNormalPointer
    67:67:void glTexCoordPointer(int,int,int,int) -> glTexCoordPointer
    71:71:void glVertexPointer(int,int,int,int) -> glVertexPointer
    75:75:void glDrawElements(int,int,int,int) -> glDrawElements
    79:79:void glBindBuffer(int,int) -> glBindBuffer
    83:83:void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    87:87:void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    91:91:void glColor4ub(byte,byte,byte,byte) -> glColor4ub
    95:95:void glDeleteBuffers(int,int[],int) -> glDeleteBuffers
    99:99:void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    103:103:void glGenBuffers(int,int[],int) -> glGenBuffers
    107:107:void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    111:111:void glGetBooleanv(int,boolean[],int) -> glGetBooleanv
    115:115:void glGetBooleanv(int,java.nio.IntBuffer) -> glGetBooleanv
    119:119:void glGetBufferParameteriv(int,int,int[],int) -> glGetBufferParameteriv
    123:123:void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    127:127:void glGetClipPlanef(int,float[],int) -> glGetClipPlanef
    131:131:void glGetClipPlanef(int,java.nio.FloatBuffer) -> glGetClipPlanef
    135:135:void glGetClipPlanex(int,int[],int) -> glGetClipPlanex
    139:139:void glGetClipPlanex(int,java.nio.IntBuffer) -> glGetClipPlanex
    143:143:void glGetFixedv(int,int[],int) -> glGetFixedv
    147:147:void glGetFixedv(int,java.nio.IntBuffer) -> glGetFixedv
    151:151:void glGetFloatv(int,float[],int) -> glGetFloatv
    155:155:void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    159:159:void glGetLightfv(int,int,float[],int) -> glGetLightfv
    163:163:void glGetLightfv(int,int,java.nio.FloatBuffer) -> glGetLightfv
    167:167:void glGetLightxv(int,int,int[],int) -> glGetLightxv
    171:171:void glGetLightxv(int,int,java.nio.IntBuffer) -> glGetLightxv
    175:175:void glGetMaterialfv(int,int,float[],int) -> glGetMaterialfv
    179:179:void glGetMaterialfv(int,int,java.nio.FloatBuffer) -> glGetMaterialfv
    183:183:void glGetMaterialxv(int,int,int[],int) -> glGetMaterialxv
    187:187:void glGetMaterialxv(int,int,java.nio.IntBuffer) -> glGetMaterialxv
    191:191:void glGetTexEnviv(int,int,int[],int) -> glGetTexEnviv
    195:195:void glGetTexEnviv(int,int,java.nio.IntBuffer) -> glGetTexEnviv
    199:199:void glGetTexEnvxv(int,int,int[],int) -> glGetTexEnvxv
    203:203:void glGetTexEnvxv(int,int,java.nio.IntBuffer) -> glGetTexEnvxv
    207:207:void glGetTexParameterfv(int,int,float[],int) -> glGetTexParameterfv
    211:211:void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    215:215:void glGetTexParameteriv(int,int,int[],int) -> glGetTexParameteriv
    219:219:void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    223:223:void glGetTexParameterxv(int,int,int[],int) -> glGetTexParameterxv
    227:227:void glGetTexParameterxv(int,int,java.nio.IntBuffer) -> glGetTexParameterxv
    231:231:boolean glIsBuffer(int) -> glIsBuffer
    235:235:boolean glIsEnabled(int) -> glIsEnabled
    239:239:boolean glIsTexture(int) -> glIsTexture
    243:243:void glPointParameterf(int,float) -> glPointParameterf
    247:247:void glPointParameterfv(int,float[],int) -> glPointParameterfv
    251:251:void glPointParameterfv(int,java.nio.FloatBuffer) -> glPointParameterfv
    255:255:void glPointParameterx(int,int) -> glPointParameterx
    259:259:void glPointParameterxv(int,int[],int) -> glPointParameterxv
    263:263:void glPointParameterxv(int,java.nio.IntBuffer) -> glPointParameterxv
    267:267:void glPointSizePointerOES(int,int,java.nio.Buffer) -> glPointSizePointerOES
    271:271:void glTexEnvi(int,int,int) -> glTexEnvi
    275:275:void glTexEnviv(int,int,int[],int) -> glTexEnviv
    279:279:void glTexEnviv(int,int,java.nio.IntBuffer) -> glTexEnviv
    283:283:void glTexParameterfv(int,int,float[],int) -> glTexParameterfv
    287:287:void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    291:291:void glTexParameteri(int,int,int) -> glTexParameteri
    295:295:void glTexParameterxv(int,int,int[],int) -> glTexParameterxv
    299:299:void glTexParameterxv(int,int,java.nio.IntBuffer) -> glTexParameterxv
    305:305:void glCurrentPaletteMatrixOES(int) -> glCurrentPaletteMatrixOES
    309:309:void glLoadPaletteFromModelViewMatrixOES() -> glLoadPaletteFromModelViewMatrixOES
    313:313:void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer) -> glMatrixIndexPointerOES
    317:317:void glMatrixIndexPointerOES(int,int,int,int) -> glMatrixIndexPointerOES
    321:321:void glWeightPointerOES(int,int,int,java.nio.Buffer) -> glWeightPointerOES
    325:325:void glWeightPointerOES(int,int,int,int) -> glWeightPointerOES
    331:331:void glBindFramebufferOES(int,int) -> glBindFramebufferOES
    335:335:void glBindRenderbufferOES(int,int) -> glBindRenderbufferOES
    339:339:void glBlendEquation(int) -> glBlendEquation
    343:343:void glBlendEquationSeparate(int,int) -> glBlendEquationSeparate
    347:347:void glBlendFuncSeparate(int,int,int,int) -> glBlendFuncSeparate
    351:351:int glCheckFramebufferStatusOES(int) -> glCheckFramebufferStatusOES
    355:355:void glCompressedTexImage2D(int,int,int,int,int,int,int) -> glCompressedTexImage2D
    359:359:void glDeleteFramebuffersOES(int,int[],int) -> glDeleteFramebuffersOES
    363:363:void glDeleteFramebuffersOES(int,java.nio.IntBuffer) -> glDeleteFramebuffersOES
    367:367:void glDeleteRenderbuffersOES(int,int[],int) -> glDeleteRenderbuffersOES
    371:371:void glDeleteRenderbuffersOES(int,java.nio.IntBuffer) -> glDeleteRenderbuffersOES
    375:375:void glFramebufferRenderbufferOES(int,int,int,int) -> glFramebufferRenderbufferOES
    379:379:void glFramebufferTexture2DOES(int,int,int,int,int) -> glFramebufferTexture2DOES
    383:383:void glGenerateMipmapOES(int) -> glGenerateMipmapOES
    387:387:void glGenFramebuffersOES(int,int[],int) -> glGenFramebuffersOES
    391:391:void glGenFramebuffersOES(int,java.nio.IntBuffer) -> glGenFramebuffersOES
    395:395:void glGenRenderbuffersOES(int,int[],int) -> glGenRenderbuffersOES
    399:399:void glGenRenderbuffersOES(int,java.nio.IntBuffer) -> glGenRenderbuffersOES
    403:403:void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int) -> glGetFramebufferAttachmentParameterivOES
    407:407:void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer) -> glGetFramebufferAttachmentParameterivOES
    411:411:void glGetRenderbufferParameterivOES(int,int,int[],int) -> glGetRenderbufferParameterivOES
    415:415:void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer) -> glGetRenderbufferParameterivOES
    419:419:void glGetTexGenfv(int,int,float[],int) -> glGetTexGenfv
    423:423:void glGetTexGenfv(int,int,java.nio.FloatBuffer) -> glGetTexGenfv
    427:427:void glGetTexGeniv(int,int,int[],int) -> glGetTexGeniv
    431:431:void glGetTexGeniv(int,int,java.nio.IntBuffer) -> glGetTexGeniv
    435:435:void glGetTexGenxv(int,int,int[],int) -> glGetTexGenxv
    439:439:void glGetTexGenxv(int,int,java.nio.IntBuffer) -> glGetTexGenxv
    443:443:boolean glIsFramebufferOES(int) -> glIsFramebufferOES
    447:447:boolean glIsRenderbufferOES(int) -> glIsRenderbufferOES
    451:451:void glRenderbufferStorageOES(int,int,int,int) -> glRenderbufferStorageOES
    455:455:void glTexGenf(int,int,float) -> glTexGenf
    459:459:void glTexGenfv(int,int,float[],int) -> glTexGenfv
    463:463:void glTexGenfv(int,int,java.nio.FloatBuffer) -> glTexGenfv
    467:467:void glTexGeni(int,int,int) -> glTexGeni
    471:471:void glTexGeniv(int,int,int[],int) -> glTexGeniv
    475:475:void glTexGeniv(int,int,java.nio.IntBuffer) -> glTexGeniv
    479:479:void glTexGenx(int,int,int) -> glTexGenx
    483:483:void glTexGenxv(int,int,int[],int) -> glTexGenxv
    487:487:void glTexGenxv(int,int,java.nio.IntBuffer) -> glTexGenxv
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser:
    int EGL_OPENGL_ES2_BIT -> EGL_OPENGL_ES2_BIT
    int EGL_COVERAGE_BUFFERS_NV -> EGL_COVERAGE_BUFFERS_NV
    int EGL_COVERAGE_SAMPLES_NV -> EGL_COVERAGE_SAMPLES_NV
    java.lang.String TAG -> TAG
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int mNumSamples -> mNumSamples
    boolean mUseGL20 -> mUseGL20
    int[] mConfigAttribs -> mConfigAttribs
    int[] mValue -> mValue
    65:85:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    89:152:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    156:159:int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
    163:169:void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> printConfigs
    172:207:void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> printConfig
com.badlogic.gdx.backends.android.surfaceview.RatioResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.RatioResolutionStrategy:
    float ratio -> ratio
    40:56:com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension -> com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension:
    int width -> width
    int height -> height
com.badlogic.gdx.files.FileHandle -> com.badlogic.gdx.c.a:
    java.io.File file -> file
    com.badlogic.gdx.Files$FileType type -> type
    83:83:java.lang.String path() -> path
    88:88:java.lang.String name() -> name
    92:95:java.lang.String extension() -> extension
    100:103:java.lang.String nameWithoutExtension() -> nameWithoutExtension
    109:112:java.lang.String pathWithoutExtension() -> pathWithoutExtension
    116:116:com.badlogic.gdx.Files$FileType type() -> type
    122:123:java.io.File file() -> file
    129:140:java.io.InputStream read() -> read
    147:147:java.io.BufferedInputStream read(int) -> read
    153:153:java.io.Reader reader() -> reader
    160:162:java.io.Reader reader(java.lang.String) -> reader
    169:169:java.io.BufferedReader reader(int) -> reader
    176:178:java.io.BufferedReader reader(int,java.lang.String) -> reader
    185:185:java.lang.String readString() -> readString
    191:214:java.lang.String readString(java.lang.String) -> readString
    220:254:byte[] readBytes() -> readBytes
    263:279:int readBytes(byte[],int,int) -> readBytes
    287:295:java.io.OutputStream write(boolean) -> write
    305:324:void write(java.io.InputStream,boolean) -> write
    334:334:java.io.Writer writer(boolean) -> writer
    343:355:java.io.Writer writer(boolean,java.lang.String) -> writer
    364:365:void writeString(java.lang.String,boolean) -> writeString
    373:383:void writeString(java.lang.String,boolean,java.lang.String) -> writeString
    392:401:void writeBytes(byte[],boolean) -> writeBytes
    410:419:void writeBytes(byte[],int,int,boolean) -> writeBytes
    428:434:com.badlogic.gdx.files.FileHandle[] list() -> list
    442:458:com.badlogic.gdx.files.FileHandle[] list(java.lang.String) -> list
    465:466:boolean isDirectory() -> isDirectory
    473:474:com.badlogic.gdx.files.FileHandle child(java.lang.String) -> child
    481:482:com.badlogic.gdx.files.FileHandle sibling(java.lang.String) -> sibling
    486:493:com.badlogic.gdx.files.FileHandle parent() -> parent
    498:501:void mkdirs() -> mkdirs
    506:513:boolean exists() -> exists
    519:521:boolean delete() -> delete
    527:529:boolean deleteDirectory() -> deleteDirectory
    535:536:void emptyDirectory() -> emptyDirectory
    541:544:void emptyDirectory(boolean) -> emptyDirectory
    555:569:void copyTo(com.badlogic.gdx.files.FileHandle) -> copyTo
    575:579:void moveTo(com.badlogic.gdx.files.FileHandle) -> moveTo
    584:597:long length() -> length
    604:604:long lastModified() -> lastModified
    608:608:java.lang.String toString() -> toString
    613:615:com.badlogic.gdx.files.FileHandle tempFile(java.lang.String) -> tempFile
    621:626:com.badlogic.gdx.files.FileHandle tempDirectory(java.lang.String) -> tempDirectory
    631:644:void emptyDirectory(java.io.File,boolean) -> emptyDirectory
    647:648:boolean deleteDirectory(java.io.File) -> deleteDirectory
    653:655:void copyFile(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle) -> copyFile
    661:671:void copyDirectory(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle) -> copyDirectory
com.badlogic.gdx.files.FileHandle$1 -> com.badlogic.gdx.c.b:
    int[] $SwitchMap$com$badlogic$gdx$Files$FileType -> a
com.badlogic.gdx.files.FileHandleStream -> com.badlogic.gdx.c.c:
    35:35:boolean isDirectory() -> isDirectory
    39:39:long length() -> length
    43:43:boolean exists() -> exists
    47:47:com.badlogic.gdx.files.FileHandle child(java.lang.String) -> child
    51:51:com.badlogic.gdx.files.FileHandle sibling(java.lang.String) -> sibling
    55:55:com.badlogic.gdx.files.FileHandle parent() -> parent
    59:59:java.io.InputStream read() -> read
    63:63:java.io.OutputStream write(boolean) -> write
    67:67:com.badlogic.gdx.files.FileHandle[] list() -> list
    71:71:void mkdirs() -> mkdirs
    75:75:boolean delete() -> delete
    79:79:boolean deleteDirectory() -> deleteDirectory
    83:83:void copyTo(com.badlogic.gdx.files.FileHandle) -> copyTo
    87:87:void moveTo(com.badlogic.gdx.files.FileHandle) -> moveTo
com.badlogic.gdx.files.package-info -> com.badlogic.gdx.c.d:
com.badlogic.gdx.graphics.Camera -> com.badlogic.gdx.graphics.a:
    com.badlogic.gdx.math.Vector3 position -> a
    com.badlogic.gdx.math.Vector3 direction -> b
    com.badlogic.gdx.math.Vector3 up -> c
    com.badlogic.gdx.math.Matrix4 projection -> d
    com.badlogic.gdx.math.Matrix4 view -> e
    com.badlogic.gdx.math.Matrix4 combined -> f
    com.badlogic.gdx.math.Matrix4 invProjectionView -> g
    float near -> h
    float far -> i
    float viewportWidth -> j
    float viewportHeight -> k
    com.badlogic.gdx.math.Frustum frustum -> l
    com.badlogic.gdx.math.Vector3 tmpVec -> o
    com.badlogic.gdx.math.Vector3 right -> m
    com.badlogic.gdx.math.collision.Ray ray -> n
    void update() -> a
    void update$1385ff() -> b
    77:81:void apply(com.badlogic.gdx.graphics.GL10) -> a
    88:89:void lookAt$483d242b() -> c
    94:95:void lookAt(com.badlogic.gdx.math.Vector3) -> b
    102:104:void normalizeUp() -> d
    114:116:void rotate(float,float,float,float) -> a
    124:126:void rotate(com.badlogic.gdx.math.Vector3,float) -> a
    133:135:void rotate(com.badlogic.gdx.math.Matrix4) -> a
    142:144:void rotate(com.badlogic.gdx.math.Quaternion) -> a
    153:159:void rotateAround(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> a
    165:167:void transform(com.badlogic.gdx.math.Matrix4) -> b
    174:175:void translate(float,float,float) -> a
    180:181:void translate(com.badlogic.gdx.math.Vector3) -> c
    196:204:void unproject$649c6b07(com.badlogic.gdx.math.Vector3,float,float) -> a
    214:215:void unproject(com.badlogic.gdx.math.Vector3) -> d
    223:224:void project(com.badlogic.gdx.math.Vector3) -> a
    239:243:void project$649c6b07(com.badlogic.gdx.math.Vector3,float,float) -> b
    255:258:com.badlogic.gdx.math.collision.Ray getPickRay$5acfe6a4(float,float,float,float) -> b
    269:269:com.badlogic.gdx.math.collision.Ray getPickRay(float,float) -> a
com.badlogic.gdx.graphics.Color -> com.badlogic.gdx.graphics.b:
    com.badlogic.gdx.graphics.Color CLEAR -> a
    com.badlogic.gdx.graphics.Color WHITE -> b
    com.badlogic.gdx.graphics.Color BLACK -> c
    com.badlogic.gdx.graphics.Color RED -> d
    com.badlogic.gdx.graphics.Color GREEN -> e
    com.badlogic.gdx.graphics.Color BLUE -> f
    com.badlogic.gdx.graphics.Color LIGHT_GRAY -> g
    com.badlogic.gdx.graphics.Color GRAY -> h
    com.badlogic.gdx.graphics.Color DARK_GRAY -> i
    com.badlogic.gdx.graphics.Color PINK -> j
    com.badlogic.gdx.graphics.Color ORANGE -> k
    com.badlogic.gdx.graphics.Color YELLOW -> l
    com.badlogic.gdx.graphics.Color MAGENTA -> m
    com.badlogic.gdx.graphics.Color CYAN -> n
    com.badlogic.gdx.graphics.Color tmp -> o
    float r -> p
    float g -> q
    float b -> r
    float a -> s
    76:80:com.badlogic.gdx.graphics.Color set(com.badlogic.gdx.graphics.Color) -> a
    88:92:com.badlogic.gdx.graphics.Color mul(com.badlogic.gdx.graphics.Color) -> b
    100:104:com.badlogic.gdx.graphics.Color mul(float) -> a
    112:116:com.badlogic.gdx.graphics.Color add(com.badlogic.gdx.graphics.Color) -> c
    124:128:com.badlogic.gdx.graphics.Color sub(com.badlogic.gdx.graphics.Color) -> d
    133:148:com.badlogic.gdx.graphics.Color clamp() -> c
    153:157:com.badlogic.gdx.graphics.Color set(float,float,float,float) -> a
    162:166:com.badlogic.gdx.graphics.Color add(float,float,float,float) -> d
    171:175:com.badlogic.gdx.graphics.Color sub(float,float,float,float) -> e
    180:184:com.badlogic.gdx.graphics.Color mul(float,float,float,float) -> f
    193:197:com.badlogic.gdx.graphics.Color lerp(com.badlogic.gdx.graphics.Color,float) -> a
    209:213:com.badlogic.gdx.graphics.Color lerp(float,float,float,float,float) -> a
    218:221:boolean equals(java.lang.Object) -> equals
    226:230:int hashCode() -> hashCode
    237:238:float toFloatBits() -> a
    244:245:int toIntBits() -> d
    250:254:java.lang.String toString() -> toString
    260:264:com.badlogic.gdx.graphics.Color valueOf(java.lang.String) -> a
    276:278:float toFloatBits(int,int,int,int) -> a
    285:286:float toFloatBits(float,float,float,float) -> b
    297:297:int toIntBits(int,int,int,int) -> b
    301:301:int alpha(float) -> b
    305:305:int luminanceAlpha(float,float) -> a
    309:309:int rgb565(float,float,float) -> a
    313:313:int rgba4444(float,float,float,float) -> g
    317:317:int rgb888(float,float,float) -> b
    321:321:int rgba8888(float,float,float,float) -> c
    325:325:int rgb565(com.badlogic.gdx.graphics.Color) -> e
    329:329:int rgba4444(com.badlogic.gdx.graphics.Color) -> f
    333:333:int rgb888(com.badlogic.gdx.graphics.Color) -> g
    337:337:int rgba8888(com.badlogic.gdx.graphics.Color) -> h
    346:349:void rgb565ToColor(com.badlogic.gdx.graphics.Color,int) -> a
    357:361:void rgba4444ToColor(com.badlogic.gdx.graphics.Color,int) -> b
    369:372:void rgb888ToColor(com.badlogic.gdx.graphics.Color,int) -> c
    380:384:void rgba8888ToColor(com.badlogic.gdx.graphics.Color,int) -> d
    390:390:com.badlogic.gdx.graphics.Color tmp() -> e
    395:395:com.badlogic.gdx.graphics.Color cpy() -> b
com.badlogic.gdx.graphics.FPSLogger -> com.badlogic.gdx.graphics.c:
    long startTime -> a
    34:38:void log() -> a
com.badlogic.gdx.graphics.GL10 -> com.badlogic.gdx.graphics.d:
    int GL_OES_VERSION_1_0 -> a
    int GL_OES_read_format -> b
    int GL_OES_compressed_paletted_texture -> c
    int GL_DEPTH_BUFFER_BIT -> d
    int GL_STENCIL_BUFFER_BIT -> e
    int GL_COLOR_BUFFER_BIT -> f
    int GL_FALSE -> g
    int GL_TRUE -> h
    int GL_POINTS -> i
    int GL_LINES -> j
    int GL_LINE_LOOP -> k
    int GL_LINE_STRIP -> l
    int GL_TRIANGLES -> m
    int GL_TRIANGLE_STRIP -> n
    int GL_TRIANGLE_FAN -> o
    int GL_NEVER -> p
    int GL_LESS -> q
    int GL_EQUAL -> r
    int GL_LEQUAL -> s
    int GL_GREATER -> t
    int GL_NOTEQUAL -> u
    int GL_GEQUAL -> v
    int GL_ALWAYS -> w
    int GL_ZERO -> x
    int GL_ONE -> y
    int GL_SRC_COLOR -> z
    int GL_ONE_MINUS_SRC_COLOR -> A
    int GL_SRC_ALPHA -> B
    int GL_ONE_MINUS_SRC_ALPHA -> C
    int GL_DST_ALPHA -> D
    int GL_ONE_MINUS_DST_ALPHA -> E
    int GL_DST_COLOR -> F
    int GL_ONE_MINUS_DST_COLOR -> G
    int GL_SRC_ALPHA_SATURATE -> H
    int GL_FRONT -> I
    int GL_BACK -> J
    int GL_FRONT_AND_BACK -> K
    int GL_FOG -> L
    int GL_LIGHTING -> M
    int GL_TEXTURE_2D -> N
    int GL_CULL_FACE -> O
    int GL_ALPHA_TEST -> P
    int GL_BLEND -> Q
    int GL_COLOR_LOGIC_OP -> R
    int GL_DITHER -> S
    int GL_STENCIL_TEST -> T
    int GL_DEPTH_TEST -> U
    int GL_POINT_SMOOTH -> V
    int GL_LINE_SMOOTH -> W
    int GL_SCISSOR_TEST -> X
    int GL_COLOR_MATERIAL -> Y
    int GL_NORMALIZE -> Z
    int GL_RESCALE_NORMAL -> aa
    int GL_POLYGON_OFFSET_FILL -> ab
    int GL_VERTEX_ARRAY -> ac
    int GL_NORMAL_ARRAY -> ad
    int GL_COLOR_ARRAY -> ae
    int GL_TEXTURE_COORD_ARRAY -> af
    int GL_MULTISAMPLE -> ag
    int GL_SAMPLE_ALPHA_TO_COVERAGE -> ah
    int GL_SAMPLE_ALPHA_TO_ONE -> ai
    int GL_SAMPLE_COVERAGE -> aj
    int GL_NO_ERROR -> ak
    int GL_INVALID_ENUM -> al
    int GL_INVALID_VALUE -> am
    int GL_INVALID_OPERATION -> an
    int GL_STACK_OVERFLOW -> ao
    int GL_STACK_UNDERFLOW -> ap
    int GL_OUT_OF_MEMORY -> aq
    int GL_EXP -> ar
    int GL_EXP2 -> as
    int GL_FOG_DENSITY -> at
    int GL_FOG_START -> au
    int GL_FOG_END -> av
    int GL_FOG_MODE -> aw
    int GL_FOG_COLOR -> ax
    int GL_CW -> ay
    int GL_CCW -> az
    int GL_SMOOTH_POINT_SIZE_RANGE -> aA
    int GL_SMOOTH_LINE_WIDTH_RANGE -> aB
    int GL_ALIASED_POINT_SIZE_RANGE -> aC
    int GL_ALIASED_LINE_WIDTH_RANGE -> aD
    int GL_IMPLEMENTATION_COLOR_READ_TYPE_OES -> aE
    int GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES -> aF
    int GL_MAX_LIGHTS -> aG
    int GL_MAX_TEXTURE_SIZE -> aH
    int GL_MAX_MODELVIEW_STACK_DEPTH -> aI
    int GL_MAX_PROJECTION_STACK_DEPTH -> aJ
    int GL_MAX_TEXTURE_STACK_DEPTH -> aK
    int GL_MAX_VIEWPORT_DIMS -> aL
    int GL_MAX_ELEMENTS_VERTICES -> aM
    int GL_MAX_ELEMENTS_INDICES -> aN
    int GL_MAX_TEXTURE_UNITS -> aO
    int GL_NUM_COMPRESSED_TEXTURE_FORMATS -> aP
    int GL_COMPRESSED_TEXTURE_FORMATS -> aQ
    int GL_SUBPIXEL_BITS -> aR
    int GL_RED_BITS -> aS
    int GL_GREEN_BITS -> aT
    int GL_BLUE_BITS -> aU
    int GL_ALPHA_BITS -> aV
    int GL_DEPTH_BITS -> aW
    int GL_STENCIL_BITS -> aX
    int GL_DONT_CARE -> aY
    int GL_FASTEST -> aZ
    int GL_NICEST -> ba
    int GL_PERSPECTIVE_CORRECTION_HINT -> bb
    int GL_POINT_SMOOTH_HINT -> bc
    int GL_LINE_SMOOTH_HINT -> bd
    int GL_POLYGON_SMOOTH_HINT -> be
    int GL_FOG_HINT -> bf
    int GL_LIGHT_MODEL_AMBIENT -> bg
    int GL_LIGHT_MODEL_TWO_SIDE -> bh
    int GL_AMBIENT -> bi
    int GL_DIFFUSE -> bj
    int GL_SPECULAR -> bk
    int GL_POSITION -> bl
    int GL_SPOT_DIRECTION -> bm
    int GL_SPOT_EXPONENT -> bn
    int GL_SPOT_CUTOFF -> bo
    int GL_CONSTANT_ATTENUATION -> bp
    int GL_LINEAR_ATTENUATION -> bq
    int GL_QUADRATIC_ATTENUATION -> br
    int GL_BYTE -> bs
    int GL_UNSIGNED_BYTE -> bt
    int GL_SHORT -> bu
    int GL_UNSIGNED_SHORT -> bv
    int GL_FLOAT -> bw
    int GL_CLEAR -> bx
    int GL_AND -> by
    int GL_AND_REVERSE -> bz
    int GL_COPY -> bA
    int GL_AND_INVERTED -> bB
    int GL_NOOP -> bC
    int GL_XOR -> bD
    int GL_OR -> bE
    int GL_NOR -> bF
    int GL_EQUIV -> bG
    int GL_INVERT -> bH
    int GL_OR_REVERSE -> bI
    int GL_COPY_INVERTED -> bJ
    int GL_OR_INVERTED -> bK
    int GL_NAND -> bL
    int GL_SET -> bM
    int GL_EMISSION -> bN
    int GL_SHININESS -> bO
    int GL_AMBIENT_AND_DIFFUSE -> bP
    int GL_MODELVIEW -> bQ
    int GL_PROJECTION -> bR
    int GL_TEXTURE -> bS
    int GL_ALPHA -> bT
    int GL_RGB -> bU
    int GL_RGBA -> bV
    int GL_LUMINANCE -> bW
    int GL_LUMINANCE_ALPHA -> bX
    int GL_UNPACK_ALIGNMENT -> bY
    int GL_PACK_ALIGNMENT -> bZ
    int GL_UNSIGNED_SHORT_4_4_4_4 -> ca
    int GL_UNSIGNED_SHORT_5_5_5_1 -> cb
    int GL_UNSIGNED_SHORT_5_6_5 -> cc
    int GL_FLAT -> cd
    int GL_SMOOTH -> ce
    int GL_KEEP -> cf
    int GL_REPLACE -> cg
    int GL_INCR -> ch
    int GL_DECR -> ci
    int GL_VENDOR -> cj
    int GL_RENDERER -> ck
    int GL_VERSION -> cl
    int GL_EXTENSIONS -> cm
    int GL_MODULATE -> cn
    int GL_DECAL -> co
    int GL_ADD -> cp
    int GL_TEXTURE_ENV_MODE -> cq
    int GL_TEXTURE_ENV_COLOR -> cr
    int GL_TEXTURE_ENV -> cs
    int GL_NEAREST -> ct
    int GL_LINEAR -> cu
    int GL_NEAREST_MIPMAP_NEAREST -> cv
    int GL_LINEAR_MIPMAP_NEAREST -> cw
    int GL_NEAREST_MIPMAP_LINEAR -> cx
    int GL_LINEAR_MIPMAP_LINEAR -> cy
    int GL_TEXTURE_MAG_FILTER -> cz
    int GL_TEXTURE_MIN_FILTER -> cA
    int GL_TEXTURE_WRAP_S -> cB
    int GL_TEXTURE_WRAP_T -> cC
    int GL_TEXTURE0 -> cD
    int GL_TEXTURE1 -> cE
    int GL_TEXTURE2 -> cF
    int GL_TEXTURE3 -> cG
    int GL_TEXTURE4 -> cH
    int GL_TEXTURE5 -> cI
    int GL_TEXTURE6 -> cJ
    int GL_TEXTURE7 -> cK
    int GL_TEXTURE8 -> cL
    int GL_TEXTURE9 -> cM
    int GL_TEXTURE10 -> cN
    int GL_TEXTURE11 -> cO
    int GL_TEXTURE12 -> cP
    int GL_TEXTURE13 -> cQ
    int GL_TEXTURE14 -> cR
    int GL_TEXTURE15 -> cS
    int GL_TEXTURE16 -> cT
    int GL_TEXTURE17 -> cU
    int GL_TEXTURE18 -> cV
    int GL_TEXTURE19 -> cW
    int GL_TEXTURE20 -> cX
    int GL_TEXTURE21 -> cY
    int GL_TEXTURE22 -> cZ
    int GL_TEXTURE23 -> da
    int GL_TEXTURE24 -> db
    int GL_TEXTURE25 -> dc
    int GL_TEXTURE26 -> dd
    int GL_TEXTURE27 -> de
    int GL_TEXTURE28 -> df
    int GL_TEXTURE29 -> dg
    int GL_TEXTURE30 -> dh
    int GL_TEXTURE31 -> di
    int GL_REPEAT -> dj
    int GL_CLAMP_TO_EDGE -> dk
    int GL_PALETTE4_RGB8_OES -> dl
    int GL_PALETTE4_RGBA8_OES -> dm
    int GL_PALETTE4_R5_G6_B5_OES -> dn
    int GL_PALETTE4_RGBA4_OES -> do
    int GL_PALETTE4_RGB5_A1_OES -> dp
    int GL_PALETTE8_RGB8_OES -> dq
    int GL_PALETTE8_RGBA8_OES -> dr
    int GL_PALETTE8_R5_G6_B5_OES -> ds
    int GL_PALETTE8_RGBA4_OES -> dt
    int GL_PALETTE8_RGB5_A1_OES -> du
    int GL_LIGHT0 -> dv
    int GL_LIGHT1 -> dw
    int GL_LIGHT2 -> dx
    int GL_LIGHT3 -> dy
    int GL_LIGHT4 -> dz
    int GL_LIGHT5 -> dA
    int GL_LIGHT6 -> dB
    int GL_LIGHT7 -> dC
    int GL_POINT -> dD
    int GL_LINE -> dE
    int GL_FILL -> dF
    void glAlphaFunc(int,float) -> glAlphaFunc
    void glClientActiveTexture(int) -> glClientActiveTexture
    void glColor4f(float,float,float,float) -> glColor4f
    void glColorPointer(int,int,int,java.nio.Buffer) -> glColorPointer
    void glDeleteTextures(int,int[],int) -> glDeleteTextures
    void glDisableClientState(int) -> glDisableClientState
    void glEnableClientState(int) -> glEnableClientState
    void glFogf(int,float) -> glFogf
    void glFogfv(int,float[],int) -> glFogfv
    void glFogfv(int,java.nio.FloatBuffer) -> glFogfv
    void glFrustumf(float,float,float,float,float,float) -> glFrustumf
    void glGenTextures(int,int[],int) -> glGenTextures
    void glGetIntegerv(int,int[],int) -> glGetIntegerv
    void glLightModelf(int,float) -> glLightModelf
    void glLightModelfv(int,float[],int) -> glLightModelfv
    void glLightModelfv(int,java.nio.FloatBuffer) -> glLightModelfv
    void glLightf(int,int,float) -> glLightf
    void glLightfv(int,int,float[],int) -> glLightfv
    void glLightfv(int,int,java.nio.FloatBuffer) -> glLightfv
    void glLoadIdentity() -> glLoadIdentity
    void glLoadMatrixf(float[],int) -> glLoadMatrixf
    void glLoadMatrixf(java.nio.FloatBuffer) -> glLoadMatrixf
    void glLogicOp(int) -> glLogicOp
    void glMaterialf(int,int,float) -> glMaterialf
    void glMaterialfv(int,int,float[],int) -> glMaterialfv
    void glMaterialfv(int,int,java.nio.FloatBuffer) -> glMaterialfv
    void glMatrixMode(int) -> glMatrixMode
    void glMultMatrixf(float[],int) -> glMultMatrixf
    void glMultMatrixf(java.nio.FloatBuffer) -> glMultMatrixf
    void glMultiTexCoord4f(int,float,float,float,float) -> glMultiTexCoord4f
    void glNormal3f(float,float,float) -> glNormal3f
    void glNormalPointer(int,int,java.nio.Buffer) -> glNormalPointer
    void glOrthof(float,float,float,float,float,float) -> glOrthof
    void glPointSize(float) -> glPointSize
    void glPopMatrix() -> glPopMatrix
    void glPushMatrix() -> glPushMatrix
    void glRotatef(float,float,float,float) -> glRotatef
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glScalef(float,float,float) -> glScalef
    void glShadeModel(int) -> glShadeModel
    void glTexCoordPointer(int,int,int,java.nio.Buffer) -> glTexCoordPointer
    void glTexEnvf(int,int,float) -> glTexEnvf
    void glTexEnvfv(int,int,float[],int) -> glTexEnvfv
    void glTexEnvfv(int,int,java.nio.FloatBuffer) -> glTexEnvfv
    void glTranslatef(float,float,float) -> glTranslatef
    void glVertexPointer(int,int,int,java.nio.Buffer) -> glVertexPointer
    void glPolygonMode(int,int) -> glPolygonMode
com.badlogic.gdx.graphics.GL11 -> com.badlogic.gdx.graphics.e:
    int GL_OES_VERSION_1_0 -> dG
    int GL_MAX_ELEMENTS_VERTICES -> dH
    int GL_MAX_ELEMENTS_INDICES -> dI
    int GL_POLYGON_SMOOTH_HINT -> dJ
    int GL_VERSION_ES_CM_1_0 -> dK
    int GL_VERSION_ES_CL_1_0 -> dL
    int GL_VERSION_ES_CM_1_1 -> dM
    int GL_VERSION_ES_CL_1_1 -> dN
    int GL_CLIP_PLANE0 -> dO
    int GL_CLIP_PLANE1 -> dP
    int GL_CLIP_PLANE2 -> dQ
    int GL_CLIP_PLANE3 -> dR
    int GL_CLIP_PLANE4 -> dS
    int GL_CLIP_PLANE5 -> dT
    int GL_CURRENT_COLOR -> dU
    int GL_CURRENT_NORMAL -> dV
    int GL_CURRENT_TEXTURE_COORDS -> dW
    int GL_POINT_SIZE -> dX
    int GL_POINT_SIZE_MIN -> dY
    int GL_POINT_SIZE_MAX -> dZ
    int GL_POINT_FADE_THRESHOLD_SIZE -> ea
    int GL_POINT_DISTANCE_ATTENUATION -> eb
    int GL_LINE_WIDTH -> ec
    int GL_CULL_FACE_MODE -> ed
    int GL_FRONT_FACE -> ee
    int GL_SHADE_MODEL -> ef
    int GL_DEPTH_RANGE -> eg
    int GL_DEPTH_WRITEMASK -> eh
    int GL_DEPTH_CLEAR_VALUE -> ei
    int GL_DEPTH_FUNC -> ej
    int GL_STENCIL_CLEAR_VALUE -> ek
    int GL_STENCIL_FUNC -> el
    int GL_STENCIL_VALUE_MASK -> em
    int GL_STENCIL_FAIL -> en
    int GL_STENCIL_PASS_DEPTH_FAIL -> eo
    int GL_STENCIL_PASS_DEPTH_PASS -> ep
    int GL_STENCIL_REF -> eq
    int GL_STENCIL_WRITEMASK -> er
    int GL_MATRIX_MODE -> es
    int GL_VIEWPORT -> et
    int GL_MODELVIEW_STACK_DEPTH -> eu
    int GL_PROJECTION_STACK_DEPTH -> ev
    int GL_TEXTURE_STACK_DEPTH -> ew
    int GL_MODELVIEW_MATRIX -> ex
    int GL_PROJECTION_MATRIX -> ey
    int GL_TEXTURE_MATRIX -> ez
    int GL_ALPHA_TEST_FUNC -> eA
    int GL_ALPHA_TEST_REF -> eB
    int GL_BLEND_DST -> eC
    int GL_BLEND_SRC -> eD
    int GL_LOGIC_OP_MODE -> eE
    int GL_SCISSOR_BOX -> eF
    int GL_COLOR_CLEAR_VALUE -> eG
    int GL_COLOR_WRITEMASK -> eH
    int GL_MAX_CLIP_PLANES -> eI
    int GL_POLYGON_OFFSET_UNITS -> eJ
    int GL_POLYGON_OFFSET_FACTOR -> eK
    int GL_TEXTURE_BINDING_2D -> eL
    int GL_VERTEX_ARRAY_SIZE -> eM
    int GL_VERTEX_ARRAY_TYPE -> eN
    int GL_VERTEX_ARRAY_STRIDE -> eO
    int GL_NORMAL_ARRAY_TYPE -> eP
    int GL_NORMAL_ARRAY_STRIDE -> eQ
    int GL_COLOR_ARRAY_SIZE -> eR
    int GL_COLOR_ARRAY_TYPE -> eS
    int GL_COLOR_ARRAY_STRIDE -> eT
    int GL_TEXTURE_COORD_ARRAY_SIZE -> eU
    int GL_TEXTURE_COORD_ARRAY_TYPE -> eV
    int GL_TEXTURE_COORD_ARRAY_STRIDE -> eW
    int GL_VERTEX_ARRAY_POINTER -> eX
    int GL_NORMAL_ARRAY_POINTER -> eY
    int GL_COLOR_ARRAY_POINTER -> eZ
    int GL_TEXTURE_COORD_ARRAY_POINTER -> fa
    int GL_SAMPLE_BUFFERS -> fb
    int GL_SAMPLES -> fc
    int GL_SAMPLE_COVERAGE_VALUE -> fd
    int GL_SAMPLE_COVERAGE_INVERT -> fe
    int GL_GENERATE_MIPMAP_HINT -> ff
    int GL_GENERATE_MIPMAP -> fg
    int GL_ACTIVE_TEXTURE -> fh
    int GL_CLIENT_ACTIVE_TEXTURE -> fi
    int GL_ARRAY_BUFFER -> fj
    int GL_ELEMENT_ARRAY_BUFFER -> fk
    int GL_ARRAY_BUFFER_BINDING -> fl
    int GL_ELEMENT_ARRAY_BUFFER_BINDING -> fm
    int GL_VERTEX_ARRAY_BUFFER_BINDING -> fn
    int GL_NORMAL_ARRAY_BUFFER_BINDING -> fo
    int GL_COLOR_ARRAY_BUFFER_BINDING -> fp
    int GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING -> fq
    int GL_STATIC_DRAW -> fr
    int GL_DYNAMIC_DRAW -> fs
    int GL_BUFFER_SIZE -> ft
    int GL_BUFFER_USAGE -> fu
    int GL_SUBTRACT -> fv
    int GL_COMBINE -> fw
    int GL_COMBINE_RGB -> fx
    int GL_COMBINE_ALPHA -> fy
    int GL_RGB_SCALE -> fz
    int GL_ADD_SIGNED -> fA
    int GL_INTERPOLATE -> fB
    int GL_CONSTANT -> fC
    int GL_PRIMARY_COLOR -> fD
    int GL_PREVIOUS -> fE
    int GL_OPERAND0_RGB -> fF
    int GL_OPERAND1_RGB -> fG
    int GL_OPERAND2_RGB -> fH
    int GL_OPERAND0_ALPHA -> fI
    int GL_OPERAND1_ALPHA -> fJ
    int GL_OPERAND2_ALPHA -> fK
    int GL_ALPHA_SCALE -> fL
    int GL_SRC0_RGB -> fM
    int GL_SRC1_RGB -> fN
    int GL_SRC2_RGB -> fO
    int GL_SRC0_ALPHA -> fP
    int GL_SRC1_ALPHA -> fQ
    int GL_SRC2_ALPHA -> fR
    int GL_DOT3_RGB -> fS
    int GL_DOT3_RGBA -> fT
    int GL_POINT_SIZE_ARRAY_OES -> fU
    int GL_POINT_SIZE_ARRAY_TYPE_OES -> fV
    int GL_POINT_SIZE_ARRAY_STRIDE_OES -> fW
    int GL_POINT_SIZE_ARRAY_POINTER_OES -> fX
    int GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES -> fY
    int GL_POINT_SPRITE_OES -> fZ
    int GL_COORD_REPLACE_OES -> ga
    int GL_OES_point_size_array -> gb
    int GL_OES_point_sprite -> gc
    void glClipPlanef(int,float[],int) -> glClipPlanef
    void glClipPlanef(int,java.nio.FloatBuffer) -> glClipPlanef
    void glGetClipPlanef(int,float[],int) -> glGetClipPlanef
    void glGetClipPlanef(int,java.nio.FloatBuffer) -> glGetClipPlanef
    void glGetFloatv(int,float[],int) -> glGetFloatv
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetLightfv(int,int,float[],int) -> glGetLightfv
    void glGetLightfv(int,int,java.nio.FloatBuffer) -> glGetLightfv
    void glGetMaterialfv(int,int,float[],int) -> glGetMaterialfv
    void glGetMaterialfv(int,int,java.nio.FloatBuffer) -> glGetMaterialfv
    void glGetTexParameterfv(int,int,float[],int) -> glGetTexParameterfv
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glPointParameterf(int,float) -> glPointParameterf
    void glPointParameterfv(int,float[],int) -> glPointParameterfv
    void glPointParameterfv(int,java.nio.FloatBuffer) -> glPointParameterfv
    void glTexParameterfv(int,int,float[],int) -> glTexParameterfv
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glBindBuffer(int,int) -> glBindBuffer
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    void glColor4ub(byte,byte,byte,byte) -> glColor4ub
    void glDeleteBuffers(int,int[],int) -> glDeleteBuffers
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glGetBooleanv(int,boolean[],int) -> glGetBooleanv
    void glGetBooleanv(int,java.nio.IntBuffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,int[],int) -> glGetBufferParameteriv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    void glGenBuffers(int,int[],int) -> glGenBuffers
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGetPointerv(int,java.nio.Buffer[]) -> glGetPointerv
    void glGetTexEnviv(int,int,int[],int) -> glGetTexEnviv
    void glGetTexEnviv(int,int,java.nio.IntBuffer) -> glGetTexEnviv
    void glGetTexParameteriv(int,int,int[],int) -> glGetTexParameteriv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsTexture(int) -> glIsTexture
    void glTexEnvi(int,int,int) -> glTexEnvi
    void glTexEnviv(int,int,int[],int) -> glTexEnviv
    void glTexEnviv(int,int,java.nio.IntBuffer) -> glTexEnviv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameteriv(int,int,int[],int) -> glTexParameteriv
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glPointSizePointerOES(int,int,java.nio.Buffer) -> glPointSizePointerOES
    void glVertexPointer(int,int,int,int) -> glVertexPointer
    void glColorPointer(int,int,int,int) -> glColorPointer
    void glNormalPointer(int,int,int) -> glNormalPointer
    void glTexCoordPointer(int,int,int,int) -> glTexCoordPointer
    void glDrawElements(int,int,int,int) -> glDrawElements
com.badlogic.gdx.graphics.GL20 -> com.badlogic.gdx.graphics.f:
    int GL_ES_VERSION_2_0 -> a
    int GL_DEPTH_BUFFER_BIT -> b
    int GL_STENCIL_BUFFER_BIT -> c
    int GL_COLOR_BUFFER_BIT -> d
    int GL_FALSE -> e
    int GL_TRUE -> f
    int GL_POINTS -> g
    int GL_LINES -> h
    int GL_LINE_LOOP -> i
    int GL_LINE_STRIP -> j
    int GL_TRIANGLES -> k
    int GL_TRIANGLE_STRIP -> l
    int GL_TRIANGLE_FAN -> m
    int GL_ZERO -> n
    int GL_ONE -> o
    int GL_SRC_COLOR -> p
    int GL_ONE_MINUS_SRC_COLOR -> q
    int GL_SRC_ALPHA -> r
    int GL_ONE_MINUS_SRC_ALPHA -> s
    int GL_DST_ALPHA -> t
    int GL_ONE_MINUS_DST_ALPHA -> u
    int GL_DST_COLOR -> v
    int GL_ONE_MINUS_DST_COLOR -> w
    int GL_SRC_ALPHA_SATURATE -> x
    int GL_FUNC_ADD -> y
    int GL_BLEND_EQUATION -> z
    int GL_BLEND_EQUATION_RGB -> A
    int GL_BLEND_EQUATION_ALPHA -> B
    int GL_FUNC_SUBTRACT -> C
    int GL_FUNC_REVERSE_SUBTRACT -> D
    int GL_BLEND_DST_RGB -> E
    int GL_BLEND_SRC_RGB -> F
    int GL_BLEND_DST_ALPHA -> G
    int GL_BLEND_SRC_ALPHA -> H
    int GL_CONSTANT_COLOR -> I
    int GL_ONE_MINUS_CONSTANT_COLOR -> J
    int GL_CONSTANT_ALPHA -> K
    int GL_ONE_MINUS_CONSTANT_ALPHA -> L
    int GL_BLEND_COLOR -> M
    int GL_ARRAY_BUFFER -> N
    int GL_ELEMENT_ARRAY_BUFFER -> O
    int GL_ARRAY_BUFFER_BINDING -> P
    int GL_ELEMENT_ARRAY_BUFFER_BINDING -> Q
    int GL_STREAM_DRAW -> R
    int GL_STATIC_DRAW -> S
    int GL_DYNAMIC_DRAW -> T
    int GL_BUFFER_SIZE -> U
    int GL_BUFFER_USAGE -> V
    int GL_CURRENT_VERTEX_ATTRIB -> W
    int GL_FRONT -> X
    int GL_BACK -> Y
    int GL_FRONT_AND_BACK -> Z
    int GL_TEXTURE_2D -> aa
    int GL_CULL_FACE -> ab
    int GL_BLEND -> ac
    int GL_DITHER -> ad
    int GL_STENCIL_TEST -> ae
    int GL_DEPTH_TEST -> af
    int GL_SCISSOR_TEST -> ag
    int GL_POLYGON_OFFSET_FILL -> ah
    int GL_SAMPLE_ALPHA_TO_COVERAGE -> ai
    int GL_SAMPLE_COVERAGE -> aj
    int GL_NO_ERROR -> ak
    int GL_INVALID_ENUM -> al
    int GL_INVALID_VALUE -> am
    int GL_INVALID_OPERATION -> an
    int GL_OUT_OF_MEMORY -> ao
    int GL_CW -> ap
    int GL_CCW -> aq
    int GL_LINE_WIDTH -> ar
    int GL_ALIASED_POINT_SIZE_RANGE -> as
    int GL_ALIASED_LINE_WIDTH_RANGE -> at
    int GL_CULL_FACE_MODE -> au
    int GL_FRONT_FACE -> av
    int GL_DEPTH_RANGE -> aw
    int GL_DEPTH_WRITEMASK -> ax
    int GL_DEPTH_CLEAR_VALUE -> ay
    int GL_DEPTH_FUNC -> az
    int GL_STENCIL_CLEAR_VALUE -> aA
    int GL_STENCIL_FUNC -> aB
    int GL_STENCIL_FAIL -> aC
    int GL_STENCIL_PASS_DEPTH_FAIL -> aD
    int GL_STENCIL_PASS_DEPTH_PASS -> aE
    int GL_STENCIL_REF -> aF
    int GL_STENCIL_VALUE_MASK -> aG
    int GL_STENCIL_WRITEMASK -> aH
    int GL_STENCIL_BACK_FUNC -> aI
    int GL_STENCIL_BACK_FAIL -> aJ
    int GL_STENCIL_BACK_PASS_DEPTH_FAIL -> aK
    int GL_STENCIL_BACK_PASS_DEPTH_PASS -> aL
    int GL_STENCIL_BACK_REF -> aM
    int GL_STENCIL_BACK_VALUE_MASK -> aN
    int GL_STENCIL_BACK_WRITEMASK -> aO
    int GL_VIEWPORT -> aP
    int GL_SCISSOR_BOX -> aQ
    int GL_COLOR_CLEAR_VALUE -> aR
    int GL_COLOR_WRITEMASK -> aS
    int GL_UNPACK_ALIGNMENT -> aT
    int GL_PACK_ALIGNMENT -> aU
    int GL_MAX_TEXTURE_SIZE -> aV
    int GL_MAX_TEXTURE_UNITS -> aW
    int GL_MAX_VIEWPORT_DIMS -> aX
    int GL_SUBPIXEL_BITS -> aY
    int GL_RED_BITS -> aZ
    int GL_GREEN_BITS -> ba
    int GL_BLUE_BITS -> bb
    int GL_ALPHA_BITS -> bc
    int GL_DEPTH_BITS -> bd
    int GL_STENCIL_BITS -> be
    int GL_POLYGON_OFFSET_UNITS -> bf
    int GL_POLYGON_OFFSET_FACTOR -> bg
    int GL_TEXTURE_BINDING_2D -> bh
    int GL_SAMPLE_BUFFERS -> bi
    int GL_SAMPLES -> bj
    int GL_SAMPLE_COVERAGE_VALUE -> bk
    int GL_SAMPLE_COVERAGE_INVERT -> bl
    int GL_NUM_COMPRESSED_TEXTURE_FORMATS -> bm
    int GL_COMPRESSED_TEXTURE_FORMATS -> bn
    int GL_DONT_CARE -> bo
    int GL_FASTEST -> bp
    int GL_NICEST -> bq
    int GL_GENERATE_MIPMAP_HINT -> br
    int GL_BYTE -> bs
    int GL_UNSIGNED_BYTE -> bt
    int GL_SHORT -> bu
    int GL_UNSIGNED_SHORT -> bv
    int GL_INT -> bw
    int GL_UNSIGNED_INT -> bx
    int GL_FLOAT -> by
    int GL_FIXED -> bz
    int GL_DEPTH_COMPONENT -> bA
    int GL_ALPHA -> bB
    int GL_RGB -> bC
    int GL_RGBA -> bD
    int GL_LUMINANCE -> bE
    int GL_LUMINANCE_ALPHA -> bF
    int GL_UNSIGNED_SHORT_4_4_4_4 -> bG
    int GL_UNSIGNED_SHORT_5_5_5_1 -> bH
    int GL_UNSIGNED_SHORT_5_6_5 -> bI
    int GL_FRAGMENT_SHADER -> bJ
    int GL_VERTEX_SHADER -> bK
    int GL_MAX_VERTEX_ATTRIBS -> bL
    int GL_MAX_VERTEX_UNIFORM_VECTORS -> bM
    int GL_MAX_VARYING_VECTORS -> bN
    int GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS -> bO
    int GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS -> bP
    int GL_MAX_TEXTURE_IMAGE_UNITS -> bQ
    int GL_MAX_FRAGMENT_UNIFORM_VECTORS -> bR
    int GL_SHADER_TYPE -> bS
    int GL_DELETE_STATUS -> bT
    int GL_LINK_STATUS -> bU
    int GL_VALIDATE_STATUS -> bV
    int GL_ATTACHED_SHADERS -> bW
    int GL_ACTIVE_UNIFORMS -> bX
    int GL_ACTIVE_UNIFORM_MAX_LENGTH -> bY
    int GL_ACTIVE_ATTRIBUTES -> bZ
    int GL_ACTIVE_ATTRIBUTE_MAX_LENGTH -> ca
    int GL_SHADING_LANGUAGE_VERSION -> cb
    int GL_CURRENT_PROGRAM -> cc
    int GL_NEVER -> cd
    int GL_LESS -> ce
    int GL_EQUAL -> cf
    int GL_LEQUAL -> cg
    int GL_GREATER -> ch
    int GL_NOTEQUAL -> ci
    int GL_GEQUAL -> cj
    int GL_ALWAYS -> ck
    int GL_KEEP -> cl
    int GL_REPLACE -> cm
    int GL_INCR -> cn
    int GL_DECR -> co
    int GL_INVERT -> cp
    int GL_INCR_WRAP -> cq
    int GL_DECR_WRAP -> cr
    int GL_VENDOR -> cs
    int GL_RENDERER -> ct
    int GL_VERSION -> cu
    int GL_EXTENSIONS -> cv
    int GL_NEAREST -> cw
    int GL_LINEAR -> cx
    int GL_NEAREST_MIPMAP_NEAREST -> cy
    int GL_LINEAR_MIPMAP_NEAREST -> cz
    int GL_NEAREST_MIPMAP_LINEAR -> cA
    int GL_LINEAR_MIPMAP_LINEAR -> cB
    int GL_TEXTURE_MAG_FILTER -> cC
    int GL_TEXTURE_MIN_FILTER -> cD
    int GL_TEXTURE_WRAP_S -> cE
    int GL_TEXTURE_WRAP_T -> cF
    int GL_TEXTURE -> cG
    int GL_TEXTURE_CUBE_MAP -> cH
    int GL_TEXTURE_BINDING_CUBE_MAP -> cI
    int GL_TEXTURE_CUBE_MAP_POSITIVE_X -> cJ
    int GL_TEXTURE_CUBE_MAP_NEGATIVE_X -> cK
    int GL_TEXTURE_CUBE_MAP_POSITIVE_Y -> cL
    int GL_TEXTURE_CUBE_MAP_NEGATIVE_Y -> cM
    int GL_TEXTURE_CUBE_MAP_POSITIVE_Z -> cN
    int GL_TEXTURE_CUBE_MAP_NEGATIVE_Z -> cO
    int GL_MAX_CUBE_MAP_TEXTURE_SIZE -> cP
    int GL_TEXTURE0 -> cQ
    int GL_TEXTURE1 -> cR
    int GL_TEXTURE2 -> cS
    int GL_TEXTURE3 -> cT
    int GL_TEXTURE4 -> cU
    int GL_TEXTURE5 -> cV
    int GL_TEXTURE6 -> cW
    int GL_TEXTURE7 -> cX
    int GL_TEXTURE8 -> cY
    int GL_TEXTURE9 -> cZ
    int GL_TEXTURE10 -> da
    int GL_TEXTURE11 -> db
    int GL_TEXTURE12 -> dc
    int GL_TEXTURE13 -> dd
    int GL_TEXTURE14 -> de
    int GL_TEXTURE15 -> df
    int GL_TEXTURE16 -> dg
    int GL_TEXTURE17 -> dh
    int GL_TEXTURE18 -> di
    int GL_TEXTURE19 -> dj
    int GL_TEXTURE20 -> dk
    int GL_TEXTURE21 -> dl
    int GL_TEXTURE22 -> dm
    int GL_TEXTURE23 -> dn
    int GL_TEXTURE24 -> do
    int GL_TEXTURE25 -> dp
    int GL_TEXTURE26 -> dq
    int GL_TEXTURE27 -> dr
    int GL_TEXTURE28 -> ds
    int GL_TEXTURE29 -> dt
    int GL_TEXTURE30 -> du
    int GL_TEXTURE31 -> dv
    int GL_ACTIVE_TEXTURE -> dw
    int GL_REPEAT -> dx
    int GL_CLAMP_TO_EDGE -> dy
    int GL_MIRRORED_REPEAT -> dz
    int GL_FLOAT_VEC2 -> dA
    int GL_FLOAT_VEC3 -> dB
    int GL_FLOAT_VEC4 -> dC
    int GL_INT_VEC2 -> dD
    int GL_INT_VEC3 -> dE
    int GL_INT_VEC4 -> dF
    int GL_BOOL -> dG
    int GL_BOOL_VEC2 -> dH
    int GL_BOOL_VEC3 -> dI
    int GL_BOOL_VEC4 -> dJ
    int GL_FLOAT_MAT2 -> dK
    int GL_FLOAT_MAT3 -> dL
    int GL_FLOAT_MAT4 -> dM
    int GL_SAMPLER_2D -> dN
    int GL_SAMPLER_CUBE -> dO
    int GL_VERTEX_ATTRIB_ARRAY_ENABLED -> dP
    int GL_VERTEX_ATTRIB_ARRAY_SIZE -> dQ
    int GL_VERTEX_ATTRIB_ARRAY_STRIDE -> dR
    int GL_VERTEX_ATTRIB_ARRAY_TYPE -> dS
    int GL_VERTEX_ATTRIB_ARRAY_NORMALIZED -> dT
    int GL_VERTEX_ATTRIB_ARRAY_POINTER -> dU
    int GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING -> dV
    int GL_IMPLEMENTATION_COLOR_READ_TYPE -> dW
    int GL_IMPLEMENTATION_COLOR_READ_FORMAT -> dX
    int GL_COMPILE_STATUS -> dY
    int GL_INFO_LOG_LENGTH -> dZ
    int GL_SHADER_SOURCE_LENGTH -> ea
    int GL_SHADER_COMPILER -> eb
    int GL_SHADER_BINARY_FORMATS -> ec
    int GL_NUM_SHADER_BINARY_FORMATS -> ed
    int GL_LOW_FLOAT -> ee
    int GL_MEDIUM_FLOAT -> ef
    int GL_HIGH_FLOAT -> eg
    int GL_LOW_INT -> eh
    int GL_MEDIUM_INT -> ei
    int GL_HIGH_INT -> ej
    int GL_FRAMEBUFFER -> ek
    int GL_RENDERBUFFER -> el
    int GL_RGBA4 -> em
    int GL_RGB5_A1 -> en
    int GL_RGB565 -> eo
    int GL_DEPTH_COMPONENT16 -> ep
    int GL_STENCIL_INDEX -> eq
    int GL_STENCIL_INDEX8 -> er
    int GL_RENDERBUFFER_WIDTH -> es
    int GL_RENDERBUFFER_HEIGHT -> et
    int GL_RENDERBUFFER_INTERNAL_FORMAT -> eu
    int GL_RENDERBUFFER_RED_SIZE -> ev
    int GL_RENDERBUFFER_GREEN_SIZE -> ew
    int GL_RENDERBUFFER_BLUE_SIZE -> ex
    int GL_RENDERBUFFER_ALPHA_SIZE -> ey
    int GL_RENDERBUFFER_DEPTH_SIZE -> ez
    int GL_RENDERBUFFER_STENCIL_SIZE -> eA
    int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE -> eB
    int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME -> eC
    int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL -> eD
    int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE -> eE
    int GL_COLOR_ATTACHMENT0 -> eF
    int GL_DEPTH_ATTACHMENT -> eG
    int GL_STENCIL_ATTACHMENT -> eH
    int GL_NONE -> eI
    int GL_FRAMEBUFFER_COMPLETE -> eJ
    int GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT -> eK
    int GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT -> eL
    int GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS -> eM
    int GL_FRAMEBUFFER_UNSUPPORTED -> eN
    int GL_FRAMEBUFFER_BINDING -> eO
    int GL_RENDERBUFFER_BINDING -> eP
    int GL_MAX_RENDERBUFFER_SIZE -> eQ
    int GL_INVALID_FRAMEBUFFER_OPERATION -> eR
    int GL_VERTEX_PROGRAM_POINT_SIZE -> eS
    int GL_COVERAGE_BUFFER_BIT_NV -> eT
    void glAttachShader(int,int) -> glAttachShader
    void glBindAttribLocation(int,int,java.lang.String) -> glBindAttribLocation
    void glBindBuffer(int,int) -> glBindBuffer
    void glBindFramebuffer(int,int) -> glBindFramebuffer
    void glBindRenderbuffer(int,int) -> glBindRenderbuffer
    void glBlendColor(float,float,float,float) -> glBlendColor
    void glBlendEquation(int) -> glBlendEquation
    void glBlendEquationSeparate(int,int) -> glBlendEquationSeparate
    void glBlendFuncSeparate(int,int,int,int) -> glBlendFuncSeparate
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    int glCheckFramebufferStatus(int) -> glCheckFramebufferStatus
    void glCompileShader(int) -> glCompileShader
    int glCreateProgram() -> glCreateProgram
    int glCreateShader(int) -> glCreateShader
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glDeleteFramebuffers(int,java.nio.IntBuffer) -> glDeleteFramebuffers
    void glDeleteProgram(int) -> glDeleteProgram
    void glDeleteRenderbuffers(int,java.nio.IntBuffer) -> glDeleteRenderbuffers
    void glDeleteShader(int) -> glDeleteShader
    void glDetachShader(int,int) -> glDetachShader
    void glDisableVertexAttribArray(int) -> glDisableVertexAttribArray
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glEnableVertexAttribArray(int) -> glEnableVertexAttribArray
    void glFramebufferRenderbuffer(int,int,int,int) -> glFramebufferRenderbuffer
    void glFramebufferTexture2D(int,int,int,int,int) -> glFramebufferTexture2D
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGenerateMipmap(int) -> glGenerateMipmap
    void glGenFramebuffers(int,java.nio.IntBuffer) -> glGenFramebuffers
    void glGenRenderbuffers(int,java.nio.IntBuffer) -> glGenRenderbuffers
    java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveAttrib
    java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveUniform
    void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer) -> glGetAttachedShaders
    int glGetAttribLocation(int,java.lang.String) -> glGetAttribLocation
    void glGetBooleanv(int,java.nio.Buffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer) -> glGetFramebufferAttachmentParameteriv
    void glGetProgramiv(int,int,java.nio.IntBuffer) -> glGetProgramiv
    java.lang.String glGetProgramInfoLog(int) -> glGetProgramInfoLog
    void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer) -> glGetRenderbufferParameteriv
    void glGetShaderiv(int,int,java.nio.IntBuffer) -> glGetShaderiv
    java.lang.String glGetShaderInfoLog(int) -> glGetShaderInfoLog
    void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer) -> glGetShaderPrecisionFormat
    void glGetShaderSource(int,int,java.nio.Buffer,java.lang.String) -> glGetShaderSource
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetUniformfv(int,int,java.nio.FloatBuffer) -> glGetUniformfv
    void glGetUniformiv(int,int,java.nio.IntBuffer) -> glGetUniformiv
    int glGetUniformLocation(int,java.lang.String) -> glGetUniformLocation
    void glGetVertexAttribfv(int,int,java.nio.FloatBuffer) -> glGetVertexAttribfv
    void glGetVertexAttribiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribiv
    void glGetVertexAttribPointerv(int,int,java.nio.Buffer) -> glGetVertexAttribPointerv
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsFramebuffer(int) -> glIsFramebuffer
    boolean glIsProgram(int) -> glIsProgram
    boolean glIsRenderbuffer(int) -> glIsRenderbuffer
    boolean glIsShader(int) -> glIsShader
    boolean glIsTexture(int) -> glIsTexture
    void glLinkProgram(int) -> glLinkProgram
    void glReleaseShaderCompiler() -> glReleaseShaderCompiler
    void glRenderbufferStorage(int,int,int,int) -> glRenderbufferStorage
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int) -> glShaderBinary
    void glShaderSource(int,java.lang.String) -> glShaderSource
    void glStencilFuncSeparate(int,int,int,int) -> glStencilFuncSeparate
    void glStencilMaskSeparate(int,int) -> glStencilMaskSeparate
    void glStencilOpSeparate(int,int,int,int) -> glStencilOpSeparate
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glUniform1f(int,float) -> glUniform1f
    void glUniform1fv(int,int,java.nio.FloatBuffer) -> glUniform1fv
    void glUniform1i(int,int) -> glUniform1i
    void glUniform1iv(int,int,java.nio.IntBuffer) -> glUniform1iv
    void glUniform2f(int,float,float) -> glUniform2f
    void glUniform2fv(int,int,java.nio.FloatBuffer) -> glUniform2fv
    void glUniform2i(int,int,int) -> glUniform2i
    void glUniform2iv(int,int,java.nio.IntBuffer) -> glUniform2iv
    void glUniform3f(int,float,float,float) -> glUniform3f
    void glUniform3fv(int,int,java.nio.FloatBuffer) -> glUniform3fv
    void glUniform3i(int,int,int,int) -> glUniform3i
    void glUniform3iv(int,int,java.nio.IntBuffer) -> glUniform3iv
    void glUniform4f(int,float,float,float,float) -> glUniform4f
    void glUniform4fv(int,int,java.nio.FloatBuffer) -> glUniform4fv
    void glUniform4i(int,int,int,int,int) -> glUniform4i
    void glUniform4iv(int,int,java.nio.IntBuffer) -> glUniform4iv
    void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2fv
    void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3fv
    void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4fv
    void glUseProgram(int) -> glUseProgram
    void glValidateProgram(int) -> glValidateProgram
    void glVertexAttrib1f(int,float) -> glVertexAttrib1f
    void glVertexAttrib1fv(int,java.nio.FloatBuffer) -> glVertexAttrib1fv
    void glVertexAttrib2f(int,float,float) -> glVertexAttrib2f
    void glVertexAttrib2fv(int,java.nio.FloatBuffer) -> glVertexAttrib2fv
    void glVertexAttrib3f(int,float,float,float) -> glVertexAttrib3f
    void glVertexAttrib3fv(int,java.nio.FloatBuffer) -> glVertexAttrib3fv
    void glVertexAttrib4f(int,float,float,float,float) -> glVertexAttrib4f
    void glVertexAttrib4fv(int,java.nio.FloatBuffer) -> glVertexAttrib4fv
    void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer) -> glVertexAttribPointer
    void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
com.badlogic.gdx.graphics.GLCommon -> com.badlogic.gdx.graphics.g:
    int GL_GENERATE_MIPMAP -> gd
    int GL_TEXTURE_MAX_ANISOTROPY_EXT -> ge
    int GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT -> gf
    void glActiveTexture(int) -> glActiveTexture
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearDepthf(float) -> glClearDepthf
    void glClearStencil(int) -> glClearStencil
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    void glCullFace(int) -> glCullFace
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDisable(int) -> glDisable
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFrontFace(int) -> glFrontFace
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    int glGetError() -> glGetError
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glHint(int,int) -> glHint
    void glLineWidth(float) -> glLineWidth
    void glPixelStorei(int,int) -> glPixelStorei
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glScissor(int,int,int,int) -> glScissor
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilMask(int) -> glStencilMask
    void glStencilOp(int,int,int) -> glStencilOp
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glViewport(int,int,int,int) -> glViewport
com.badlogic.gdx.graphics.Mesh -> com.badlogic.gdx.graphics.h:
    java.util.Map meshes -> a
    boolean forceVBO -> b
    com.badlogic.gdx.graphics.glutils.VertexData vertices -> c
    com.badlogic.gdx.graphics.glutils.IndexData indices -> d
    boolean autoBind -> e
    boolean isVertexArray -> f
    163:187:com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh,com.badlogic.gdx.math.Matrix4[]) -> a
    198:198:com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh[]) -> a
    211:252:com.badlogic.gdx.graphics.Mesh create$d50af5c(boolean,com.badlogic.gdx.graphics.Mesh[]) -> b
    260:261:void setVertices(float[]) -> a
    270:271:void setVertices$1cc109a0(float[],int) -> a
    276:277:void getVertices(float[]) -> b
    283:284:void getVertices(int,float[]) -> a
    291:292:void getVertices(int,int,float[]) -> a
    301:315:void getVertices(int,int,float[],int) -> a
    321:322:void setIndices(short[]) -> a
    330:331:void setIndices(short[],int,int) -> a
    336:337:void getIndices(short[]) -> b
    343:350:void getIndices(short[],int) -> a
    354:354:int getNumIndices() -> a
    359:359:int getNumVertices() -> b
    364:364:int getMaxVertices() -> c
    369:369:int getMaxIndices() -> d
    374:374:int getVertexSize() -> e
    384:385:void setAutoBind$1385ff() -> f
    390:393:void bind() -> g
    398:401:void unbind() -> h
    408:412:void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    419:425:void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> b
    438:439:void render(int) -> a
    455:479:void render(int,int,int) -> a
    501:502:void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,int) -> a
    528:554:void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,int,int,int) -> a
    558:561:void dispose() -> dispose
    568:573:com.badlogic.gdx.graphics.VertexAttribute getVertexAttribute(int) -> b
    578:578:com.badlogic.gdx.graphics.VertexAttributes getVertexAttributes() -> i
    583:583:java.nio.FloatBuffer getVerticesBuffer() -> j
    591:593:com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox() -> m
    601:631:void calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> a
    635:635:java.nio.ShortBuffer getIndicesBuffer() -> k
    639:643:void addManagedMesh(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.Mesh) -> a
    648:656:void invalidateAllMeshes(com.badlogic.gdx.Application) -> a
    660:661:void clearAllMeshes(com.badlogic.gdx.Application) -> b
    664:672:java.lang.String getManagedStatus() -> l
    682:717:void scale(float,float,float) -> a
    725:726:void transform(com.badlogic.gdx.math.Matrix4) -> a
    730:742:void transform$a96d63c(com.badlogic.gdx.math.Matrix4,int) -> a
    755:789:void transform(com.badlogic.gdx.math.Matrix4,float[],int,int,int,int,int) -> a
    801:884:com.badlogic.gdx.graphics.Mesh copy$6ce8aecd(boolean) -> a
    892:892:com.badlogic.gdx.graphics.Mesh copy(boolean) -> b
com.badlogic.gdx.graphics.Mesh$VertexDataType -> com.badlogic.gdx.graphics.i:
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexArray -> a
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexBufferObject -> b
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexBufferObjectSubData -> c
    com.badlogic.gdx.graphics.Mesh$VertexDataType[] $VALUES -> d
    71:71:com.badlogic.gdx.graphics.Mesh$VertexDataType[] values() -> values
    71:71:com.badlogic.gdx.graphics.Mesh$VertexDataType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.OrthographicCamera -> com.badlogic.gdx.graphics.j:
    float zoom -> o
    com.badlogic.gdx.math.Vector3 tmp -> p
    62:82:void findDirectionForIsoView$483d2f6e(float) -> a
    85:96:float calculateAngle(float) -> b
    100:104:com.badlogic.gdx.math.Vector3 calculateDirection(float) -> c
    111:112:void update() -> a
    116:127:void update$1385ff() -> b
    133:134:void setToOrtho(boolean) -> a
    142:150:void setToOrtho(boolean,float,float) -> a
    155:156:void rotate(float) -> d
    162:163:void translate(float,float) -> a
    168:169:void translate(com.badlogic.gdx.math.Vector2) -> a
com.badlogic.gdx.graphics.PerspectiveCamera -> com.badlogic.gdx.graphics.k:
    float fieldOfView -> o
    com.badlogic.gdx.math.Vector3 tmp -> p
    49:50:void update() -> a
    54:65:void update$1385ff() -> b
com.badlogic.gdx.graphics.Pixmap -> com.badlogic.gdx.graphics.l:
    com.badlogic.gdx.graphics.Pixmap$Blending blending -> c
    com.badlogic.gdx.graphics.g2d.Gdx2DPixmap pixmap -> a
    int color -> b
    boolean disposed -> d
    98:100:void setBlending(com.badlogic.gdx.graphics.Pixmap$Blending) -> a
    106:107:void setFilter(com.badlogic.gdx.graphics.Pixmap$Filter) -> a
    153:154:void setColor(int) -> a
    163:164:void setColor(float,float,float,float) -> a
    169:170:void setColor(com.badlogic.gdx.graphics.Color) -> a
    174:175:void fill() -> a
    191:192:void drawLine(int,int,int,int) -> a
    202:203:void drawRectangle(int,int,int,int) -> b
    211:212:void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int) -> a
    224:225:void drawPixmap$23690701(com.badlogic.gdx.graphics.Pixmap,int,int,int,int) -> a
    242:243:void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int,int,int,int,int,int,int) -> a
    253:254:void fillRectangle(int,int,int,int) -> c
    262:263:void drawCircle(int,int,int) -> a
    271:272:void fillCircle(int,int,int) -> b
    280:280:int getPixel(int,int) -> a
    285:285:int getWidth() -> b
    290:290:int getHeight() -> c
    295:298:void dispose() -> dispose
    305:306:void drawPixel(int,int) -> b
    314:315:void drawPixel(int,int,int) -> c
    321:321:int getGLFormat() -> d
    328:328:int getGLInternalFormat() -> e
    335:335:int getGLType() -> f
    344:345:java.nio.ByteBuffer getPixels() -> g
    350:350:com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> h
    355:355:com.badlogic.gdx.graphics.Pixmap$Blending getBlending() -> i
com.badlogic.gdx.graphics.Pixmap$Blending -> com.badlogic.gdx.graphics.m:
    com.badlogic.gdx.graphics.Pixmap$Blending None -> a
    com.badlogic.gdx.graphics.Pixmap$Blending SourceOver -> b
    com.badlogic.gdx.graphics.Pixmap$Blending[] $VALUES -> c
    76:76:com.badlogic.gdx.graphics.Pixmap$Blending[] values() -> values
    76:76:com.badlogic.gdx.graphics.Pixmap$Blending valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.Pixmap$Filter -> com.badlogic.gdx.graphics.n:
    com.badlogic.gdx.graphics.Pixmap$Filter NearestNeighbour -> a
    com.badlogic.gdx.graphics.Pixmap$Filter BiLinear -> b
    com.badlogic.gdx.graphics.Pixmap$Filter[] $VALUES -> c
    83:83:com.badlogic.gdx.graphics.Pixmap$Filter[] values() -> values
    83:83:com.badlogic.gdx.graphics.Pixmap$Filter valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.Pixmap$Format -> com.badlogic.gdx.graphics.o:
    com.badlogic.gdx.graphics.Pixmap$Format Alpha -> a
    com.badlogic.gdx.graphics.Pixmap$Format Intensity -> b
    com.badlogic.gdx.graphics.Pixmap$Format LuminanceAlpha -> c
    com.badlogic.gdx.graphics.Pixmap$Format RGB565 -> d
    com.badlogic.gdx.graphics.Pixmap$Format RGBA4444 -> e
    com.badlogic.gdx.graphics.Pixmap$Format RGB888 -> f
    com.badlogic.gdx.graphics.Pixmap$Format RGBA8888 -> g
    com.badlogic.gdx.graphics.Pixmap$Format[] $VALUES -> h
    49:49:com.badlogic.gdx.graphics.Pixmap$Format[] values() -> values
    49:49:com.badlogic.gdx.graphics.Pixmap$Format valueOf(java.lang.String) -> valueOf
    53:60:int toGdx2DPixmapFormat(com.badlogic.gdx.graphics.Pixmap$Format) -> a
    64:70:com.badlogic.gdx.graphics.Pixmap$Format fromGdx2DPixmapFormat(int) -> a
com.badlogic.gdx.graphics.PixmapIO -> com.badlogic.gdx.graphics.p:
    41:42:void writeCIM(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap) -> a
    48:48:com.badlogic.gdx.graphics.Pixmap readCIM(com.badlogic.gdx.files.FileHandle) -> a
    55:57:void writePNG(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap) -> b
com.badlogic.gdx.graphics.PixmapIO$CIM -> com.badlogic.gdx.graphics.q:
    int BUFFER_SIZE -> a
    byte[] writeBuffer -> b
    byte[] readBuffer -> c
    68:105:void write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap) -> a
    110:141:com.badlogic.gdx.graphics.Pixmap read(com.badlogic.gdx.files.FileHandle) -> a
com.badlogic.gdx.graphics.PixmapIO$PNG -> com.badlogic.gdx.graphics.r:
    int[] crcTable -> a
    int ZLIB_BLOCK_SIZE -> b
    157:167:byte[] write(com.badlogic.gdx.graphics.Pixmap) -> a
    171:180:byte[] createHeaderChunk(int,int) -> a
    184:206:byte[] createDataChunk(com.badlogic.gdx.graphics.Pixmap) -> b
    210:210:byte[] createTrailerChunk() -> a
    214:233:byte[] toChunk(java.lang.String,byte[]) -> a
    237:244:void createCRCTable() -> b
    247:250:int updateCRC(int,byte[]) -> a
    259:278:byte[] toZLIB(byte[]) -> a
    283:290:void writeUncompressedDeflateBlock(java.io.DataOutputStream,boolean,byte[],int,char) -> a
    293:300:int calcADLER32(byte[]) -> b
com.badlogic.gdx.graphics.Texture -> com.badlogic.gdx.graphics.s:
    boolean enforcePotImages -> h
    com.badlogic.gdx.assets.AssetManager assetManager -> i
    java.util.Map managedTextures -> a
    java.nio.IntBuffer buffer -> j
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> b
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> c
    com.badlogic.gdx.graphics.Texture$TextureWrap uWrap -> d
    com.badlogic.gdx.graphics.Texture$TextureWrap vWrap -> e
    int glHandle -> f
    com.badlogic.gdx.graphics.TextureData data -> g
    158:161:void create(com.badlogic.gdx.graphics.TextureData) -> b
    164:167:int createGLHandle() -> k
    171:199:void load(com.badlogic.gdx.graphics.TextureData) -> a
    202:230:void uploadImageData(com.badlogic.gdx.graphics.Pixmap) -> a
    235:238:void reload() -> l
    243:244:void bind() -> a
    250:252:void bind(int) -> a
    261:266:void draw(com.badlogic.gdx.graphics.Pixmap,int,int) -> a
    270:270:int getWidth() -> b
    275:275:int getHeight() -> c
    279:279:com.badlogic.gdx.graphics.Texture$TextureFilter getMinFilter() -> d
    283:283:com.badlogic.gdx.graphics.Texture$TextureFilter getMagFilter() -> e
    287:287:com.badlogic.gdx.graphics.Texture$TextureWrap getUWrap() -> f
    291:291:com.badlogic.gdx.graphics.Texture$TextureWrap getVWrap() -> g
    295:295:com.badlogic.gdx.graphics.TextureData getTextureData() -> h
    300:300:boolean isManaged() -> m
    304:304:int getTextureObjectHandle() -> i
    312:317:void setWrap(com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap) -> a
    320:325:void setFilter(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter) -> a
    333:340:void dispose() -> dispose
    344:345:void setEnforcePotImages(boolean) -> a
    348:352:void addManagedTexture(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.Texture) -> a
    356:357:void clearAllTextures(com.badlogic.gdx.Application) -> a
    361:417:void invalidateAllTextures(com.badlogic.gdx.Application) -> b
    424:425:void setAssetManager(com.badlogic.gdx.assets.AssetManager) -> a
    428:435:java.lang.String getManagedStatus() -> j
    440:440:int getNumManagedTextures() -> n
com.badlogic.gdx.graphics.Texture$1 -> com.badlogic.gdx.graphics.t:
    int val$refCount -> a
    404:405:void finishedLoading$190c2c84(com.badlogic.gdx.assets.AssetManager,java.lang.String) -> a
com.badlogic.gdx.graphics.Texture$TextureFilter -> com.badlogic.gdx.graphics.u:
    com.badlogic.gdx.graphics.Texture$TextureFilter Nearest -> a
    com.badlogic.gdx.graphics.Texture$TextureFilter Linear -> b
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMap -> c
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapNearestNearest -> d
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapLinearNearest -> e
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapNearestLinear -> f
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapLinearLinear -> g
    int glEnum -> h
    com.badlogic.gdx.graphics.Texture$TextureFilter[] $VALUES -> i
    74:74:com.badlogic.gdx.graphics.Texture$TextureFilter[] values() -> values
    74:74:com.badlogic.gdx.graphics.Texture$TextureFilter valueOf(java.lang.String) -> valueOf
    86:86:boolean isMipMap() -> a
    90:90:int getGLEnum() -> b
com.badlogic.gdx.graphics.Texture$TextureWrap -> com.badlogic.gdx.graphics.v:
    com.badlogic.gdx.graphics.Texture$TextureWrap MirroredRepeat -> a
    com.badlogic.gdx.graphics.Texture$TextureWrap ClampToEdge -> b
    com.badlogic.gdx.graphics.Texture$TextureWrap Repeat -> c
    int glEnum -> d
    com.badlogic.gdx.graphics.Texture$TextureWrap[] $VALUES -> e
    94:94:com.badlogic.gdx.graphics.Texture$TextureWrap[] values() -> values
    94:94:com.badlogic.gdx.graphics.Texture$TextureWrap valueOf(java.lang.String) -> valueOf
    104:104:int getGLEnum() -> a
com.badlogic.gdx.graphics.TextureData -> com.badlogic.gdx.graphics.w:
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> a
    boolean isPrepared() -> b
    void prepare() -> c
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> d
    boolean disposePixmap() -> e
    void consumeCompressedData() -> f
    int getWidth() -> g
    int getHeight() -> h
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> i
    boolean useMipMaps() -> j
    boolean isManaged() -> k
com.badlogic.gdx.graphics.TextureData$TextureDataType -> com.badlogic.gdx.graphics.x:
    com.badlogic.gdx.graphics.TextureData$TextureDataType Pixmap -> a
    com.badlogic.gdx.graphics.TextureData$TextureDataType Compressed -> b
    com.badlogic.gdx.graphics.TextureData$TextureDataType Float -> c
    com.badlogic.gdx.graphics.TextureData$TextureDataType[] $VALUES -> d
    41:41:com.badlogic.gdx.graphics.TextureData$TextureDataType[] values() -> values
    41:41:com.badlogic.gdx.graphics.TextureData$TextureDataType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.TextureDict -> com.badlogic.gdx.graphics.y:
    com.badlogic.gdx.utils.ObjectMap sDictionary -> a
    41:41:com.badlogic.gdx.graphics.TextureRef loadTexture(java.lang.String) -> b
    53:65:com.badlogic.gdx.graphics.TextureRef loadTexture(java.lang.String,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap) -> a
    72:73:void removeTexture(java.lang.String) -> a
    77:81:void unloadAll() -> a
com.badlogic.gdx.graphics.TextureRef -> com.badlogic.gdx.graphics.z:
    java.lang.String Name -> a
    int mRefCount -> b
    com.badlogic.gdx.graphics.Texture mTexture -> c
    40:41:void addRef() -> a
    46:52:int unload() -> c
    56:57:void dispose() -> b
    61:62:void bind() -> d
    67:67:com.badlogic.gdx.graphics.Texture get() -> e
com.badlogic.gdx.graphics.VertexAttribute -> com.badlogic.gdx.graphics.aa:
    int usage -> a
    int numComponents -> b
    int offset -> c
    java.lang.String alias -> d
    51:51:com.badlogic.gdx.graphics.VertexAttribute Position() -> a
    55:55:com.badlogic.gdx.graphics.VertexAttribute TexCoords(int) -> a
    59:59:com.badlogic.gdx.graphics.VertexAttribute Normal() -> b
    63:63:com.badlogic.gdx.graphics.VertexAttribute Color() -> c
    67:67:com.badlogic.gdx.graphics.VertexAttribute ColorUnpacked() -> d
    73:77:boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.graphics.VertexAttributes -> com.badlogic.gdx.graphics.ab:
    com.badlogic.gdx.graphics.VertexAttribute[] attributes -> b
    int vertexSize -> a
    59:61:int getOffset(int) -> b
    67:70:com.badlogic.gdx.graphics.VertexAttribute findByUsage(int) -> c
    74:84:int calculateOffsets() -> b
    88:112:void checkValidity() -> c
    116:116:int size() -> a
    122:122:com.badlogic.gdx.graphics.VertexAttribute get(int) -> a
    126:141:java.lang.String toString() -> toString
    146:152:boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.graphics.VertexAttributes$Usage -> com.badlogic.gdx.graphics.ac:
    int Position -> a
    int Color -> b
    int ColorPacked -> c
    int Normal -> d
    int TextureCoordinates -> e
    int Generic -> f
com.badlogic.gdx.graphics.g2d.Animation -> com.badlogic.gdx.graphics.g2d.a:
    int NORMAL -> a
    int REVERSED -> b
    int LOOP -> c
    int LOOP_REVERSED -> d
    int LOOP_PINGPONG -> e
    int LOOP_RANDOM -> f
    com.badlogic.gdx.graphics.g2d.TextureRegion[] keyFrames -> g
    float frameDuration -> h
    float animationDuration -> i
    int playMode -> j
    95:107:com.badlogic.gdx.graphics.g2d.TextureRegion getKeyFrame(float,boolean) -> a
    117:118:com.badlogic.gdx.graphics.g2d.TextureRegion getKeyFrame(float) -> a
    125:159:int getKeyFrameIndex(float) -> b
    167:168:void setPlayMode(int) -> a
    174:175:boolean isAnimationFinished(float) -> c
com.badlogic.gdx.graphics.g2d.BitmapFont -> com.badlogic.gdx.graphics.g2d.b:
    int LOG2_PAGE_SIZE -> e
    int PAGE_SIZE -> f
    int PAGES -> g
    char[] xChars -> a
    char[] capChars -> b
    com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData data -> c
    com.badlogic.gdx.graphics.g2d.TextureRegion region -> d
    com.badlogic.gdx.graphics.g2d.BitmapFontCache cache -> h
    boolean flipped -> i
    boolean integer -> j
    boolean ownsTexture -> k
    135:200:void load(com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData) -> a
    205:208:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float) -> a
    214:217:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,int,int) -> a
    223:226:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawMultiLine(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float) -> b
    233:236:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawMultiLine(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> a
    243:246:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawWrapped(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,float) -> a
    254:257:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawWrapped(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> b
    263:263:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence) -> a
    269:269:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds) -> a
    275:275:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence,int,int) -> a
    283:304:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence,int,int,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds) -> a
    310:310:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getMultiLineBounds(java.lang.CharSequence) -> b
    316:329:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getMultiLineBounds(java.lang.CharSequence,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds) -> b
    335:335:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getWrappedBounds(java.lang.CharSequence,float) -> a
    342:384:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getWrappedBounds(java.lang.CharSequence,float,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds) -> a
    392:430:void computeGlyphAdvancesAndPositions(java.lang.CharSequence,com.badlogic.gdx.utils.FloatArray,com.badlogic.gdx.utils.FloatArray) -> a
    436:466:int computeVisibleGlyphs(java.lang.CharSequence,int,int,float) -> a
    470:471:void setColor(float) -> a
    474:475:void setColor(com.badlogic.gdx.graphics.Color) -> a
    478:479:void setColor(float,float,float,float) -> a
    484:484:com.badlogic.gdx.graphics.Color getColor() -> h
    488:500:void setScale(float,float) -> a
    507:508:void setScale(float) -> b
    512:513:void scale(float) -> c
    516:516:float getScaleX() -> a
    520:520:float getScaleY() -> b
    524:524:com.badlogic.gdx.graphics.g2d.TextureRegion getRegion() -> c
    529:529:float getLineHeight() -> i
    534:534:float getSpaceWidth() -> j
    539:539:float getXHeight() -> k
    545:545:float getCapHeight() -> d
    550:550:float getAscent() -> l
    556:556:float getDescent() -> e
    561:561:boolean isFlipped() -> f
    566:567:void dispose() -> dispose
    572:585:void setFixedWidthGlyphs(java.lang.CharSequence) -> c
    589:589:boolean containsCharacter(char) -> a
    594:596:void setUseIntegerPositions(boolean) -> a
    600:600:boolean usesIntegerPositions() -> g
    604:604:com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData getData() -> m
    611:611:boolean ownsTexture() -> n
    621:622:void setOwnsTexture(boolean) -> b
    650:653:int indexOf$4d218b0e(java.lang.CharSequence,int) -> a
    657:664:boolean isWhitespace(char) -> b
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData -> com.badlogic.gdx.graphics.g2d.c:
    java.lang.String imagePath -> a
    com.badlogic.gdx.files.FileHandle fontFile -> b
    boolean flipped -> c
    float lineHeight -> d
    float capHeight -> e
    float ascent -> f
    float descent -> g
    float down -> h
    float scaleX -> i
    float scaleY -> j
    com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph[][] glyphs -> k
    float spaceWidth -> l
    float xHeight -> m
    844:847:void setGlyph(int,com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph) -> a
    850:857:com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph getFirstGlyph() -> a
    861:863:com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph getGlyph(char) -> a
    867:867:java.lang.String getImagePath() -> b
    871:871:com.badlogic.gdx.files.FileHandle getFontFile() -> c
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph -> com.badlogic.gdx.graphics.g2d.d:
    int srcX -> a
    int srcY -> b
    int width -> c
    int height -> d
    float u -> e
    float v -> f
    float u2 -> g
    float v2 -> h
    int xoffset -> i
    int yoffset -> j
    int xadvance -> k
    byte[][] kerning -> l
    634:638:int getKerning(char) -> a
    642:646:void setKerning(int,int) -> a
com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment -> com.badlogic.gdx.graphics.g2d.e:
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment LEFT -> a
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment CENTER -> b
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment RIGHT -> c
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment[] $VALUES -> d
    685:685:com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment[] values() -> values
    685:685:com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds -> com.badlogic.gdx.graphics.g2d.f:
    float width -> a
    float height -> b
    680:682:void set(com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds) -> a
com.badlogic.gdx.graphics.g2d.BitmapFontCache -> com.badlogic.gdx.graphics.g2d.g:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> a
    float[] vertices -> b
    int idx -> c
    float x -> d
    float y -> e
    float color -> f
    com.badlogic.gdx.graphics.Color tempColor -> g
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds textBounds -> h
    boolean integer -> i
    56:57:void setPosition(float,float) -> a
    63:75:void translate(float,float) -> b
    78:83:void setColor(float) -> a
    86:92:void setColor(com.badlogic.gdx.graphics.Color) -> a
    95:102:void setColor(float,float,float,float) -> a
    107:111:void setColor(com.badlogic.gdx.graphics.Color,int,int) -> a
    114:115:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
    118:129:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    132:139:com.badlogic.gdx.graphics.Color getColor() -> a
    144:147:void clear() -> b
    150:156:void require(int) -> a
    159:211:float addToCache(java.lang.CharSequence,float,float,int,int) -> b
    215:257:void addGlyph(com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph,float,float,float,float) -> a
    262:263:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setText(java.lang.CharSequence,float,float) -> a
    269:270:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setText(java.lang.CharSequence,float,float,int,int) -> c
    276:276:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addText(java.lang.CharSequence,float,float) -> b
    286:290:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addText(java.lang.CharSequence,float,float,int,int) -> a
    296:297:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setMultiLineText$30738de0(java.lang.CharSequence) -> a
    303:304:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setMultiLineText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> a
    310:310:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addMultiLineText(java.lang.CharSequence,float,float) -> c
    320:348:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addMultiLineText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> b
    355:356:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setWrappedText(java.lang.CharSequence,float,float,float) -> a
    363:364:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setWrappedText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> c
    370:370:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addWrappedText(java.lang.CharSequence,float,float,float) -> b
    379:434:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addWrappedText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> d
    440:440:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds() -> c
    445:445:float getX() -> e
    450:450:float getY() -> f
    454:454:com.badlogic.gdx.graphics.g2d.BitmapFont getFont() -> d
    460:461:void setUseIntegerPositions(boolean) -> a
    465:465:boolean usesIntegerPositions() -> g
    469:469:float[] getVertices() -> h
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap -> com.badlogic.gdx.graphics.g2d.Gdx2DPixmap:
    int GDX2D_FORMAT_ALPHA -> a
    int GDX2D_FORMAT_LUMINANCE_ALPHA -> b
    int GDX2D_FORMAT_RGB888 -> c
    int GDX2D_FORMAT_RGBA8888 -> d
    int GDX2D_FORMAT_RGB565 -> e
    int GDX2D_FORMAT_RGBA4444 -> f
    int GDX2D_SCALE_NEAREST -> g
    int GDX2D_SCALE_LINEAR -> h
    int GDX2D_BLEND_NONE -> i
    int GDX2D_BLEND_SRC_OVER -> j
    long basePtr -> k
    int width -> l
    int height -> m
    int format -> n
    java.nio.ByteBuffer pixelPtr -> o
    long[] nativeData -> p
    104:105:void dispose() -> dispose
    108:109:void clear(int) -> a
    112:113:void setPixel(int,int,int) -> a
    116:116:int getPixel(int,int) -> a
    120:121:void drawLine(int,int,int,int,int) -> a
    124:125:void drawRect(int,int,int,int,int) -> b
    128:129:void drawCircle(int,int,int,int) -> a
    132:133:void fillRect(int,int,int,int,int) -> c
    136:137:void fillCircle(int,int,int,int) -> b
    140:141:void drawPixmap$1d45ff80(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap,int,int,int,int) -> a
    145:146:void drawPixmap(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap,int,int,int,int,int,int,int,int) -> a
    150:152:com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(java.io.InputStream,int) -> a
    158:160:com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(int,int,int) -> b
    165:165:java.nio.ByteBuffer getPixels() -> a
    169:169:int getHeight() -> b
    173:173:int getWidth() -> c
    177:177:int getFormat() -> d
    181:193:int getGLInternalFormat() -> e
    198:198:int getGLFormat() -> f
    202:213:int getGLType() -> g
    218:232:java.lang.String getFormatString() -> h
    java.nio.ByteBuffer load(long[],byte[],int,int,int) -> load
    java.nio.ByteBuffer newPixmap(long[],int,int,int) -> newPixmap
    void free(long) -> free
    void clear(long,int) -> clear
    void setPixel(long,int,int,int) -> setPixel
    int getPixel(long,int,int) -> getPixel
    void drawLine(long,int,int,int,int,int) -> drawLine
    void drawRect(long,int,int,int,int,int) -> drawRect
    void drawCircle(long,int,int,int,int) -> drawCircle
    void fillRect(long,int,int,int,int,int) -> fillRect
    void fillCircle(long,int,int,int,int) -> fillCircle
    void drawPixmap(long,long,int,int,int,int,int,int,int,int) -> drawPixmap
    void setBlend(int) -> setBlend
    void setScale(int) -> setScale
    java.lang.String getFailureReason() -> getFailureReason
com.badlogic.gdx.graphics.g2d.NinePatch -> com.badlogic.gdx.graphics.g2d.h:
    int TOP_LEFT -> a
    int TOP_CENTER -> b
    int TOP_RIGHT -> c
    int MIDDLE_LEFT -> d
    int MIDDLE_CENTER -> e
    int MIDDLE_RIGHT -> f
    int BOTTOM_LEFT -> g
    int BOTTOM_CENTER -> h
    int BOTTOM_RIGHT -> i
    com.badlogic.gdx.graphics.Color tmpDrawColor -> j
    com.badlogic.gdx.graphics.Texture texture -> k
    int bottomLeft -> l
    int bottomCenter -> m
    int bottomRight -> n
    int middleLeft -> o
    int middleCenter -> p
    int middleRight -> q
    int topLeft -> r
    int topCenter -> s
    int topRight -> t
    float leftWidth -> u
    float rightWidth -> v
    float middleWidth -> w
    float middleHeight -> x
    float topHeight -> y
    float bottomHeight -> z
    float[] vertices -> A
    int idx -> B
    com.badlogic.gdx.graphics.Color color -> C
    int padLeft -> D
    int padRight -> E
    int padTop -> F
    int padBottom -> G
    215:267:void load(com.badlogic.gdx.graphics.g2d.TextureRegion[]) -> a
    270:298:int add(com.badlogic.gdx.graphics.g2d.TextureRegion,float) -> a
    303:321:void set(int,float,float,float,float,float) -> a
    324:342:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float) -> a
    347:348:void setColor(com.badlogic.gdx.graphics.Color) -> a
    351:351:com.badlogic.gdx.graphics.Color getColor() -> g
    355:355:float getLeftWidth() -> h
    360:361:void setLeftWidth(float) -> a
    364:364:float getRightWidth() -> i
    369:370:void setRightWidth(float) -> b
    373:373:float getTopHeight() -> j
    378:379:void setTopHeight(float) -> c
    382:382:float getBottomHeight() -> k
    387:388:void setBottomHeight(float) -> d
    391:391:float getMiddleWidth() -> l
    398:399:void setMiddleWidth(float) -> e
    402:402:float getMiddleHeight() -> m
    409:410:void setMiddleHeight(float) -> f
    413:413:float getTotalWidth() -> a
    417:417:float getTotalHeight() -> b
    423:427:void setPadding(int,int,int,int) -> a
    431:432:float getPadLeft() -> c
    437:438:void setPadLeft(int) -> a
    442:443:float getPadRight() -> d
    448:449:void setPadRight(int) -> b
    453:454:float getPadTop() -> e
    459:460:void setPadTop(int) -> c
    464:465:float getPadBottom() -> f
    470:471:void setPadBottom(int) -> d
    474:474:com.badlogic.gdx.graphics.Texture getTexture() -> n
com.badlogic.gdx.graphics.g2d.ParticleEffect -> com.badlogic.gdx.graphics.g2d.i:
    com.badlogic.gdx.utils.Array emitters -> a
    49:51:void start() -> b
    54:56:void reset() -> a
    59:61:void update(float) -> a
    64:66:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
    69:71:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    74:76:void allowCompletion() -> c
    79:83:boolean isComplete() -> d
    87:93:void setDuration(int) -> a
    96:98:void setPosition(float,float) -> a
    101:103:void setFlip(boolean,boolean) -> a
    106:108:void flipY() -> e
    111:111:com.badlogic.gdx.utils.Array getEmitters() -> f
    116:120:com.badlogic.gdx.graphics.g2d.ParticleEmitter findEmitter(java.lang.String) -> a
    124:141:void save(java.io.File) -> a
    146:148:void load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle) -> a
    151:153:void load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureAtlas) -> a
    156:175:void loadEmitters(com.badlogic.gdx.files.FileHandle) -> a
    180:191:void loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas) -> a
    194:201:void loadEmitterImages(com.badlogic.gdx.files.FileHandle) -> b
    204:204:com.badlogic.gdx.graphics.Texture loadTexture(com.badlogic.gdx.files.FileHandle) -> c
    209:213:void dispose() -> dispose
com.badlogic.gdx.graphics.g2d.ParticleEffectPool -> com.badlogic.gdx.graphics.g2d.j:
    com.badlogic.gdx.graphics.g2d.ParticleEffect effect -> a
    31:31:com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect newObject() -> a
    35:37:com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect obtain() -> b
    22:22:java.lang.Object obtain() -> obtain
    22:22:java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect -> com.badlogic.gdx.graphics.g2d.k:
    com.badlogic.gdx.graphics.g2d.ParticleEffectPool this$0 -> a
    49:50:void reset() -> a
    53:54:void free() -> b
com.badlogic.gdx.graphics.g2d.ParticleEmitter -> com.badlogic.gdx.graphics.g2d.l:
    int UPDATE_SCALE -> c
    int UPDATE_ANGLE -> d
    int UPDATE_ROTATION -> e
    int UPDATE_VELOCITY -> f
    int UPDATE_WIND -> g
    int UPDATE_GRAVITY -> h
    int UPDATE_TINT -> i
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue delayValue -> j
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue lifeOffsetValue -> k
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue durationValue -> l
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue lifeValue -> m
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue emissionValue -> n
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue scaleValue -> o
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue rotationValue -> p
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue velocityValue -> q
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue angleValue -> r
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue windValue -> s
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue gravityValue -> t
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue transparencyValue -> u
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue tintValue -> v
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue xOffsetValue -> w
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue yOffsetValue -> x
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue spawnWidthValue -> y
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue spawnHeightValue -> z
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue spawnShapeValue -> A
    float accumulator -> B
    com.badlogic.gdx.graphics.g2d.Sprite sprite -> C
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle[] particles -> D
    int minParticleCount -> E
    int maxParticleCount -> F
    float x -> G
    float y -> H
    java.lang.String name -> I
    java.lang.String imagePath -> J
    int activeCount -> K
    boolean[] active -> L
    boolean firstUpdate -> M
    boolean flipX -> N
    boolean flipY -> O
    int updateFlags -> P
    boolean allowCompletion -> Q
    int emission -> R
    int emissionDiff -> S
    int emissionDelta -> T
    int lifeOffset -> U
    int lifeOffsetDiff -> V
    int life -> W
    int lifeDiff -> X
    float spawnWidth -> Y
    float spawnWidthDiff -> Z
    float spawnHeight -> aa
    float spawnHeightDiff -> ab
    float duration -> a
    float durationTimer -> b
    float delay -> ac
    float delayTimer -> ad
    boolean attached -> ae
    boolean continuous -> af
    boolean aligned -> ag
    boolean behind -> ah
    boolean additive -> ai
    126:134:void initialize() -> j
    137:141:void setMaxParticleCount(int) -> a
    144:155:void addParticle() -> k
    158:174:void addParticles(int) -> b
    177:222:void update(float) -> a
    225:236:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
    241:299:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    302:305:void start() -> a
    308:311:void reset() -> b
    314:348:void restart() -> l
    351:351:com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle newParticle(com.badlogic.gdx.graphics.g2d.Sprite) -> a
    355:497:void activateParticle(int) -> c
    500:553:boolean updateParticle(com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle,float,int) -> a
    557:566:void setPosition(float,float) -> a
    569:580:void setSprite(com.badlogic.gdx.graphics.g2d.Sprite) -> b
    585:587:void allowCompletion() -> c
    590:590:com.badlogic.gdx.graphics.g2d.Sprite getSprite() -> d
    594:594:java.lang.String getName() -> e
    598:599:void setName(java.lang.String) -> b
    602:602:com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getLife() -> m
    606:606:com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getScale() -> n
    610:610:com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getRotation() -> o
    614:614:com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue getTint() -> p
    618:618:com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getVelocity() -> q
    622:622:com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getWind() -> r
    626:626:com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getGravity() -> s
    630:630:com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getAngle() -> t
    634:634:com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getEmission() -> u
    638:638:com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getTransparency() -> v
    642:642:com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getDuration() -> w
    646:646:com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getDelay() -> x
    650:650:com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getLifeOffset() -> y
    654:654:com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getXOffsetValue() -> z
    658:658:com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getYOffsetValue() -> A
    662:662:com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getSpawnWidth() -> B
    666:666:com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getSpawnHeight() -> C
    670:670:com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue getSpawnShape() -> D
    674:674:boolean isAttached() -> E
    678:679:void setAttached(boolean) -> a
    682:682:boolean isContinuous() -> F
    686:687:void setContinuous$1385ff() -> f
    690:690:boolean isAligned() -> G
    694:695:void setAligned(boolean) -> b
    698:698:boolean isAdditive() -> H
    702:703:void setAdditive(boolean) -> c
    706:706:boolean isBehind() -> I
    710:711:void setBehind(boolean) -> d
    714:714:int getMinParticleCount() -> J
    718:719:void setMinParticleCount(int) -> d
    722:722:int getMaxParticleCount() -> K
    726:727:boolean isComplete() -> g
    731:732:float getPercentComplete() -> L
    736:736:float getX() -> M
    740:740:float getY() -> N
    744:744:int getActiveCount() -> O
    748:748:java.lang.String getImagePath() -> h
    752:753:void setImagePath(java.lang.String) -> a
    756:763:void setFlip(boolean,boolean) -> a
    766:779:void flipY() -> i
    782:828:void save(java.io.Writer) -> a
    832:880:void load(java.io.BufferedReader) -> a
    885:887:java.lang.String readString(java.io.BufferedReader,java.lang.String) -> a
    891:891:boolean readBoolean(java.io.BufferedReader,java.lang.String) -> b
    895:895:int readInt(java.io.BufferedReader,java.lang.String) -> c
    899:899:float readFloat(java.io.BufferedReader,java.lang.String) -> d
com.badlogic.gdx.graphics.g2d.ParticleEmitter$1 -> com.badlogic.gdx.graphics.g2d.m:
    int[] $SwitchMap$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnEllipseSide -> a
    int[] $SwitchMap$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnShape -> b
com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue -> com.badlogic.gdx.graphics.g2d.n:
    float[] temp -> d
    float[] colors -> e
    float[] timeline -> a
    1172:1172:float[] getTimeline() -> a
    1176:1177:void setTimeline(float[]) -> a
    1180:1180:float[] getColors() -> b
    1184:1185:void setColors(float[]) -> b
    1188:1215:float[] getColor(float) -> a
    1219:1227:void save(java.io.Writer) -> a
    1230:1238:void load(java.io.BufferedReader) -> a
    1241:1246:void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue) -> a
com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue -> com.badlogic.gdx.graphics.g2d.o:
    float value -> a
    963:963:float getValue() -> a
    967:968:void setValue(float) -> a
    971:974:void save(java.io.Writer) -> a
    977:980:void load(java.io.BufferedReader) -> a
    983:985:void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue) -> a
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle -> com.badlogic.gdx.graphics.g2d.p:
    int life -> a
    int currentLife -> b
    float scale -> c
    float scaleDiff -> d
    float rotation -> e
    float rotationDiff -> f
    float velocity -> g
    float velocityDiff -> h
    float angle -> i
    float angleDiff -> j
    float angleCos -> k
    float angleSin -> l
    float transparency -> m
    float transparencyDiff -> n
    float wind -> o
    float windDiff -> p
    float gravity -> q
    float gravityDiff -> r
    float[] tint -> s
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue -> com.badlogic.gdx.graphics.g2d.q:
    boolean active -> b
    boolean alwaysActive -> c
    924:925:void setAlwaysActive$1385ff() -> a
    928:928:boolean isAlwaysActive() -> b
    932:932:boolean isActive() -> c
    936:937:void setActive(boolean) -> a
    940:944:void save(java.io.Writer) -> a
    947:951:void load(java.io.BufferedReader) -> a
    954:956:void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue) -> a
com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue -> com.badlogic.gdx.graphics.g2d.r:
    float lowMin -> a
    float lowMax -> d
    992:992:float newLowValue() -> a
    996:998:void setLow(float) -> a
    1001:1003:void setLow(float,float) -> a
    1006:1006:float getLowMin() -> b
    1010:1011:void setLowMin(float) -> b
    1014:1014:float getLowMax() -> c
    1018:1019:void setLowMax(float) -> c
    1022:1026:void save(java.io.Writer) -> a
    1029:1033:void load(java.io.BufferedReader) -> a
    1036:1039:void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue) -> a
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue -> com.badlogic.gdx.graphics.g2d.s:
    float[] scaling -> d
    float[] timeline -> a
    float highMin -> e
    float highMax -> f
    boolean relative -> g
    1049:1049:float newHighValue() -> d
    1053:1055:void setHigh(float) -> b
    1058:1060:void setHigh(float,float) -> b
    1063:1063:float getHighMin() -> e
    1067:1068:void setHighMin(float) -> c
    1071:1071:float getHighMax() -> f
    1075:1076:void setHighMax(float) -> d
    1079:1079:float[] getScaling() -> h
    1083:1084:void setScaling(float[]) -> a
    1087:1087:float[] getTimeline() -> i
    1091:1092:void setTimeline(float[]) -> b
    1095:1095:boolean isRelative() -> g
    1099:1100:void setRelative(boolean) -> a
    1103:1118:float getScale(float) -> a
    1122:1133:void save(java.io.Writer) -> a
    1136:1147:void load(java.io.BufferedReader) -> a
    1150:1158:void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue) -> a
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide -> com.badlogic.gdx.graphics.g2d.t:
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide both -> a
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide top -> b
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide bottom -> c
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide[] $VALUES -> d
    1310:1310:com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide[] values() -> values
    1310:1310:com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape -> com.badlogic.gdx.graphics.g2d.u:
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape point -> a
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape line -> b
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape square -> c
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape ellipse -> d
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape[] $VALUES -> e
    1306:1306:com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape[] values() -> values
    1306:1306:com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue -> com.badlogic.gdx.graphics.g2d.v:
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape shape -> a
    boolean edges -> d
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide side -> e
    1255:1255:com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape getShape() -> a
    1259:1260:void setShape(com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape) -> a
    1263:1263:boolean isEdges() -> b
    1267:1268:void setEdges(boolean) -> a
    1271:1271:com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide getSide() -> c
    1275:1276:void setSide(com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide) -> a
    1279:1286:void save(java.io.Writer) -> a
    1289:1296:void load(java.io.BufferedReader) -> a
    1299:1303:void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue) -> a
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D -> com.badlogic.gdx.graphics.g2d.w:
    com.badlogic.gdx.physics.box2d.World world -> c
    com.badlogic.gdx.math.Vector2 startPoint -> d
    com.badlogic.gdx.math.Vector2 endPoint -> e
    boolean particleCollided -> f
    float normalAngle -> g
    float EPSILON -> i
    com.badlogic.gdx.physics.box2d.RayCastCallback rayCallBack -> h
    86:86:com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle newParticle(com.badlogic.gdx.graphics.g2d.Sprite) -> a
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D$1 -> com.badlogic.gdx.graphics.g2d.x:
    com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D this$0 -> a
    48:50:float reportRayFixture$5d5164df(com.badlogic.gdx.math.Vector2,float) -> a
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D$ParticleBox2D -> com.badlogic.gdx.graphics.g2d.y:
    com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D this$0 -> t
    103:126:void translate(float,float) -> a
com.badlogic.gdx.graphics.g2d.PixmapPacker -> com.badlogic.gdx.graphics.g2d.z:
    int pageWidth -> a
    int pageHeight -> b
    com.badlogic.gdx.graphics.Pixmap$Format pageFormat -> c
    int padding -> d
    boolean duplicateBorder -> e
    com.badlogic.gdx.utils.Array pages -> f
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Page currPage -> g
    boolean disposed -> h
    156:203:com.badlogic.gdx.math.Rectangle pack(java.lang.String,com.badlogic.gdx.graphics.Pixmap) -> a
    207:213:void newPage() -> a
    216:258:com.badlogic.gdx.graphics.g2d.PixmapPacker$Node insert(com.badlogic.gdx.graphics.g2d.PixmapPacker$Node,com.badlogic.gdx.math.Rectangle) -> a
    264:264:com.badlogic.gdx.utils.Array getPages() -> b
    270:274:com.badlogic.gdx.math.Rectangle getRect(java.lang.String) -> a
    280:284:com.badlogic.gdx.graphics.g2d.PixmapPacker$Page getPage(java.lang.String) -> b
    292:296:void dispose() -> dispose
    303:323:com.badlogic.gdx.graphics.g2d.TextureAtlas generateTextureAtlas(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,boolean) -> a
    331:365:void updateTextureAtlas(com.badlogic.gdx.graphics.g2d.TextureAtlas,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,boolean) -> a
    368:368:int getPageWidth() -> c
    372:372:int getPageHeight() -> d
    376:376:int getPadding() -> e
    380:380:boolean duplicateBoarder() -> f
com.badlogic.gdx.graphics.g2d.PixmapPacker$1 -> com.badlogic.gdx.graphics.g2d.aa:
    com.badlogic.gdx.graphics.g2d.PixmapPacker this$0 -> h
    309:311:void dispose() -> dispose
com.badlogic.gdx.graphics.g2d.PixmapPacker$2 -> com.badlogic.gdx.graphics.g2d.ab:
    com.badlogic.gdx.graphics.g2d.PixmapPacker this$0 -> h
    337:339:void dispose() -> dispose
com.badlogic.gdx.graphics.g2d.PixmapPacker$ManagedPixmapTextureData -> com.badlogic.gdx.graphics.g2d.ac:
    com.badlogic.gdx.graphics.g2d.PixmapPacker this$0 -> a
    390:390:boolean isManaged() -> k
com.badlogic.gdx.graphics.g2d.PixmapPacker$Node -> com.badlogic.gdx.graphics.g2d.ad:
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node leftChild -> a
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node rightChild -> b
    com.badlogic.gdx.math.Rectangle rect -> c
    java.lang.String leaveName -> d
com.badlogic.gdx.graphics.g2d.PixmapPacker$Page -> com.badlogic.gdx.graphics.g2d.ae:
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node root -> a
    com.badlogic.gdx.utils.OrderedMap rects -> b
    com.badlogic.gdx.graphics.Pixmap image -> c
    com.badlogic.gdx.graphics.Texture texture -> d
    com.badlogic.gdx.utils.Array addedRects -> e
    com.badlogic.gdx.graphics.g2d.PixmapPacker this$0 -> f
    114:114:com.badlogic.gdx.graphics.Pixmap getPixmap() -> a
com.badlogic.gdx.graphics.g2d.PolygonRegion -> com.badlogic.gdx.graphics.g2d.af:
    float[] texCoords -> a
    float[] localVertices -> b
    com.badlogic.gdx.graphics.g2d.TextureRegion region -> c
    94:128:void loadPolygonDefinition(com.badlogic.gdx.files.FileHandle) -> a
    136:144:float[] calculateAtlasTexCoords(float[]) -> a
    149:149:float[] getLocalVertices() -> a
    154:154:float[] getTextureCoords() -> b
    159:159:com.badlogic.gdx.graphics.g2d.TextureRegion getRegion() -> c
com.badlogic.gdx.graphics.g2d.PolygonSprite -> com.badlogic.gdx.graphics.g2d.ag:
    com.badlogic.gdx.graphics.g2d.PolygonRegion region -> a
    float x -> b
    float y -> c
    float width -> d
    float height -> e
    float scaleX -> f
    float scaleY -> g
    float rotation -> h
    float originX -> i
    float originY -> j
    float[] vertices -> k
    boolean dirty -> l
    com.badlogic.gdx.math.Rectangle bounds -> m
    com.badlogic.gdx.graphics.Color color -> n
    51:66:void set(com.badlogic.gdx.graphics.g2d.PolygonSprite) -> a
    71:77:void setBounds(float,float,float,float) -> a
    83:87:void setSize(float,float) -> a
    93:94:void setPosition(float,float) -> b
    100:101:void setX(float) -> a
    107:108:void setY(float) -> b
    113:121:void translateX(float) -> c
    126:134:void translateY(float) -> d
    139:149:void translate(float,float) -> c
    152:158:void setColor(com.badlogic.gdx.graphics.Color) -> a
    161:167:void setColor$4098370b() -> a
    171:174:void setOrigin(float,float) -> d
    177:179:void setRotation(float) -> e
    183:185:void rotate(float) -> f
    188:191:void setScale(float) -> g
    194:197:void setScale(float,float) -> e
    201:204:void scale(float) -> h
    208:246:float[] getVertices() -> b
    255:274:com.badlogic.gdx.math.Rectangle getBoundingRectangle() -> c
    278:279:void draw(com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch) -> a
    282:289:void draw(com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch,float) -> a
    292:292:float getX() -> d
    296:296:float getY() -> e
    300:300:float getWidth() -> f
    304:304:float getHeight() -> g
    308:308:float getOriginX() -> h
    312:312:float getOriginY() -> i
    316:316:float getRotation() -> j
    320:320:float getScaleX() -> k
    324:324:float getScaleY() -> l
    330:336:com.badlogic.gdx.graphics.Color getColor() -> m
    340:355:void setRegion(com.badlogic.gdx.graphics.g2d.PolygonRegion) -> a
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch -> com.badlogic.gdx.graphics.g2d.ah:
    com.badlogic.gdx.graphics.Mesh mesh -> e
    com.badlogic.gdx.graphics.Mesh[] buffers -> f
    com.badlogic.gdx.graphics.Texture lastTexture -> g
    int idx -> h
    int currBufferIdx -> i
    float[] vertices -> j
    com.badlogic.gdx.math.Matrix4 transformMatrix -> k
    com.badlogic.gdx.math.Matrix4 projectionMatrix -> l
    com.badlogic.gdx.math.Matrix4 combinedMatrix -> m
    boolean drawing -> n
    boolean blendingDisabled -> o
    int blendSrcFunc -> p
    int blendDstFunc -> q
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> r
    boolean ownsShader -> s
    float color -> a
    com.badlogic.gdx.graphics.Color tempColor -> t
    int renderCalls -> b
    int totalRenderCalls -> c
    int maxVerticesInBatch -> d
    com.badlogic.gdx.graphics.glutils.ShaderProgram customShader -> u
    193:222:com.badlogic.gdx.graphics.glutils.ShaderProgram createDefaultShader() -> a
    230:247:void begin() -> b
    252:270:void end() -> c
    274:275:void setColor(com.badlogic.gdx.graphics.Color) -> a
    279:281:void setColor(float,float,float,float) -> a
    286:287:void setColor(float) -> a
    291:297:com.badlogic.gdx.graphics.Color getColor() -> d
    302:303:void draw(com.badlogic.gdx.graphics.g2d.PolygonRegion,float,float) -> a
    307:329:void draw(com.badlogic.gdx.graphics.g2d.PolygonRegion,float,float,float,float) -> a
    337:383:void draw(com.badlogic.gdx.graphics.g2d.PolygonRegion,float,float,float,float,float,float,float,float,float) -> a
    388:403:void draw$52637079(com.badlogic.gdx.graphics.g2d.PolygonRegion,float[],int) -> a
    407:408:void flush() -> e
    411:441:void renderMesh() -> f
    445:447:void disableBlending() -> g
    451:453:void enableBlending() -> h
    460:463:void setBlendFunction(int,int) -> a
    467:470:void dispose() -> i
    476:476:com.badlogic.gdx.math.Matrix4 getProjectionMatrix() -> j
    483:483:com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> k
    491:494:void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> a
    501:504:void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> b
    507:525:void setupMatrices() -> l
    528:530:void switchTexture(com.badlogic.gdx.graphics.Texture) -> a
    547:562:void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    566:566:boolean isBlendingEnabled() -> m
com.badlogic.gdx.graphics.g2d.Sprite -> com.badlogic.gdx.graphics.g2d.ai:
    int VERTEX_SIZE -> u
    int SPRITE_SIZE -> v
    float[] vertices -> w
    com.badlogic.gdx.graphics.Color color -> a
    float x -> b
    float y -> c
    float width -> x
    float height -> y
    float originX -> d
    float originY -> e
    float rotation -> f
    float scaleX -> g
    float scaleY -> h
    boolean dirty -> i
    com.badlogic.gdx.math.Rectangle bounds -> j
    103:121:void set(com.badlogic.gdx.graphics.g2d.Sprite) -> a
    126:149:void setBounds(float,float,float,float) -> a
    155:176:void setSize(float,float) -> b
    182:183:void setPosition(float,float) -> c
    189:190:void setX(float) -> g
    196:197:void setY(float) -> h
    202:211:void translateX(float) -> i
    216:225:void translateY(float) -> j
    230:247:void translate(float,float) -> a
    250:256:void setColor(com.badlogic.gdx.graphics.Color) -> a
    259:266:void setColor(float,float,float,float) -> b
    269:274:void setColor(float) -> k
    278:281:void setOrigin(float,float) -> d
    284:286:void setRotation(float) -> a
    290:292:void rotate(float) -> l
    297:324:void rotate90(boolean) -> a
    327:330:void setScale(float) -> b
    333:336:void setScale(float,float) -> f
    340:343:void scale(float) -> m
    347:411:float[] getVertices() -> a
    420:448:com.badlogic.gdx.math.Rectangle getBoundingRectangle() -> r
    452:453:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
    456:463:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    466:466:float getX() -> b
    470:470:float getY() -> c
    474:474:float getWidth() -> d
    478:478:float getHeight() -> e
    482:482:float getOriginX() -> f
    486:486:float getOriginY() -> g
    490:490:float getRotation() -> s
    494:494:float getScaleX() -> t
    498:498:float getScaleY() -> u
    504:511:com.badlogic.gdx.graphics.Color getColor() -> h
    515:529:void setRegion(float,float,float,float) -> c
    532:535:void setU(float) -> c
    538:541:void setV(float) -> d
    544:547:void setU2(float) -> e
    550:553:void setV2(float) -> f
    556:574:void flip(boolean,boolean) -> a
    577:598:void scroll(float,float) -> e
com.badlogic.gdx.graphics.g2d.SpriteBatch -> com.badlogic.gdx.graphics.g2d.aj:
    com.badlogic.gdx.graphics.Mesh mesh -> y
    com.badlogic.gdx.graphics.Mesh[] buffers -> z
    com.badlogic.gdx.graphics.Texture lastTexture -> A
    float invTexWidth -> B
    float invTexHeight -> C
    int idx -> D
    int currBufferIdx -> E
    float[] vertices -> F
    com.badlogic.gdx.math.Matrix4 transformMatrix -> G
    com.badlogic.gdx.math.Matrix4 projectionMatrix -> H
    com.badlogic.gdx.math.Matrix4 combinedMatrix -> I
    boolean drawing -> J
    boolean blendingDisabled -> K
    int blendSrcFunc -> L
    int blendDstFunc -> M
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> N
    boolean ownsShader -> O
    float color -> a
    com.badlogic.gdx.graphics.Color tempColor -> P
    int renderCalls -> b
    int totalRenderCalls -> c
    int maxSpritesInBatch -> d
    com.badlogic.gdx.graphics.glutils.ShaderProgram customShader -> Q
    int X1 -> e
    int Y1 -> f
    int C1 -> g
    int U1 -> h
    int V1 -> i
    int X2 -> j
    int Y2 -> k
    int C2 -> l
    int U2 -> m
    int V2 -> n
    int X3 -> o
    int Y3 -> p
    int C3 -> q
    int U3 -> r
    int V3 -> s
    int X4 -> t
    int Y4 -> u
    int C4 -> v
    int U4 -> w
    int V4 -> x
    207:236:com.badlogic.gdx.graphics.glutils.ShaderProgram createDefaultShader() -> g
    244:261:void begin() -> a
    266:284:void end() -> b
    288:289:void setColor(com.badlogic.gdx.graphics.Color) -> a
    293:295:void setColor(float,float,float,float) -> a
    300:301:void setColor(float) -> a
    305:311:com.badlogic.gdx.graphics.Color getColor() -> c
    338:458:void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean) -> a
    477:525:void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean) -> a
    538:574:void draw(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int) -> a
    586:618:void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float) -> a
    625:657:void draw(com.badlogic.gdx.graphics.Texture,float,float) -> a
    661:698:void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float) -> a
    703:726:void draw$1647d9c(com.badlogic.gdx.graphics.Texture,float[],int) -> a
    730:731:void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float) -> a
    735:773:void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float) -> a
    781:891:void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float) -> a
    901:1027:void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float,boolean) -> a
    1031:1032:void flush() -> d
    1035:1067:void renderMesh() -> h
    1071:1074:void disableBlending() -> i
    1078:1081:void enableBlending() -> j
    1088:1091:void setBlendFunction$255f295(int) -> a
    1095:1098:void dispose() -> dispose
    1104:1104:com.badlogic.gdx.math.Matrix4 getProjectionMatrix() -> e
    1111:1111:com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> f
    1119:1122:void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> a
    1129:1132:void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> b
    1135:1151:void setupMatrices() -> k
    1154:1158:void switchTexture(com.badlogic.gdx.graphics.Texture) -> a
    1173:1188:void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    1192:1192:boolean isBlendingEnabled() -> l
com.badlogic.gdx.graphics.g2d.SpriteCache -> com.badlogic.gdx.graphics.g2d.ak:
    float[] tempVertices -> a
    com.badlogic.gdx.graphics.Mesh mesh -> b
    boolean drawing -> c
    com.badlogic.gdx.math.Matrix4 transformMatrix -> d
    com.badlogic.gdx.math.Matrix4 projectionMatrix -> e
    java.util.ArrayList caches -> f
    com.badlogic.gdx.math.Matrix4 combinedMatrix -> g
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> h
    com.badlogic.gdx.graphics.g2d.SpriteCache$Cache currentCache -> i
    java.util.ArrayList textures -> j
    java.util.ArrayList counts -> k
    float color -> l
    com.badlogic.gdx.graphics.Color tempColor -> m
    com.badlogic.gdx.graphics.glutils.ShaderProgram customShader -> n
    132:133:void setColor(com.badlogic.gdx.graphics.Color) -> a
    137:139:void setColor(float,float,float,float) -> a
    144:145:void setColor(float) -> a
    148:154:com.badlogic.gdx.graphics.Color getColor() -> g
    159:164:void beginCache() -> a
    170:179:void beginCache(int) -> a
    183:224:int endCache() -> b
    229:231:void clear() -> c
    237:249:void add$1647d9c(com.badlogic.gdx.graphics.Texture,float[],int) -> a
    253:301:void add(com.badlogic.gdx.graphics.Texture,float,float) -> a
    306:354:void add(com.badlogic.gdx.graphics.Texture,float,float,int,int,float,float,float,float,float) -> a
    358:412:void add(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int) -> a
    418:483:void add(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean) -> a
    490:627:void add(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean) -> a
    631:632:void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float) -> a
    636:688:void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float) -> a
    695:818:void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float) -> a
    822:833:void add(com.badlogic.gdx.graphics.g2d.Sprite) -> a
    837:872:void begin() -> d
    876:891:void end() -> e
    895:920:void draw$13462e() -> f
    926:961:void draw(int,int,int) -> a
    965:967:void dispose() -> dispose
    970:970:com.badlogic.gdx.math.Matrix4 getProjectionMatrix() -> h
    974:976:void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> a
    979:979:com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> i
    983:985:void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> b
    1002:1028:com.badlogic.gdx.graphics.glutils.ShaderProgram createDefaultShader() -> j
    1041:1042:void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
com.badlogic.gdx.graphics.g2d.SpriteCache$Cache -> com.badlogic.gdx.graphics.g2d.al:
    int id -> a
    int offset -> b
    int maxCount -> c
    int textureCount -> d
    com.badlogic.gdx.graphics.Texture[] textures -> e
    int[] counts -> f
com.badlogic.gdx.graphics.g2d.TextureAtlas -> com.badlogic.gdx.graphics.g2d.am:
    java.lang.String[] tuple -> a
    java.util.HashSet textures -> c
    com.badlogic.gdx.utils.Array regions -> d
    java.util.Comparator indexComparator -> b
    231:264:void load(com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData) -> a
    268:275:com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.Texture,int,int,int,int) -> a
    280:280:com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.g2d.TextureRegion) -> a
    286:286:com.badlogic.gdx.utils.Array getRegions() -> a
    293:295:com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion findRegion(java.lang.String) -> a
    302:308:com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion findRegion(java.lang.String,int) -> a
    314:319:com.badlogic.gdx.utils.Array findRegions(java.lang.String) -> c
    326:329:com.badlogic.gdx.utils.Array createSprites() -> b
    337:339:com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String) -> b
    347:353:com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String,int) -> b
    361:366:com.badlogic.gdx.utils.Array createSprites(java.lang.String) -> d
    370:379:com.badlogic.gdx.graphics.g2d.Sprite newSprite(com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion) -> a
    387:397:com.badlogic.gdx.graphics.g2d.NinePatch createPatch(java.lang.String) -> e
    402:402:java.util.Set getTextures() -> c
    408:411:void dispose() -> dispose
    424:427:java.lang.String readValue(java.io.BufferedReader) -> a
    432:446:int readTuple(java.io.BufferedReader) -> b
com.badlogic.gdx.graphics.g2d.TextureAtlas$1 -> com.badlogic.gdx.graphics.g2d.an:
    415:419:int compare(com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region,com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region) -> a
    413:413:int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion -> com.badlogic.gdx.graphics.g2d.ao:
    int index -> a
    java.lang.String name -> b
    float offsetX -> c
    float offsetY -> d
    int packedWidth -> e
    int packedHeight -> f
    int originalWidth -> g
    int originalHeight -> h
    boolean rotate -> i
    int[] splits -> j
    int[] pads -> k
    514:517:void flip(boolean,boolean) -> a
    522:522:float getRotatedPackedWidth() -> a
    528:528:float getRotatedPackedHeight() -> b
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite -> com.badlogic.gdx.graphics.g2d.ap:
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion region -> a
    float originalOffsetX -> b
    float originalOffsetY -> c
    562:563:void setPosition(float,float) -> c
    566:573:void setBounds(float,float,float,float) -> a
    576:577:void setSize(float,float) -> b
    580:581:void setOrigin(float,float) -> d
    586:607:void flip(boolean,boolean) -> a
    611:632:void rotate90(boolean) -> a
    635:635:float getX() -> b
    639:639:float getY() -> c
    643:643:float getOriginX() -> f
    647:647:float getOriginY() -> g
    651:651:float getWidth() -> d
    655:655:float getHeight() -> e
    659:659:float getWidthRatio() -> r
    663:663:float getHeightRatio() -> s
    667:667:com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion getAtlasRegion() -> t
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData -> com.badlogic.gdx.graphics.g2d.aq:
    com.badlogic.gdx.utils.Array pages -> a
    com.badlogic.gdx.utils.Array regions -> b
    187:187:com.badlogic.gdx.utils.Array getPages() -> a
    191:191:com.badlogic.gdx.utils.Array getRegions() -> b
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page -> com.badlogic.gdx.graphics.g2d.ar:
    com.badlogic.gdx.files.FileHandle textureFile -> a
    com.badlogic.gdx.graphics.Texture texture -> b
    boolean useMipMaps -> c
    com.badlogic.gdx.graphics.Pixmap$Format format -> d
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> e
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> f
    com.badlogic.gdx.graphics.Texture$TextureWrap uWrap -> g
    com.badlogic.gdx.graphics.Texture$TextureWrap vWrap -> h
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region -> com.badlogic.gdx.graphics.g2d.as:
    com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page page -> a
    int index -> b
    java.lang.String name -> c
    float offsetX -> d
    float offsetY -> e
    int originalWidth -> f
    int originalHeight -> g
    boolean rotate -> h
    int left -> i
    int top -> j
    int width -> k
    int height -> l
    boolean flip -> m
    int[] splits -> n
    int[] pads -> o
com.badlogic.gdx.graphics.g2d.TextureRegion -> com.badlogic.gdx.graphics.g2d.at:
    com.badlogic.gdx.graphics.Texture texture -> z
    float u -> A
    float v -> B
    float u2 -> C
    float v2 -> D
    int regionWidth -> E
    int regionHeight -> F
    75:77:void setRegion(com.badlogic.gdx.graphics.Texture) -> b
    82:87:void setRegion(int,int,int,int) -> a
    90:96:void setRegion(float,float,float,float) -> c
    100:102:void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> a
    106:108:void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion,int,int,int,int) -> a
    111:111:com.badlogic.gdx.graphics.Texture getTexture() -> i
    115:116:void setTexture(com.badlogic.gdx.graphics.Texture) -> a
    119:119:float getU() -> j
    123:125:void setU(float) -> c
    128:128:float getV() -> k
    132:134:void setV(float) -> d
    137:137:float getU2() -> l
    141:143:void setU2(float) -> e
    146:146:float getV2() -> m
    150:152:void setV2(float) -> f
    155:155:int getRegionX() -> n
    159:160:void setRegionX(int) -> a
    163:163:int getRegionY() -> o
    167:168:void setRegionY(int) -> b
    172:172:int getRegionWidth() -> p
    176:177:void setRegionWidth(int) -> c
    181:181:int getRegionHeight() -> q
    185:186:void setRegionHeight(int) -> d
    189:199:void flip(boolean,boolean) -> a
    202:202:boolean isFlipX() -> a
    206:206:boolean isFlipY() -> b
    214:224:void scroll(float,float) -> e
    235:252:com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(int,int) -> a
    264:265:com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(com.badlogic.gdx.graphics.Texture,int,int) -> a
com.badlogic.gdx.graphics.g3d.AnimatedModelInstance -> com.badlogic.gdx.graphics.a.a:
    java.lang.String getAnimation() -> a
    float getAnimationTime() -> b
    boolean isLooping() -> c
com.badlogic.gdx.graphics.g3d.AnimatedModelNode -> com.badlogic.gdx.graphics.a.b:
    java.lang.String animation -> a
    float time -> b
    boolean looping -> c
    36:36:java.lang.String getAnimation() -> a
    41:41:float getAnimationTime() -> b
    46:46:boolean isLooping() -> c
    50:66:com.badlogic.gdx.graphics.g3d.AnimatedModelNode copy() -> i
    21:21:com.badlogic.gdx.graphics.g3d.StillModelNode copy() -> d
com.badlogic.gdx.graphics.g3d.ModelLoaderHints -> com.badlogic.gdx.graphics.a.c:
    boolean flipV -> a
com.badlogic.gdx.graphics.g3d.ModelRenderer -> com.badlogic.gdx.graphics.a.d:
    void begin() -> a
    void draw$6fa1be4f() -> b
    void draw$12cfa77a() -> c
    void end() -> d
com.badlogic.gdx.graphics.g3d.StillModelInstance -> com.badlogic.gdx.graphics.a.e:
    com.badlogic.gdx.math.Matrix4 getTransform() -> e
    com.badlogic.gdx.math.Vector3 getSortCenter() -> f
    float getBoundingSphereRadius() -> g
    com.badlogic.gdx.graphics.g3d.materials.Material[] getMaterials() -> h
com.badlogic.gdx.graphics.g3d.StillModelNode -> com.badlogic.gdx.graphics.a.f:
    float[] vec3 -> a
    com.badlogic.gdx.math.Vector3 origin -> d
    com.badlogic.gdx.math.Vector3 transformedPosition -> e
    com.badlogic.gdx.math.Matrix4 matrix -> f
    com.badlogic.gdx.graphics.g3d.materials.Material[] materials -> g
    float radius -> h
    43:43:com.badlogic.gdx.math.Matrix4 getTransform() -> e
    48:55:com.badlogic.gdx.math.Vector3 getSortCenter() -> f
    60:60:com.badlogic.gdx.graphics.g3d.materials.Material[] getMaterials() -> h
    65:65:float getBoundingSphereRadius() -> g
    69:82:com.badlogic.gdx.graphics.g3d.StillModelNode copy() -> d
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy -> com.badlogic.gdx.graphics.a.a.a:
    int GROUP_OPAQUE -> f
    int GROUP_BLEND -> g
    com.badlogic.gdx.utils.Pool arrayPool -> a
    com.badlogic.gdx.utils.Array usedArrays -> b
    com.badlogic.gdx.utils.ObjectMap materialGroups -> c
    com.badlogic.gdx.graphics.Camera camera -> d
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> e
    java.util.Comparator cameraSorter -> h
    117:118:void setCamera(com.badlogic.gdx.graphics.Camera) -> a
    121:121:com.badlogic.gdx.graphics.Camera getCamera() -> d
    126:126:int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal) -> a
    131:156:void beforeGroup(int,com.badlogic.gdx.utils.Array) -> a
    160:163:void afterGroup(int) -> a
    167:179:void beforeGroups() -> a
    183:188:void afterGroups() -> b
    191:219:void createDefaultShader() -> e
    223:223:com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader$2b182f6b() -> c
    228:229:void dispose() -> dispose
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$1 -> com.badlogic.gdx.graphics.a.a.b:
    com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy this$0 -> a
    88:88:com.badlogic.gdx.utils.Array newObject() -> a
    85:85:java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$2 -> com.badlogic.gdx.graphics.a.a.c:
    com.badlogic.gdx.graphics.Camera val$camera -> a
    102:104:int compare(com.badlogic.gdx.graphics.g3d.decals.Decal,com.badlogic.gdx.graphics.g3d.decals.Decal) -> a
    99:99:int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g3d.decals.Decal -> com.badlogic.gdx.graphics.a.a.d:
    int VERTEX_SIZE -> N
    int SIZE -> a
    com.badlogic.gdx.math.Vector3 tmp -> O
    com.badlogic.gdx.math.Vector3 tmp2 -> P
    int value -> b
    float[] vertices -> c
    com.badlogic.gdx.math.Vector3 position -> d
    com.badlogic.gdx.math.Quaternion rotation -> e
    com.badlogic.gdx.math.Vector2 scale -> f
    com.badlogic.gdx.math.Vector2 transformationOffset -> g
    com.badlogic.gdx.math.Vector2 dimensions -> h
    com.badlogic.gdx.graphics.g3d.decals.DecalMaterial material -> i
    boolean updated -> j
    com.badlogic.gdx.math.Vector3 dir -> k
    int X1 -> l
    int Y1 -> m
    int Z1 -> n
    int C1 -> o
    int U1 -> p
    int V1 -> q
    int X2 -> r
    int Y2 -> s
    int Z2 -> t
    int C2 -> u
    int U2 -> v
    int V2 -> w
    int X3 -> x
    int Y3 -> y
    int Z3 -> z
    int C3 -> A
    int U3 -> B
    int V3 -> C
    int X4 -> D
    int Y4 -> E
    int Z4 -> F
    int C4 -> G
    int U4 -> H
    int V4 -> I
    com.badlogic.gdx.math.Quaternion rotator -> J
    com.badlogic.gdx.math.Vector3 X_AXIS -> K
    com.badlogic.gdx.math.Vector3 Y_AXIS -> L
    com.badlogic.gdx.math.Vector3 Z_AXIS -> M
    69:75:void setColor$4098370b() -> d
    81:83:void setRotationX(float) -> a
    89:91:void setRotationY(float) -> b
    97:99:void setRotationZ(float) -> c
    105:108:void rotateX(float) -> d
    114:117:void rotateY(float) -> e
    123:126:void rotateZ(float) -> f
    132:136:void setRotation(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    142:142:com.badlogic.gdx.math.Quaternion getRotation() -> e
    149:151:void translateX(float) -> g
    157:159:void setX(float) -> h
    163:163:float getX() -> f
    170:172:void translateY(float) -> i
    178:180:void setY(float) -> j
    184:184:float getY() -> g
    191:193:void translateZ(float) -> k
    199:201:void setZ(float) -> l
    205:205:float getZ() -> a
    214:216:void translate(float,float,float) -> a
    224:226:void setPosition(float,float,float) -> b
    232:232:com.badlogic.gdx.math.Vector3 getPosition() -> h
    239:241:void setScaleX(float) -> m
    245:245:float getScaleX() -> i
    252:254:void setScaleY(float) -> n
    258:258:float getScaleY() -> j
    266:268:void setScale(float,float) -> a
    274:276:void setScale(float) -> o
    282:284:void setWidth(float) -> p
    288:288:float getWidth() -> k
    295:297:void setHeight(float) -> q
    301:301:float getHeight() -> l
    309:311:void setDimensions(float,float) -> b
    318:318:float[] getVertices() -> m
    323:327:void update() -> b
    341:436:void transformVertices() -> n
    440:463:void resetVertices() -> o
    467:480:void updateUVs() -> p
    486:488:void setTextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> a
    492:492:com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion() -> q
    500:502:void setBlending(int,int) -> a
    505:505:com.badlogic.gdx.graphics.g3d.decals.DecalMaterial getMaterial() -> c
    514:516:void lookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> b
    554:554:com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(com.badlogic.gdx.graphics.g2d.TextureRegion) -> b
    564:564:com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(com.badlogic.gdx.graphics.g2d.TextureRegion,boolean) -> a
    578:578:com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(float,float,com.badlogic.gdx.graphics.g2d.TextureRegion) -> a
    589:589:com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(float,float,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean) -> a
    602:608:com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(float,float,com.badlogic.gdx.graphics.g2d.TextureRegion,int,int) -> a
com.badlogic.gdx.graphics.g3d.decals.DecalBatch -> com.badlogic.gdx.graphics.a.a.e:
    int DEFAULT_SIZE -> a
    float[] vertices -> b
    com.badlogic.gdx.graphics.Mesh mesh -> c
    com.badlogic.gdx.utils.SortedIntList groupList -> d
    com.badlogic.gdx.graphics.g3d.decals.GroupStrategy groupStrategy -> e
    com.badlogic.gdx.utils.Pool groupPool -> f
    com.badlogic.gdx.utils.Array usedGroups -> g
    81:82:void setGroupStrategy(com.badlogic.gdx.graphics.g3d.decals.GroupStrategy) -> a
    88:105:void initialize$13462e() -> a
    109:109:int getSize() -> b
    116:126:void add(com.badlogic.gdx.graphics.g3d.decals.Decal) -> a
    130:132:void flush() -> c
    136:144:void render() -> d
    151:175:void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,com.badlogic.gdx.utils.Array) -> a
    181:187:void flush(com.badlogic.gdx.graphics.glutils.ShaderProgram,int) -> a
    191:194:void clear() -> e
    199:202:void dispose() -> dispose
com.badlogic.gdx.graphics.g3d.decals.DecalBatch$1 -> com.badlogic.gdx.graphics.a.a.f:
    com.badlogic.gdx.graphics.g3d.decals.DecalBatch this$0 -> a
    59:59:com.badlogic.gdx.utils.Array newObject() -> a
    56:56:java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.decals.DecalMaterial -> com.badlogic.gdx.graphics.a.a.g:
    int NO_BLEND -> a
    com.badlogic.gdx.graphics.g2d.TextureRegion textureRegion -> b
    int srcBlendFactor -> c
    int dstBlendFactor -> d
    31:35:void set() -> a
    39:39:boolean isOpaque() -> b
    43:43:int getSrcBlendFactor() -> c
    47:47:int getDstBlendFactor() -> d
    52:56:boolean equals(java.lang.Object) -> equals
    63:66:int hashCode() -> hashCode
com.badlogic.gdx.graphics.g3d.decals.DefaultGroupStrategy -> com.badlogic.gdx.graphics.a.a.h:
    int GROUP_OPAQUE -> a
    int GROUP_BLEND -> b
    78:78:int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal) -> a
    83:86:void beforeGroup(int,com.badlogic.gdx.utils.Array) -> a
    90:93:void afterGroup(int) -> a
    97:98:void beforeGroups() -> a
    102:103:void afterGroups() -> b
    107:107:com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader$2b182f6b() -> c
com.badlogic.gdx.graphics.g3d.decals.GroupPlug -> com.badlogic.gdx.graphics.a.a.i:
    void beforeGroup$7143f505() -> a
    void afterGroup() -> b
com.badlogic.gdx.graphics.g3d.decals.GroupStrategy -> com.badlogic.gdx.graphics.a.a.j:
    com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader$2b182f6b() -> c
    int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal) -> a
    void beforeGroup(int,com.badlogic.gdx.utils.Array) -> a
    void afterGroup(int) -> a
    void beforeGroups() -> a
    void afterGroups() -> b
com.badlogic.gdx.graphics.g3d.decals.PluggableGroupStrategy -> com.badlogic.gdx.graphics.a.a.k:
    com.badlogic.gdx.utils.IntMap plugs -> a
    29:30:void beforeGroup(int,com.badlogic.gdx.utils.Array) -> a
    34:35:void afterGroup(int) -> a
    41:42:void plugIn(com.badlogic.gdx.graphics.g3d.decals.GroupPlug,int) -> a
    48:48:com.badlogic.gdx.graphics.g3d.decals.GroupPlug unPlug(int) -> b
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy -> com.badlogic.gdx.graphics.a.a.l:
    com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator comparator -> a
    int GROUP_OPAQUE -> b
    int GROUP_BLEND -> c
    76:76:int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal) -> a
    81:90:void beforeGroup(int,com.badlogic.gdx.utils.Array) -> a
    94:98:void afterGroup(int) -> a
    102:103:void beforeGroups() -> a
    107:108:void afterGroups() -> b
    120:120:com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader$2b182f6b() -> c
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator -> com.badlogic.gdx.graphics.a.a.m:
    com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy this$0 -> a
    113:114:int compare(com.badlogic.gdx.graphics.g3d.decals.Decal,com.badlogic.gdx.graphics.g3d.decals.Decal) -> a
    110:110:int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g3d.loaders.KeyframedModelLoader -> com.badlogic.gdx.graphics.a.b.a:
    com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> a
com.badlogic.gdx.graphics.g3d.loaders.ModelLoader -> com.badlogic.gdx.graphics.a.b.b:
    com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> b
com.badlogic.gdx.graphics.g3d.loaders.ModelLoaderRegistry -> com.badlogic.gdx.graphics.a.b.c:
    java.util.Map loaders -> a
    java.util.Map defaultHints -> b
    74:87:void registerLoader(java.lang.String,com.badlogic.gdx.graphics.g3d.loaders.ModelLoader,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> a
    95:123:com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle) -> a
    133:158:com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> a
    167:197:com.badlogic.gdx.graphics.g3d.model.still.StillModel loadStillModel(com.badlogic.gdx.files.FileHandle) -> b
    207:234:com.badlogic.gdx.graphics.g3d.model.still.StillModel loadStillModel(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> b
    244:274:com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel loadKeyframedModel(com.badlogic.gdx.files.FileHandle) -> c
    285:312:com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel loadKeyframedModel(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> c
    321:351:com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel loadSkeletonModel(com.badlogic.gdx.files.FileHandle) -> d
    361:388:com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel loadSkeletonModel$16dcfc52(com.badlogic.gdx.files.FileHandle) -> e
com.badlogic.gdx.graphics.g3d.loaders.SkeletonModelLoader -> com.badlogic.gdx.graphics.a.b.d:
    com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel load$16dcfc52(com.badlogic.gdx.files.FileHandle) -> a
com.badlogic.gdx.graphics.g3d.loaders.StillModelLoader -> com.badlogic.gdx.graphics.a.b.e:
    com.badlogic.gdx.graphics.g3d.model.still.StillModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> a
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dConstants -> com.badlogic.gdx.graphics.a.b.a.a:
    byte MAJOR_VERSION -> a
    byte MINOR_VERSION -> b
    int G3D_ROOT -> c
    int VERSION_INFO -> d
    int STILL_MODEL -> e
    int STILL_SUBMESH -> f
    int KEYFRAMED_MODEL -> g
    int KEYFRAMED_SUBMESH -> h
    int KEYFRAMED_ANIMATION -> i
    int KEYFRAMED_FRAME -> j
    int SKELETON_MODEL -> k
    int SKELETON_SUBMESH -> l
    int SKELETON_ANIMATIONS -> m
    int SKELETON_ANIMATION -> n
    int SKELETON -> o
    int SKELETON_HIERARCHY -> p
    int SKELETON_JOINT -> q
    int SKELETON_KEYFRAME -> r
    int VERTEX_LIST -> s
    int INDEX_LIST -> t
    int VERTEX_ATTRIBUTES -> u
    int VERTEX_ATTRIBUTE -> v
    int BONE_WEIGHTS -> w
    int BONE_WEIGHT -> x
    int BONE_ASSIGNMENTS -> y
    int BONE_ASSIGNMENT -> z
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dLoader -> com.badlogic.gdx.graphics.a.b.a.b:
    50:124:com.badlogic.gdx.graphics.g3d.model.still.StillModel loadStillModel(com.badlogic.gdx.files.FileHandle) -> a
    129:234:com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel loadKeyframedModel(com.badlogic.gdx.files.FileHandle) -> b
    239:399:com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel loadSkeletonModel(com.badlogic.gdx.files.FileHandle) -> c
    404:425:com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonJoint readSkeletonJoint(com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk) -> a
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dLoader$G3dKeyframedModelLoader -> com.badlogic.gdx.graphics.a.b.a.c:
    438:438:com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> a
    435:435:com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> b
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dLoader$G3dSkeletonModelLoader -> com.badlogic.gdx.graphics.a.b.a.d:
    445:445:com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel load$16dcfc52(com.badlogic.gdx.files.FileHandle) -> a
    442:442:com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> b
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dLoader$G3dStillModelLoader -> com.badlogic.gdx.graphics.a.b.a.e:
    431:431:com.badlogic.gdx.graphics.g3d.model.still.StillModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> a
    428:428:com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> b
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dtLoader -> com.badlogic.gdx.graphics.a.b.a.f:
    int lineNum -> a
    java.lang.String line -> b
    51:51:com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel loadKeyframedModel(com.badlogic.gdx.files.FileHandle,boolean) -> a
    55:55:com.badlogic.gdx.graphics.g3d.model.still.StillModel loadStillModel(com.badlogic.gdx.files.FileHandle,boolean) -> b
    62:76:com.badlogic.gdx.graphics.g3d.model.still.StillModel loadStillModel(java.io.InputStream,boolean) -> a
    82:122:com.badlogic.gdx.graphics.g3d.model.still.StillSubMesh readStillSubMesh(java.io.BufferedReader,boolean) -> a
    126:141:com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel loadKeyframedModel(java.io.InputStream,boolean) -> b
    147:203:com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedSubMesh readMesh(java.io.BufferedReader,boolean) -> b
    207:226:float[] buildVertices(int,boolean,com.badlogic.gdx.utils.Array) -> a
    230:237:com.badlogic.gdx.graphics.VertexAttribute[] createVertexAttributes(boolean,int) -> a
    241:248:com.badlogic.gdx.utils.FloatArray readUVSet(java.io.BufferedReader,int,boolean) -> a
    252:271:com.badlogic.gdx.utils.IntArray readFaces(java.io.BufferedReader) -> a
    275:279:short[] convertToShortArray(com.badlogic.gdx.utils.IntArray) -> a
    283:284:float readFloat(java.io.BufferedReader) -> b
    288:289:int readInt(java.io.BufferedReader) -> c
    293:294:java.lang.String readString(java.io.BufferedReader) -> d
    298:305:void readFloatArray(java.io.BufferedReader,com.badlogic.gdx.utils.FloatArray) -> a
    308:314:int readFloatArray(java.io.BufferedReader,float[],int) -> a
    318:324:void readIntArray(java.io.BufferedReader,com.badlogic.gdx.utils.IntArray) -> a
    327:328:java.lang.String read(java.io.BufferedReader) -> e
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dtLoader$G3dtKeyframedModelLoader -> com.badlogic.gdx.graphics.a.b.a.g:
    342:342:com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> a
    339:339:com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> b
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dtLoader$G3dtStillModelLoader -> com.badlogic.gdx.graphics.a.b.a.h:
    335:335:com.badlogic.gdx.graphics.g3d.model.still.StillModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> a
    331:331:com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> b
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader -> com.badlogic.gdx.graphics.a.b.a.a.a:
    219:219:com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk readChunks(java.io.InputStream) -> a
    223:225:com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk loadChunks$4cce7835(java.io.InputStream) -> b
    229:240:com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk loadChunk(com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.CountingDataInputStream,byte[]) -> a
    244:256:byte[] readStream(java.io.InputStream,int) -> a
    263:264:void printChunks(com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk) -> a
    267:324:void printChunks(com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk,int) -> a
    327:330:java.lang.String rep(java.lang.String,int) -> a
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk -> com.badlogic.gdx.graphics.a.b.a.a.b:
    int id -> a
    com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk parent -> b
    com.badlogic.gdx.utils.Array children -> c
    java.io.ByteArrayInputStream payload -> d
    byte[] payloadBytes -> e
    int offset -> f
    com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.CountingDataInputStream in -> g
    51:51:int getId() -> a
    55:55:com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk getParent() -> j
    59:59:com.badlogic.gdx.utils.Array getChildren() -> b
    64:66:int readByte() -> c
    72:74:short readShort() -> k
    80:82:int readInt() -> d
    88:90:long readLong() -> l
    96:98:float readFloat() -> e
    104:106:double readDouble() -> m
    112:119:byte[] readBytes() -> n
    125:132:short[] readShorts() -> f
    138:145:int[] readInts() -> g
    151:158:long[] readLongs() -> o
    164:171:float[] readFloats() -> h
    177:184:double[] readDoubles() -> p
    190:195:java.lang.String readString() -> i
    200:204:com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk getChild(int) -> a
    208:214:com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk[] getChildren(int) -> b
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter -> com.badlogic.gdx.graphics.a.b.a.a.c:
    com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter$Chunk root -> a
    com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter$Chunk currChunk -> b
    57:60:void newChunk(int) -> a
    63:64:void endChunk() -> a
    68:72:void writeByte(int) -> b
    76:80:void writeShort(short) -> a
    84:88:void writeInt(int) -> c
    92:96:void writeLong(long) -> a
    100:104:void writeFloat(float) -> a
    108:112:void writeDouble(double) -> a
    116:121:void writeString(java.lang.String) -> a
    124:125:void writeToStream(java.io.OutputStream) -> a
    129:141:void writeToStream(com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter$Chunk,java.io.DataOutputStream) -> a
    145:151:void writeBytes(byte[]) -> a
    155:161:void writeShorts(short[]) -> a
    165:171:void writeInts(int[]) -> a
    175:181:void writeLongs(long[]) -> a
    185:191:void writeFloats(float[]) -> a
    195:201:void writeDoubles(double[]) -> a
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter$Chunk -> com.badlogic.gdx.graphics.a.b.a.a.d:
    int id -> a
    com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter$Chunk parent -> b
    com.badlogic.gdx.utils.Array children -> c
    java.io.ByteArrayOutputStream payload -> d
    java.io.DataOutputStream out -> e
    com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter this$0 -> f
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.CountingDataInputStream -> com.badlogic.gdx.graphics.a.b.a.a.e:
    int readBytes -> a
    java.io.DataInputStream in -> b
    33:33:int getReadBytes() -> a
    38:40:void readFully(byte[]) -> readFully
    44:46:void readFully(byte[],int,int) -> readFully
    50:52:int skipBytes(int) -> skipBytes
    57:58:boolean readBoolean() -> readBoolean
    63:64:byte readByte() -> readByte
    69:70:int readUnsignedByte() -> readUnsignedByte
    75:76:short readShort() -> readShort
    81:82:int readUnsignedShort() -> readUnsignedShort
    87:88:char readChar() -> readChar
    93:94:int readInt() -> readInt
    99:100:long readLong() -> readLong
    105:106:float readFloat() -> readFloat
    111:112:double readDouble() -> readDouble
    117:117:java.lang.String readLine() -> readLine
    122:122:java.lang.String readUTF() -> readUTF
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.G3dExporter -> com.badlogic.gdx.graphics.a.b.a.a.f:
    40:110:void export(com.badlogic.gdx.graphics.g3d.model.still.StillModel,com.badlogic.gdx.files.FileHandle) -> a
    113:206:void export(com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel,com.badlogic.gdx.files.FileHandle) -> a
    209:345:void export(com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel,com.badlogic.gdx.files.FileHandle) -> a
    348:364:void writeSkeletonJoint(com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter,com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonJoint) -> a
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Frame -> com.badlogic.gdx.graphics.a.b.b.a:
    float[] vertices -> a
    int[] normalIndices -> b
    java.lang.String name -> c
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header -> com.badlogic.gdx.graphics.a.b.b.b:
    int ident -> a
    int version -> b
    int skinWidth -> c
    int skinHeight -> d
    int frameSize -> e
    int numSkins -> f
    int numVertices -> g
    int numTexCoords -> h
    int numTriangles -> i
    int numGLCommands -> j
    int numFrames -> k
    int offsetSkin -> l
    int offsetTexCoords -> m
    int offsetTriangles -> n
    int offsetFrames -> o
    int offsetGLCommands -> p
    int offsetEnd -> q
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Loader -> com.badlogic.gdx.graphics.a.b.b.c:
    byte[] charBuffer -> a
    43:47:com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> a
    51:58:com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel load(com.badlogic.gdx.files.FileHandle,float) -> a
    65:75:com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel load(java.io.InputStream,float) -> a
    81:220:com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel buildModel(com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header,com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Triangle[],float[],com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Frame[],float) -> a
    224:236:float[] buildTexCoords(com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header,com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Triangle[],float[]) -> a
    240:249:short[] buildIndices(com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Triangle[]) -> a
    253:263:com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Frame[] loadFrames(com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header,byte[]) -> a
    269:300:com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Frame loadFrame(com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header,com.badlogic.gdx.utils.LittleEndianInputStream) -> a
    304:321:com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Triangle[] loadTriangles(com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header,byte[]) -> b
    325:338:float[] loadTexCoords(com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header,byte[]) -> c
    342:365:com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header loadHeader(byte[]) -> a
    369:378:byte[] loadBytes(java.io.InputStream) -> a
    41:41:com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> b
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Loader$MD2LoaderHints -> com.badlogic.gdx.graphics.a.b.b.d:
    float frameDuration -> b
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Loader$VertexIndices -> com.badlogic.gdx.graphics.a.b.b.e:
    short vIdx -> a
    short tIdx -> b
    short nIdx -> c
    com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Loader this$0 -> d
    390:394:int hashCode() -> hashCode
    399:405:boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Normals -> com.badlogic.gdx.graphics.a.b.b.f:
    float[][] normals -> a
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Triangle -> com.badlogic.gdx.graphics.a.b.b.g:
    short[] vertices -> a
    short[] texCoords -> b
com.badlogic.gdx.graphics.g3d.loaders.wavefront.MtlLoader -> com.badlogic.gdx.graphics.a.b.c.a:
    java.util.ArrayList materials -> a
    com.badlogic.gdx.assets.AssetManager assetManager -> b
    com.badlogic.gdx.graphics.Texture emptyTexture -> c
    312:384:void load(java.lang.String,com.badlogic.gdx.files.FileHandle) -> a
    388:392:com.badlogic.gdx.graphics.g3d.materials.Material getMaterial(java.lang.String) -> a
com.badlogic.gdx.graphics.g3d.loaders.wavefront.ObjLoader -> com.badlogic.gdx.graphics.a.b.c.b:
    com.badlogic.gdx.utils.FloatArray verts -> a
    com.badlogic.gdx.utils.FloatArray norms -> b
    com.badlogic.gdx.utils.FloatArray uvs -> c
    java.util.ArrayList groups -> d
    66:66:com.badlogic.gdx.graphics.g3d.model.still.StillModel loadObj(com.badlogic.gdx.files.FileHandle) -> a
    74:74:com.badlogic.gdx.graphics.g3d.model.still.StillModel loadObj(com.badlogic.gdx.files.FileHandle,boolean) -> a
    86:245:com.badlogic.gdx.graphics.g3d.model.still.StillModel loadObj(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,boolean) -> a
    251:256:com.badlogic.gdx.graphics.g3d.loaders.wavefront.ObjLoader$Group setActiveGroup(java.lang.String) -> a
    260:265:int getIndex(java.lang.String,int) -> a
    288:288:com.badlogic.gdx.graphics.g3d.model.still.StillModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> a
    49:49:com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> b
com.badlogic.gdx.graphics.g3d.loaders.wavefront.ObjLoader$Group -> com.badlogic.gdx.graphics.a.b.c.c:
    java.lang.String name -> a
    java.lang.String materialName -> b
    java.util.ArrayList faces -> c
    int numFaces -> d
    boolean hasNorms -> e
    boolean hasUVs -> f
    com.badlogic.gdx.graphics.g3d.materials.Material mat -> g
    com.badlogic.gdx.graphics.g3d.loaders.wavefront.ObjLoader this$0 -> h
com.badlogic.gdx.graphics.g3d.materials.BlendingAttribute -> com.badlogic.gdx.graphics.a.c.a:
    java.lang.String translucent -> a
    int blendSrcFunc -> b
    int blendDstFunc -> c
    com.badlogic.gdx.utils.Pool pool -> d
    49:50:void bind() -> a
    54:55:void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    59:59:com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute copy() -> b
    64:68:void set(com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute) -> a
    79:81:com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute pooledCopy() -> c
    86:87:void free() -> d
com.badlogic.gdx.graphics.g3d.materials.BlendingAttribute$1 -> com.badlogic.gdx.graphics.a.c.b:
    73:73:com.badlogic.gdx.graphics.g3d.materials.BlendingAttribute newObject() -> a
    70:70:java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.materials.ColorAttribute -> com.badlogic.gdx.graphics.a.c.c:
    java.lang.String diffuse -> a
    java.lang.String specular -> b
    java.lang.String emissive -> c
    java.lang.String rim -> d
    java.lang.String fog -> e
    com.badlogic.gdx.graphics.Color color -> f
    com.badlogic.gdx.utils.Pool pool -> i
    50:55:void bind() -> a
    59:60:void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    64:64:com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute copy() -> b
    69:76:void set(com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute) -> a
    87:89:com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute pooledCopy() -> c
    94:95:void free() -> d
com.badlogic.gdx.graphics.g3d.materials.ColorAttribute$1 -> com.badlogic.gdx.graphics.a.c.d:
    81:81:com.badlogic.gdx.graphics.g3d.materials.ColorAttribute newObject() -> a
    78:78:java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.materials.Material -> com.badlogic.gdx.graphics.a.c.e:
    java.lang.String name -> a
    com.badlogic.gdx.utils.Array attributes -> e
    boolean needBlending -> b
    boolean hasTexture -> c
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> d
    52:60:void checkAttributes() -> d
    63:66:void bind() -> a
    69:72:void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    75:75:java.lang.String getName() -> b
    79:86:void addAttribute(com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute[]) -> a
    89:92:void removeAttribute(com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute[]) -> b
    95:97:void clearAttributes() -> e
    100:102:com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute getAttribute(int) -> a
    106:106:int getNumberOfAttributes() -> f
    128:134:com.badlogic.gdx.graphics.g3d.materials.Material copy() -> c
    139:143:int hashCode() -> hashCode
    148:159:boolean equals(java.lang.Object) -> equals
    163:182:boolean shaderEquals(com.badlogic.gdx.graphics.g3d.materials.Material) -> a
    186:194:void setPooled(com.badlogic.gdx.graphics.g3d.materials.Material) -> b
    197:197:boolean isNeedBlending() -> g
    201:201:boolean hasTexture() -> h
    205:205:com.badlogic.gdx.graphics.glutils.ShaderProgram getShader() -> i
    209:210:void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> b
    213:214:void resetShader() -> j
    218:218:java.util.Iterator iterator() -> iterator
com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute -> com.badlogic.gdx.graphics.a.c.f:
    java.lang.String FLAG -> a
    java.lang.String name -> g
    boolean isPooled -> h
    void bind() -> a
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute copy() -> b
    com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute pooledCopy() -> c
    void free() -> d
    void set(com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute) -> a
    48:48:java.lang.String getShaderFlag() -> e
com.badlogic.gdx.graphics.g3d.materials.TextureAttribute -> com.badlogic.gdx.graphics.a.c.g:
    int MAX_TEXTURE_UNITS -> a
    java.lang.String diffuseTexture -> b
    java.lang.String lightmapTexture -> c
    java.lang.String specularTexture -> d
    com.badlogic.gdx.graphics.Texture texture -> e
    int unit -> f
    int minFilter -> i
    int magFilter -> j
    int uWrap -> k
    int vWrap -> l
    com.badlogic.gdx.utils.Pool pool -> m
    66:71:void bind() -> a
    75:81:void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    85:85:com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute copy() -> b
    90:98:void set(com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute) -> a
    102:105:boolean texturePortionEquals(com.badlogic.gdx.graphics.g3d.materials.TextureAttribute) -> a
    119:121:com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute pooledCopy() -> c
    126:127:void free() -> d
com.badlogic.gdx.graphics.g3d.materials.TextureAttribute$1 -> com.badlogic.gdx.graphics.a.c.h:
    113:113:com.badlogic.gdx.graphics.g3d.materials.TextureAttribute newObject() -> a
    110:110:java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.model.AnimatedModel -> com.badlogic.gdx.graphics.a.d.a:
    void setAnimation$44bc7153(java.lang.String) -> a
    com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String) -> b
    com.badlogic.gdx.graphics.g3d.model.Animation[] getAnimations() -> a
com.badlogic.gdx.graphics.g3d.model.Animation -> com.badlogic.gdx.graphics.a.d.b:
    java.lang.String name -> a
    float totalDuration -> b
com.badlogic.gdx.graphics.g3d.model.Model -> com.badlogic.gdx.graphics.a.d.c:
    void render() -> b
    void render(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    com.badlogic.gdx.graphics.g3d.model.Model getSubModel(java.lang.String[]) -> a
    com.badlogic.gdx.graphics.g3d.model.SubMesh getSubMesh(java.lang.String) -> c
    com.badlogic.gdx.graphics.g3d.model.SubMesh[] getSubMeshes() -> c
    void getBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> a
    void setMaterials(com.badlogic.gdx.graphics.g3d.materials.Material[]) -> a
    void setMaterial(com.badlogic.gdx.graphics.g3d.materials.Material) -> a
    void dispose() -> dispose
com.badlogic.gdx.graphics.g3d.model.SubMesh -> com.badlogic.gdx.graphics.a.d.d:
    java.lang.String name -> a
    com.badlogic.gdx.graphics.g3d.materials.Material material -> b
    int primitiveType -> c
    com.badlogic.gdx.graphics.Mesh mesh -> d
    void getBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> a
    47:47:com.badlogic.gdx.graphics.Mesh getMesh() -> a
    51:52:void setMesh(com.badlogic.gdx.graphics.Mesh) -> a
com.badlogic.gdx.graphics.g3d.model.keyframe.Keyframe -> com.badlogic.gdx.graphics.a.d.a.a:
    float timeStamp -> a
    float[] vertices -> b
com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedAnimation -> com.badlogic.gdx.graphics.a.d.a.b:
    float frameDuration -> c
    com.badlogic.gdx.graphics.g3d.model.keyframe.Keyframe[] keyframes -> d
com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel -> com.badlogic.gdx.graphics.a.d.a.c:
    com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedSubMesh[] subMeshes -> a
    com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedAnimation[] animations -> b
    com.badlogic.gdx.math.collision.BoundingBox tmpBox -> c
    46:65:void checkValidity() -> e
    69:77:void render() -> b
    81:89:void render(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    93:99:void setMaterials(com.badlogic.gdx.graphics.g3d.materials.Material[]) -> a
    103:107:void setMaterial(com.badlogic.gdx.graphics.g3d.materials.Material) -> a
    111:115:com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedSubMesh getSubMesh(java.lang.String) -> d
    120:120:com.badlogic.gdx.graphics.g3d.model.SubMesh[] getSubMeshes() -> c
    125:165:void setAnimation$44bc7153(java.lang.String) -> a
    169:169:com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedAnimation getAnimation(java.lang.String) -> e
    174:174:com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedAnimation[] getAnimations() -> d
    180:180:com.badlogic.gdx.graphics.g3d.model.Model getSubModel(java.lang.String[]) -> a
    187:192:void getBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> a
    196:199:void dispose() -> dispose
    29:29:com.badlogic.gdx.graphics.g3d.model.Animation[] getAnimations() -> a
    29:29:com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String) -> b
    29:29:com.badlogic.gdx.graphics.g3d.model.SubMesh getSubMesh(java.lang.String) -> c
com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedSubMesh -> com.badlogic.gdx.graphics.a.d.a.d:
    float[] blendedVertices -> e
    int animatedComponents -> f
    com.badlogic.gdx.utils.ObjectMap animations -> g
    41:42:void getBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> a
com.badlogic.gdx.graphics.g3d.model.skeleton.Skeleton -> com.badlogic.gdx.graphics.a.d.b.a:
    com.badlogic.gdx.utils.Array hierarchy -> a
    com.badlogic.gdx.utils.Array jointNames -> b
    java.util.Map namesToIndices -> c
    com.badlogic.gdx.utils.Array bindPoseJoints -> d
    com.badlogic.gdx.utils.Array animPoseJoints -> e
    com.badlogic.gdx.utils.Array offsetMatrices -> f
    com.badlogic.gdx.utils.Array sceneMatrices -> g
    com.badlogic.gdx.utils.Array combinedMatrices -> h
    com.badlogic.gdx.utils.ObjectMap animations -> i
    com.badlogic.gdx.math.Matrix4 IDENTITY -> j
    com.badlogic.gdx.math.Matrix4 rotMatrix -> k
    53:66:void buildFromHierarchy() -> a
    69:92:void recursiveFill(com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonJoint) -> a
    95:98:void calculateOffsetMatrices() -> c
    101:116:void calculateMatrices(com.badlogic.gdx.utils.Array) -> a
    119:151:void setAnimation$505d0a5f(java.lang.String) -> a
    154:155:void setBindPose() -> b
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonAnimation -> com.badlogic.gdx.graphics.a.d.b.b:
    com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonKeyframe[][] perJointkeyFrames -> c
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonJoint -> com.badlogic.gdx.graphics.a.d.b.c:
    java.lang.String name -> a
    int index -> b
    int parentIndex -> c
    com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonJoint parent -> d
    com.badlogic.gdx.utils.Array children -> e
    com.badlogic.gdx.math.Vector3 position -> f
    com.badlogic.gdx.math.Quaternion rotation -> g
    com.badlogic.gdx.math.Vector3 scale -> h
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonKeyframe -> com.badlogic.gdx.graphics.a.d.b.d:
    float timeStamp -> a
    int parentIndex -> b
    com.badlogic.gdx.math.Vector3 position -> c
    com.badlogic.gdx.math.Vector3 scale -> d
    com.badlogic.gdx.math.Quaternion rotation -> e
    30:30:java.lang.String toString() -> toString
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel -> com.badlogic.gdx.graphics.a.d.b.e:
    com.badlogic.gdx.graphics.g3d.model.skeleton.Skeleton skeleton -> a
    com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonSubMesh[] subMeshes -> b
    com.badlogic.gdx.math.Vector3 v -> c
    com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonAnimation[] animations -> d
    com.badlogic.gdx.math.collision.BoundingBox tmpBox -> e
    45:49:void setBindPose() -> d
    53:57:void setAnimation$44bc7153(java.lang.String) -> a
    62:117:void skin(com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonSubMesh,com.badlogic.gdx.utils.Array) -> a
    121:131:void render() -> b
    135:145:void render(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    149:155:void setMaterials(com.badlogic.gdx.graphics.g3d.materials.Material[]) -> a
    159:163:void setMaterial(com.badlogic.gdx.graphics.g3d.materials.Material) -> a
    167:171:com.badlogic.gdx.graphics.g3d.model.SubMesh getSubMesh(java.lang.String) -> c
    176:176:com.badlogic.gdx.graphics.g3d.model.SubMesh[] getSubMeshes() -> c
    181:181:com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonAnimation getAnimation(java.lang.String) -> d
    189:196:com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonAnimation[] getAnimations() -> e
    202:202:com.badlogic.gdx.graphics.g3d.model.Model getSubModel(java.lang.String[]) -> a
    209:214:void getBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> a
    218:221:void dispose() -> dispose
    30:30:com.badlogic.gdx.graphics.g3d.model.Animation[] getAnimations() -> a
    30:30:com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String) -> b
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModelGpuSkinned -> com.badlogic.gdx.graphics.a.d.b.f:
    java.lang.String BoneIndexAttribue -> e
    java.lang.String BoneWeightAttribue -> f
    38:43:com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel CreateFromSkeletonModel(com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel) -> a
    47:50:void setupGpuSkin() -> d
    53:115:void setupGpuSkin(com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonSubMesh) -> a
    119:120:void setAnimation$44bc7153(java.lang.String) -> a
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonSubMesh -> com.badlogic.gdx.graphics.a.d.b.g:
    short[] indices -> e
    float[] vertices -> f
    float[] skinnedVertices -> g
    int[][] boneAssignments -> h
    float[][] boneWeights -> i
    38:39:void getBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> a
    42:43:void setVertices(float[]) -> a
    46:47:void setIndices(short[]) -> a
com.badlogic.gdx.graphics.g3d.model.still.StillModel -> com.badlogic.gdx.graphics.a.d.c.a:
    com.badlogic.gdx.graphics.g3d.model.still.StillSubMesh[] subMeshes -> a
    com.badlogic.gdx.math.collision.BoundingBox tmpBox -> b
    39:49:void render() -> b
    53:63:void render(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    67:72:com.badlogic.gdx.graphics.g3d.model.Model getSubModel(java.lang.String[]) -> a
    77:80:com.badlogic.gdx.graphics.g3d.model.still.StillSubMesh getSubMesh(java.lang.String) -> a
    85:85:com.badlogic.gdx.graphics.g3d.model.SubMesh[] getSubMeshes() -> c
    90:96:void setMaterials(com.badlogic.gdx.graphics.g3d.materials.Material[]) -> a
    100:104:void setMaterial(com.badlogic.gdx.graphics.g3d.materials.Material) -> a
    110:115:void getBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> a
    119:122:void dispose() -> dispose
    27:27:com.badlogic.gdx.graphics.g3d.model.SubMesh getSubMesh(java.lang.String) -> c
com.badlogic.gdx.graphics.g3d.model.still.StillSubMesh -> com.badlogic.gdx.graphics.a.d.c.b:
    36:37:void getBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> a
com.badlogic.gdx.graphics.glutils.ETC1 -> com.badlogic.gdx.graphics.glutils.ETC1:
    int PKM_HEADER_SIZE -> a
    int ETC1_RGB8_OES -> b
    148:150:int getPixelSize(com.badlogic.gdx.graphics.Pixmap$Format) -> a
    157:160:com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImage(com.badlogic.gdx.graphics.Pixmap) -> a
    168:171:com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImagePKM(com.badlogic.gdx.graphics.Pixmap) -> b
    180:197:com.badlogic.gdx.graphics.Pixmap decodeImage(com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data,com.badlogic.gdx.graphics.Pixmap$Format) -> a
    int getCompressedDataSize(int,int) -> getCompressedDataSize
    void formatHeader(java.nio.ByteBuffer,int,int,int) -> formatHeader
    int getWidthPKM(java.nio.ByteBuffer,int) -> getWidthPKM
    int getHeightPKM(java.nio.ByteBuffer,int) -> getHeightPKM
    boolean isValidPKM(java.nio.ByteBuffer,int) -> isValidPKM
    void decodeImage(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int,int) -> decodeImage
    java.nio.ByteBuffer encodeImage(java.nio.ByteBuffer,int,int,int,int) -> encodeImage
    java.nio.ByteBuffer encodeImagePKM(java.nio.ByteBuffer,int,int,int,int) -> encodeImagePKM
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data -> com.badlogic.gdx.graphics.glutils.a:
    int width -> a
    int height -> b
    java.nio.ByteBuffer compressedData -> c
    int dataOffset -> d
    92:95:void checkNPOT() -> b
    99:99:boolean hasPKMHeader() -> a
    105:129:void write(com.badlogic.gdx.files.FileHandle) -> a
    133:134:void dispose() -> dispose
    137:142:java.lang.String toString() -> toString
com.badlogic.gdx.graphics.glutils.ETC1TextureData -> com.badlogic.gdx.graphics.glutils.b:
    com.badlogic.gdx.files.FileHandle file -> a
    com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data data -> b
    boolean useMipMaps -> c
    int width -> d
    int height -> e
    boolean isPrepared -> f
    53:53:com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> a
    58:58:boolean isPrepared() -> b
    63:71:void prepare() -> c
    75:92:void consumeCompressedData() -> f
    96:96:com.badlogic.gdx.graphics.Pixmap consumePixmap() -> d
    101:101:boolean disposePixmap() -> e
    106:106:int getWidth() -> g
    111:111:int getHeight() -> h
    116:116:com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> i
    121:121:boolean useMipMaps() -> j
    126:126:boolean isManaged() -> k
com.badlogic.gdx.graphics.glutils.FileTextureData -> com.badlogic.gdx.graphics.glutils.c:
    boolean copyToPOT -> a
    com.badlogic.gdx.files.FileHandle file -> b
    int width -> c
    int height -> d
    com.badlogic.gdx.graphics.Pixmap$Format format -> e
    com.badlogic.gdx.graphics.Pixmap pixmap -> f
    boolean useMipMaps -> g
    boolean isPrepared -> h
    54:54:boolean isPrepared() -> b
    59:70:void prepare() -> c
    73:85:com.badlogic.gdx.graphics.Pixmap ensurePot(com.badlogic.gdx.graphics.Pixmap) -> a
    90:94:com.badlogic.gdx.graphics.Pixmap consumePixmap() -> d
    99:99:boolean disposePixmap() -> e
    104:104:int getWidth() -> g
    109:109:int getHeight() -> h
    114:114:com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> i
    119:119:boolean useMipMaps() -> j
    124:124:boolean isManaged() -> k
    128:128:com.badlogic.gdx.files.FileHandle getFileHandle() -> l
    133:133:com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> a
    138:138:void consumeCompressedData() -> f
com.badlogic.gdx.graphics.glutils.FloatFrameBuffer -> com.badlogic.gdx.graphics.glutils.d:
    46:55:void setupTexture() -> a
com.badlogic.gdx.graphics.glutils.FloatTextureData -> com.badlogic.gdx.graphics.glutils.e:
    int width -> a
    int height -> b
    boolean isPrepared -> c
    java.nio.FloatBuffer buffer -> d
    51:51:com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> a
    56:56:boolean isPrepared() -> b
    61:64:void prepare() -> c
    68:88:void consumeCompressedData() -> f
    92:92:com.badlogic.gdx.graphics.Pixmap consumePixmap() -> d
    97:97:boolean disposePixmap() -> e
    102:102:int getWidth() -> g
    107:107:int getHeight() -> h
    112:112:com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> i
    117:117:boolean useMipMaps() -> j
    122:122:boolean isManaged() -> k
com.badlogic.gdx.graphics.glutils.FrameBuffer -> com.badlogic.gdx.graphics.glutils.f:
    java.util.Map buffers -> f
    com.badlogic.gdx.graphics.Texture colorTexture -> a
    int defaultFramebufferHandle -> g
    boolean defaultFramebufferHandleInitialized -> h
    int framebufferHandle -> i
    int depthbufferHandle -> j
    int width -> b
    int height -> c
    boolean hasDepth -> d
    com.badlogic.gdx.graphics.Pixmap$Format format -> e
    106:109:void setupTexture() -> a
    112:183:void build() -> c
    187:204:void dispose() -> dispose
    208:210:void begin() -> d
    214:216:void end() -> e
    219:223:void addManagedFrameBuffer(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.glutils.FrameBuffer) -> a
    228:235:void invalidateAllFrameBuffers(com.badlogic.gdx.Application) -> a
    238:239:void clearAllFrameBuffers(com.badlogic.gdx.Application) -> b
    242:250:java.lang.String getManagedStatus() -> b
    255:255:com.badlogic.gdx.graphics.Texture getColorBufferTexture() -> f
    260:260:int getHeight() -> g
    265:265:int getWidth() -> h
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer -> com.badlogic.gdx.graphics.glutils.g:
    void begin(com.badlogic.gdx.math.Matrix4,int) -> a
    void color(float,float,float,float) -> a
    void texCoord(float,float) -> a
    void normal(float,float,float) -> a
    void vertex(float,float,float) -> b
    void end() -> a
    int getNumVertices() -> b
    int getMaxVertices() -> c
    void dispose() -> d
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer10 -> com.badlogic.gdx.graphics.glutils.h:
    int primitiveType -> a
    float[] positions -> b
    java.nio.FloatBuffer positionsBuffer -> c
    float[] colors -> d
    java.nio.FloatBuffer colorsBuffer -> e
    float[] normals -> f
    java.nio.FloatBuffer normalsBuffer -> g
    float[] texCoords -> h
    java.nio.FloatBuffer texCoordsBuffer -> i
    int idxPos -> j
    int idxCols -> k
    int idxNors -> l
    int idxTexCoords -> m
    boolean hasCols -> n
    boolean hasNors -> o
    boolean hasTexCoords -> p
    int maxVertices -> q
    int numVertices -> r
    94:100:void begin(com.badlogic.gdx.math.Matrix4,int) -> a
    107:116:void begin(int) -> a
    124:129:void color(float,float,float,float) -> a
    136:140:void normal(float,float,float) -> a
    146:149:void texCoord(float,float) -> a
    158:166:void vertex(float,float,float) -> b
    169:169:int getNumVertices() -> b
    173:173:int getMaxVertices() -> c
    178:213:void end() -> a
    216:217:void vertex(com.badlogic.gdx.math.Vector3) -> a
    221:221:void dispose() -> d
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20 -> com.badlogic.gdx.graphics.glutils.i:
    int primitiveType -> a
    int vertexIdx -> b
    int numSetTexCoords -> c
    int maxVertices -> d
    int numVertices -> e
    com.badlogic.gdx.graphics.Mesh mesh -> f
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> g
    boolean ownsShader -> h
    int numTexCoords -> i
    int vertexSize -> j
    int normalOffset -> k
    int colorOffset -> l
    int texCoordOffset -> m
    com.badlogic.gdx.math.Matrix4 projModelView -> n
    float[] vertices -> o
    76:86:com.badlogic.gdx.graphics.VertexAttribute[] buildVertexAttributes(boolean,boolean,int) -> a
    90:93:void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    96:98:void begin(com.badlogic.gdx.math.Matrix4,int) -> a
    101:102:void color(float,float,float,float) -> a
    105:109:void texCoord(float,float) -> a
    112:116:void normal(float,float,float) -> a
    119:127:void vertex(float,float,float) -> b
    130:142:void end() -> a
    145:145:int getNumVertices() -> b
    150:150:int getMaxVertices() -> c
    154:156:void dispose() -> d
    159:183:java.lang.String createVertexShader(boolean,boolean,int) -> b
    187:209:java.lang.String createFragmentShader$5fca6e8e(boolean,int) -> a
    214:216:com.badlogic.gdx.graphics.glutils.ShaderProgram createDefaultShader(boolean,boolean,int) -> c
com.badlogic.gdx.graphics.glutils.IndexArray -> com.badlogic.gdx.graphics.glutils.j:
    java.nio.IntBuffer tmpHandle -> a
    java.nio.ShortBuffer buffer -> b
    java.nio.ByteBuffer byteBuffer -> c
    43:43:int getNumIndices() -> a
    48:48:int getNumMaxIndices() -> b
    64:69:void setIndices(short[],int,int) -> a
    78:78:java.nio.ShortBuffer getBuffer() -> c
    83:83:void bind() -> d
    87:87:void unbind() -> e
    91:91:void invalidate() -> f
    95:96:void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.IndexBufferObject -> com.badlogic.gdx.graphics.glutils.k:
    java.nio.IntBuffer tmpHandle -> a
    java.nio.ShortBuffer buffer -> b
    java.nio.ByteBuffer byteBuffer -> c
    int bufferHandle -> d
    boolean isDirect -> e
    boolean isDirty -> f
    boolean isBound -> g
    int usage -> h
    96:103:int createBufferObject() -> g
    109:109:int getNumIndices() -> a
    114:114:int getNumMaxIndices() -> b
    130:147:void setIndices(short[],int,int) -> a
    156:157:java.nio.ShortBuffer getBuffer() -> c
    162:182:void bind() -> d
    186:192:void unbind() -> e
    196:198:void invalidate() -> f
    202:220:void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData -> com.badlogic.gdx.graphics.glutils.l:
    java.nio.IntBuffer tmpHandle -> a
    java.nio.ShortBuffer buffer -> b
    java.nio.ByteBuffer byteBuffer -> c
    int bufferHandle -> d
    boolean isDirect -> e
    boolean isDirty -> f
    boolean isBound -> g
    int usage -> h
    96:110:int createBufferObject() -> g
    115:115:int getNumIndices() -> a
    120:120:int getNumMaxIndices() -> b
    136:158:void setIndices(short[],int,int) -> a
    167:168:java.nio.ShortBuffer getBuffer() -> c
    173:197:void bind() -> d
    201:207:void unbind() -> e
    211:213:void invalidate() -> f
    217:234:void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.IndexData -> com.badlogic.gdx.graphics.glutils.m:
    int getNumIndices() -> a
    int getNumMaxIndices() -> b
    void setIndices(short[],int,int) -> a
    java.nio.ShortBuffer getBuffer() -> c
    void bind() -> d
    void unbind() -> e
    void invalidate() -> f
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.MipMapGenerator -> com.badlogic.gdx.graphics.glutils.n:
    boolean useHWMipMap -> a
    33:34:void setUseHardwareMipMap(boolean) -> a
    41:54:void generateMipMap(com.badlogic.gdx.graphics.Pixmap,int,int,boolean) -> a
    57:61:void generateMipMapGLES20(com.badlogic.gdx.graphics.Pixmap,boolean) -> a
    64:81:void generateMipMapDesktop(com.badlogic.gdx.graphics.Pixmap,int,int,boolean) -> b
    84:107:void generateMipMapCPU(com.badlogic.gdx.graphics.Pixmap,int,int,boolean) -> c
com.badlogic.gdx.graphics.glutils.PixmapTextureData -> com.badlogic.gdx.graphics.glutils.o:
    com.badlogic.gdx.graphics.Pixmap pixmap -> b
    com.badlogic.gdx.graphics.Pixmap$Format format -> c
    boolean useMipMaps -> d
    boolean disposePixmap -> e
    39:39:boolean disposePixmap() -> e
    44:44:com.badlogic.gdx.graphics.Pixmap consumePixmap() -> d
    49:49:int getWidth() -> g
    54:54:int getHeight() -> h
    59:59:com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> i
    64:64:boolean useMipMaps() -> j
    69:69:boolean isManaged() -> k
    74:74:com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> a
    79:79:void consumeCompressedData() -> f
    84:84:boolean isPrepared() -> b
    89:89:void prepare() -> c
com.badlogic.gdx.graphics.glutils.ShaderProgram -> com.badlogic.gdx.graphics.glutils.p:
    java.lang.String POSITION_ATTRIBUTE -> a
    java.lang.String NORMAL_ATTRIBUTE -> b
    java.lang.String COLOR_ATTRIBUTE -> c
    java.lang.String TEXCOORD_ATTRIBUTE -> d
    java.lang.String TANGENT_ATTRIBUTE -> e
    java.lang.String BINORMAL_ATTRIBUTE -> f
    boolean pedantic -> g
    com.badlogic.gdx.utils.ObjectMap shaders -> k
    java.lang.String log -> l
    boolean isCompiled -> m
    com.badlogic.gdx.utils.ObjectIntMap uniforms -> n
    com.badlogic.gdx.utils.ObjectIntMap uniformTypes -> o
    com.badlogic.gdx.utils.ObjectIntMap uniformSizes -> p
    java.lang.String[] uniformNames -> q
    com.badlogic.gdx.utils.ObjectIntMap attributes -> r
    com.badlogic.gdx.utils.ObjectIntMap attributeTypes -> s
    com.badlogic.gdx.utils.ObjectIntMap attributeSizes -> t
    java.lang.String[] attributeNames -> u
    int program -> v
    int vertexShaderHandle -> w
    int fragmentShaderHandle -> x
    java.nio.FloatBuffer matrix -> y
    java.lang.String vertexShaderSource -> z
    java.lang.String fragmentShaderSource -> A
    boolean invalidated -> B
    java.nio.ByteBuffer buffer -> C
    java.nio.FloatBuffer floatBuffer -> D
    java.nio.IntBuffer intBuffer -> E
    int refCount -> F
    java.nio.IntBuffer intbuf -> h
    java.nio.IntBuffer params -> i
    java.nio.IntBuffer type -> j
    179:194:void compileShaders(java.lang.String,java.lang.String) -> a
    197:218:int loadShader(int,java.lang.String) -> a
    222:245:int linkProgram() -> f
    253:261:java.lang.String getLog() -> a
    267:267:boolean isCompiled() -> b
    271:279:int fetchAttributeLocation(java.lang.String) -> c
    283:292:int fetchUniformLocation(java.lang.String) -> d
    301:305:void setUniformi(java.lang.String,int) -> a
    308:311:void setUniformi(int,int) -> a
    320:324:void setUniformi(java.lang.String,int,int) -> a
    327:330:void setUniformi(int,int,int) -> a
    340:344:void setUniformi(java.lang.String,int,int,int) -> a
    347:350:void setUniformi(int,int,int,int) -> a
    361:365:void setUniformi(java.lang.String,int,int,int,int) -> a
    368:371:void setUniformi(int,int,int,int,int) -> a
    379:383:void setUniformf(java.lang.String,float) -> a
    386:389:void setUniformf(int,float) -> a
    398:402:void setUniformf(java.lang.String,float,float) -> a
    405:408:void setUniformf(int,float,float) -> a
    418:422:void setUniformf(java.lang.String,float,float,float) -> a
    425:428:void setUniformf(int,float,float,float) -> a
    439:443:void setUniformf(java.lang.String,float,float,float,float) -> a
    446:449:void setUniformf(int,float,float,float,float) -> a
    452:459:void setUniform1fv(java.lang.String,float[],int,int) -> a
    462:468:void setUniform1fv(int,float[],int,int) -> a
    471:478:void setUniform2fv(java.lang.String,float[],int,int) -> b
    481:487:void setUniform2fv(int,float[],int,int) -> b
    490:497:void setUniform3fv(java.lang.String,float[],int,int) -> c
    500:506:void setUniform3fv(int,float[],int,int) -> c
    509:516:void setUniform4fv(java.lang.String,float[],int,int) -> d
    519:525:void setUniform4fv(int,float[],int,int) -> d
    533:534:void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix4) -> a
    543:549:void setUniformMatrix$307b9b7a(java.lang.String,com.badlogic.gdx.math.Matrix4) -> b
    552:553:void setUniformMatrix(int,com.badlogic.gdx.math.Matrix4) -> a
    556:561:void setUniformMatrix$62f94c57(int,com.badlogic.gdx.math.Matrix4) -> b
    569:570:void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix3) -> a
    579:586:void setUniformMatrix$306d83f9(java.lang.String,com.badlogic.gdx.math.Matrix3) -> b
    589:590:void setUniformMatrix(int,com.badlogic.gdx.math.Matrix3) -> a
    593:599:void setUniformMatrix$630763d8(int,com.badlogic.gdx.math.Matrix3) -> b
    608:613:void setUniformMatrix4fv(java.lang.String,java.nio.FloatBuffer,int,boolean) -> a
    621:622:void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector2) -> a
    625:626:void setUniformf(int,com.badlogic.gdx.math.Vector2) -> a
    634:635:void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector3) -> a
    638:639:void setUniformf(int,com.badlogic.gdx.math.Vector3) -> a
    647:648:void setUniformf(java.lang.String,com.badlogic.gdx.graphics.Color) -> a
    651:652:void setUniformf(int,com.badlogic.gdx.graphics.Color) -> a
    665:670:void setVertexAttribute(java.lang.String,int,int,boolean,int,java.nio.Buffer) -> a
    673:676:void setVertexAttribute(int,int,int,boolean,int,java.nio.Buffer) -> a
    689:694:void setVertexAttribute(java.lang.String,int,int,boolean,int,int) -> a
    697:700:void setVertexAttribute(int,int,int,boolean,int,int) -> a
    705:708:void begin() -> c
    713:715:void end() -> d
    719:725:void dispose() -> dispose
    731:736:void disableVertexAttribute(java.lang.String) -> a
    739:742:void disableVertexAttribute(int) -> a
    748:753:void enableVertexAttribute(java.lang.String) -> b
    756:759:void enableVertexAttribute(int) -> b
    762:766:void checkManaged() -> g
    769:773:void addManagedShader(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    778:787:void invalidateAllShaderPrograms(com.badlogic.gdx.Application) -> a
    790:791:void clearAllShaderPrograms(com.badlogic.gdx.Application) -> b
    794:802:java.lang.String getManagedStatus() -> e
    813:816:void setAttributef(java.lang.String,float,float,float,float) -> b
    819:824:void ensureBufferCapacity(int) -> c
    830:847:void fetchUniforms() -> h
    850:867:void fetchAttributes() -> i
    872:872:boolean hasAttribute(java.lang.String) -> e
    878:882:int getAttributeType(java.lang.String) -> f
    888:892:int getAttributeLocation(java.lang.String) -> g
    898:902:int getAttributeSize(java.lang.String) -> h
    908:908:boolean hasUniform(java.lang.String) -> i
    914:918:int getUniformType(java.lang.String) -> j
    924:928:int getUniformLocation(java.lang.String) -> k
    934:938:int getUniformSize(java.lang.String) -> l
    943:943:java.lang.String[] getAttributes() -> j
    948:948:java.lang.String[] getUniforms() -> k
com.badlogic.gdx.graphics.glutils.ShapeRenderer -> com.badlogic.gdx.graphics.glutils.q:
    com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer renderer -> a
    boolean matrixDirty -> b
    com.badlogic.gdx.math.Matrix4 projView -> c
    com.badlogic.gdx.math.Matrix4 transform -> d
    com.badlogic.gdx.math.Matrix4 combined -> e
    com.badlogic.gdx.math.Matrix4 tmp -> f
    com.badlogic.gdx.graphics.Color color -> g
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType currType -> h
    123:124:void setColor(com.badlogic.gdx.graphics.Color) -> a
    132:133:void setColor(float,float,float,float) -> a
    138:140:void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> a
    143:145:void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> b
    149:151:void identity() -> c
    158:160:void translate(float,float,float) -> a
    168:170:void rotate(float,float,float,float) -> d
    177:179:void scale(float,float,float) -> b
    190:198:void begin(com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType) -> a
    205:210:void point$483d242b(float,float) -> a
    220:227:void line$7b59a84b(float,float,float,float) -> b
    235:242:void line(float,float,float,float) -> c
    245:293:void curve(float,float,float,float,float,float,float,float,int) -> a
    296:324:void triangle(float,float,float,float,float,float) -> a
    333:375:void rect(float,float,float,float) -> e
    389:431:void rect(float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color) -> a
    440:506:void box(float,float,float,float,float,float) -> b
    510:511:void circle(float,float,float) -> c
    514:563:void circle(float,float,float,int) -> a
    568:569:void cone(float,float,float,float,float) -> a
    572:629:void cone(float,float,float,float,float,int) -> a
    635:666:void polygon(float[]) -> a
    672:695:void polyline(float[]) -> b
    698:702:void checkDirty() -> d
    705:709:void checkFlush(int) -> a
    713:715:void end() -> a
    718:721:void flush() -> e
    725:725:com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType getCurrentType() -> f
    729:730:void dispose() -> b
com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType -> com.badlogic.gdx.graphics.glutils.r:
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Point -> a
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Line -> b
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Filled -> c
    int glType -> d
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType[] $VALUES -> e
    82:82:com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType[] values() -> values
    82:82:com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType valueOf(java.lang.String) -> valueOf
    94:94:int getGlType() -> a
com.badlogic.gdx.graphics.glutils.VertexArray -> com.badlogic.gdx.graphics.glutils.s:
    com.badlogic.gdx.graphics.VertexAttributes attributes -> a
    java.nio.FloatBuffer buffer -> b
    java.nio.ByteBuffer byteBuffer -> c
    boolean isBound -> d
    71:72:void dispose() -> dispose
    77:77:java.nio.FloatBuffer getBuffer() -> a
    83:83:int getNumVertices() -> b
    88:88:int getNumMaxVertices() -> c
    94:97:void setVertices$1cc109a0(float[],int) -> a
    101:146:void bind() -> d
    150:178:void unbind() -> e
    181:197:void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    203:210:void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> b
    214:214:com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> f
com.badlogic.gdx.graphics.glutils.VertexBufferObject -> com.badlogic.gdx.graphics.glutils.t:
    java.nio.IntBuffer tmpHandle -> a
    com.badlogic.gdx.graphics.VertexAttributes attributes -> b
    java.nio.FloatBuffer buffer -> c
    java.nio.ByteBuffer byteBuffer -> d
    int bufferHandle -> e
    boolean isStatic -> f
    int usage -> g
    boolean isDirty -> h
    boolean isBound -> i
    94:98:int createBufferObject() -> h
    104:104:com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> f
    110:110:int getNumVertices() -> b
    115:115:int getNumMaxVertices() -> c
    121:122:java.nio.FloatBuffer getBuffer() -> a
    128:143:void setVertices$1cc109a0(float[],int) -> a
    148:196:void bind() -> d
    202:225:void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    230:259:void unbind() -> e
    265:273:void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> b
    277:279:void invalidate() -> g
    284:302:void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData -> com.badlogic.gdx.graphics.glutils.u:
    java.nio.IntBuffer tmpHandle -> a
    com.badlogic.gdx.graphics.VertexAttributes attributes -> b
    java.nio.FloatBuffer buffer -> c
    java.nio.ByteBuffer byteBuffer -> d
    int bufferHandle -> e
    boolean isDirect -> f
    boolean isStatic -> g
    int usage -> h
    boolean isDirty -> i
    boolean isBound -> j
    95:106:int createBufferObject() -> g
    112:112:com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> f
    118:118:int getNumVertices() -> b
    123:123:int getNumMaxVertices() -> c
    129:130:java.nio.FloatBuffer getBuffer() -> a
    136:159:void setVertices$1cc109a0(float[],int) -> a
    164:214:void bind() -> d
    220:245:void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    250:279:void unbind() -> e
    285:293:void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> b
    297:299:void invalidate() -> h
    304:321:void dispose() -> dispose
    326:326:int getBufferHandle() -> i
com.badlogic.gdx.graphics.glutils.VertexData -> com.badlogic.gdx.graphics.glutils.v:
    int getNumVertices() -> b
    int getNumMaxVertices() -> c
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> f
    void setVertices$1cc109a0(float[],int) -> a
    java.nio.FloatBuffer getBuffer() -> a
    void bind() -> d
    void unbind() -> e
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> b
    void dispose() -> dispose
com.badlogic.gdx.input.GestureDetector -> com.badlogic.gdx.d.a:
    com.badlogic.gdx.input.GestureDetector$GestureListener listener -> a
    float tapSquareSize -> d
    long tapCountInterval -> e
    float longPressSeconds -> f
    long maxFlingDelay -> g
    boolean inTapSquare -> h
    int tapCount -> i
    long lastTapTime -> j
    float lastTapX -> k
    float lastTapY -> l
    int lastTapButton -> m
    int lastTapPointer -> n
    boolean longPressFired -> b
    boolean pinching -> o
    boolean panning -> p
    com.badlogic.gdx.input.GestureDetector$VelocityTracker tracker -> q
    float tapSquareCenterX -> r
    float tapSquareCenterY -> s
    long gestureStartTime -> t
    com.badlogic.gdx.math.Vector2 pointer1 -> c
    com.badlogic.gdx.math.Vector2 pointer2 -> u
    com.badlogic.gdx.math.Vector2 initialPointer1 -> v
    com.badlogic.gdx.math.Vector2 initialPointer2 -> w
    com.badlogic.gdx.utils.Timer$Task longPressTask -> x
    86:86:boolean touchDown(int,int,int,int) -> a
    90:121:boolean touchDown$4096cea7(float,float,int) -> a
    126:126:boolean touchDragged(int,int,int) -> a
    130:161:boolean touchDragged(float,float,int) -> b
    166:166:boolean touchUp(int,int,int,int) -> b
    170:211:boolean touchUp(float,float,int,int) -> a
    216:216:boolean isLongPressed() -> b
    222:223:boolean isLongPressed(float) -> a
    227:227:boolean isPanning() -> a
    231:234:void reset() -> c
    237:237:boolean isWithinTapSquare(float,float,float,float) -> a
    242:243:void invalidateTapSquare() -> d
    246:247:void setTapSquareSize(int) -> d
    251:252:void setTapCountInterval(float) -> b
    255:256:void setLongPressSeconds(float) -> c
    259:260:void setMaxFlingDelay(long) -> a
com.badlogic.gdx.input.GestureDetector$1 -> com.badlogic.gdx.d.b:
    com.badlogic.gdx.input.GestureDetector this$0 -> a
    57:58:void run() -> run
com.badlogic.gdx.input.GestureDetector$GestureAdapter -> com.badlogic.gdx.d.c:
    311:311:boolean touchDown$4096cea7() -> a
    316:316:boolean tap$4096cea7(float,float) -> a
    321:321:boolean longPress(float,float) -> b
    326:326:boolean fling$483d2f72(float,float) -> c
    331:331:boolean pan(float,float,float,float) -> a
    336:336:boolean zoom$2548a39() -> b
    341:341:boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> a
com.badlogic.gdx.input.GestureDetector$GestureListener -> com.badlogic.gdx.d.d:
    boolean touchDown$4096cea7() -> a
    boolean tap$4096cea7(float,float) -> a
    boolean longPress(float,float) -> b
    boolean fling$483d2f72(float,float) -> c
    boolean pan(float,float,float,float) -> a
    boolean zoom$2548a39() -> b
    boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> a
com.badlogic.gdx.input.GestureDetector$VelocityTracker -> com.badlogic.gdx.d.e:
    int sampleSize -> a
    float lastX -> b
    float lastY -> c
    float deltaX -> d
    float deltaY -> e
    long lastTime -> f
    int numSamples -> g
    float[] meanX -> h
    float[] meanY -> i
    long[] meanTime -> j
    356:367:void start(float,float,long) -> a
    370:382:void update(float,float,long) -> b
    385:388:float getVelocityX() -> a
    392:395:float getVelocityY() -> b
    399:404:float getAverage(float[],int) -> a
    408:414:long getAverage(long[],int) -> a
    418:424:float getSum(float[],int) -> b
com.badlogic.gdx.input.RemoteInput -> com.badlogic.gdx.d.f:
    int DEFAULT_PORT -> a
    java.net.ServerSocket serverSocket -> i
    float[] accel -> j
    float[] compass -> k
    boolean multiTouch -> l
    float remoteWidth -> m
    float remoteHeight -> n
    java.util.Set keys -> b
    int[] touchX -> c
    int[] touchY -> d
    boolean[] isTouched -> e
    boolean justTouched -> f
    com.badlogic.gdx.InputProcessor processor -> g
    int port -> o
    java.lang.String[] ips -> h
    180:252:void run() -> run
    258:258:float getAccelerometerX() -> getAccelerometerX
    263:263:float getAccelerometerY() -> getAccelerometerY
    268:268:float getAccelerometerZ() -> getAccelerometerZ
    273:273:int getX() -> getX
    278:278:int getX(int) -> getX
    283:283:int getY() -> getY
    288:288:int getY(int) -> getY
    293:293:boolean isTouched() -> isTouched
    298:298:boolean justTouched() -> justTouched
    303:303:boolean isTouched(int) -> isTouched
    308:311:boolean isButtonPressed(int) -> isButtonPressed
    316:316:boolean isKeyPressed(int) -> isKeyPressed
    321:322:void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getTextInput
    326:327:void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getPlaceholderTextInput
    331:331:void setOnscreenKeyboardVisible(boolean) -> setOnscreenKeyboardVisible
    336:336:void vibrate(int) -> vibrate
    341:341:void vibrate(long[],int) -> vibrate
    346:346:void cancelVibrate() -> cancelVibrate
    350:350:float getAzimuth() -> getAzimuth
    355:355:float getPitch() -> getPitch
    360:360:float getRoll() -> getRoll
    366:366:void setCatchBackKey(boolean) -> setCatchBackKey
    370:371:void setInputProcessor(com.badlogic.gdx.InputProcessor) -> setInputProcessor
    375:375:com.badlogic.gdx.InputProcessor getInputProcessor() -> getInputProcessor
    380:380:java.lang.String[] getIPs() -> a
    385:388:boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral) -> isPeripheralAvailable
    393:393:int getRotation() -> getRotation
    398:398:com.badlogic.gdx.Input$Orientation getNativeOrientation() -> getNativeOrientation
    404:404:void setCursorCatched(boolean) -> setCursorCatched
    408:408:boolean isCursorCatched() -> isCursorCatched
    414:414:int getDeltaX() -> getDeltaX
    419:419:int getDeltaX(int) -> getDeltaX
    424:424:int getDeltaY() -> getDeltaY
    429:429:int getDeltaY(int) -> getDeltaY
    434:434:void setCursorPosition(int,int) -> setCursorPosition
    440:440:void setCatchMenuKey(boolean) -> setCatchMenuKey
    445:445:long getCurrentEventTime() -> getCurrentEventTime
    452:452:void getRotationMatrix(float[]) -> getRotationMatrix
com.badlogic.gdx.input.RemoteInput$EventTrigger -> com.badlogic.gdx.d.g:
    com.badlogic.gdx.input.RemoteInput$TouchEvent touchEvent -> a
    com.badlogic.gdx.input.RemoteInput$KeyEvent keyEvent -> b
    com.badlogic.gdx.input.RemoteInput this$0 -> c
    84:136:void run() -> run
com.badlogic.gdx.input.RemoteInput$KeyEvent -> com.badlogic.gdx.d.h:
    int KEY_DOWN -> a
    int KEY_UP -> b
    int KEY_TYPED -> c
    long timeStamp -> d
    int type -> e
    int keyCode -> f
    char keyChar -> g
    com.badlogic.gdx.input.RemoteInput this$0 -> h
com.badlogic.gdx.input.RemoteInput$TouchEvent -> com.badlogic.gdx.d.i:
    int TOUCH_DOWN -> a
    int TOUCH_UP -> b
    int TOUCH_DRAGGED -> c
    long timeStamp -> d
    int type -> e
    int x -> f
    int y -> g
    int pointer -> h
    com.badlogic.gdx.input.RemoteInput this$0 -> i
com.badlogic.gdx.input.RemoteSender -> com.badlogic.gdx.d.j:
    java.io.DataOutputStream out -> j
    boolean connected -> k
    int KEY_DOWN -> a
    int KEY_UP -> b
    int KEY_TYPED -> c
    int TOUCH_DOWN -> d
    int TOUCH_UP -> e
    int TOUCH_DRAGGED -> f
    int ACCEL -> g
    int COMPASS -> h
    int SIZE -> i
    61:80:void sendUpdate() -> a
    84:96:boolean keyDown(int) -> a
    101:113:boolean keyUp(int) -> b
    118:130:boolean keyTyped(char) -> a
    135:149:boolean touchDown(int,int,int,int) -> a
    154:168:boolean touchUp(int,int,int,int) -> b
    173:187:boolean touchDragged(int,int,int) -> a
    192:192:boolean mouseMoved(int,int) -> a
    197:197:boolean scrolled(int) -> c
    201:203:boolean isConnected() -> b
com.badlogic.gdx.maps.ImageResolver -> com.badlogic.gdx.e.a:
    com.badlogic.gdx.graphics.g2d.TextureRegion getImage(java.lang.String) -> a
com.badlogic.gdx.maps.ImageResolver$AssetManagerImageResolver -> com.badlogic.gdx.e.b:
    com.badlogic.gdx.assets.AssetManager assetManager -> a
    44:44:com.badlogic.gdx.graphics.g2d.TextureRegion getImage(java.lang.String) -> a
com.badlogic.gdx.maps.ImageResolver$DirectImageResolver -> com.badlogic.gdx.e.c:
    com.badlogic.gdx.utils.ObjectMap images -> a
    31:31:com.badlogic.gdx.graphics.g2d.TextureRegion getImage(java.lang.String) -> a
com.badlogic.gdx.maps.ImageResolver$TextureAtlasImageResolver -> com.badlogic.gdx.e.d:
    com.badlogic.gdx.graphics.g2d.TextureAtlas atlas -> a
    57:57:com.badlogic.gdx.graphics.g2d.TextureRegion getImage(java.lang.String) -> a
com.badlogic.gdx.maps.Map -> com.badlogic.gdx.e.e:
    com.badlogic.gdx.maps.MapLayers layers -> a
    com.badlogic.gdx.maps.MapProperties properties -> b
    62:62:com.badlogic.gdx.maps.MapLayers getLayers() -> a
    69:69:com.badlogic.gdx.maps.MapProperties getProperties() -> b
    78:78:void dispose() -> dispose
com.badlogic.gdx.maps.MapLayer -> com.badlogic.gdx.e.f:
    java.lang.String name -> a
    float opacity -> b
    boolean visible -> c
    com.badlogic.gdx.maps.MapObjects objects -> d
    com.badlogic.gdx.maps.MapProperties properties -> e
    33:33:java.lang.String getName() -> a
    40:41:void setName(java.lang.String) -> a
    47:47:float getOpacity() -> b
    54:55:void setOpacity(float) -> a
    61:61:com.badlogic.gdx.maps.MapObjects getObjects() -> c
    68:68:boolean isVisible() -> d
    75:76:void setVisible(boolean) -> a
    82:82:com.badlogic.gdx.maps.MapProperties getProperties() -> e
com.badlogic.gdx.maps.MapLayers -> com.badlogic.gdx.e.g:
    com.badlogic.gdx.utils.Array layers -> a
    18:18:com.badlogic.gdx.maps.MapLayer get(int) -> a
    26:31:com.badlogic.gdx.maps.MapLayer get(java.lang.String) -> a
    36:36:int getCount() -> a
    43:44:void add(com.badlogic.gdx.maps.MapLayer) -> a
    50:51:void remove(int) -> b
    57:58:void remove(com.badlogic.gdx.maps.MapLayer) -> b
    65:65:com.badlogic.gdx.utils.Array getByType(java.lang.Class) -> a
    75:81:com.badlogic.gdx.utils.Array getByType(java.lang.Class,com.badlogic.gdx.utils.Array) -> a
    89:89:java.util.Iterator iterator() -> iterator
com.badlogic.gdx.maps.MapObject -> com.badlogic.gdx.e.h:
    java.lang.String name -> a
    float opacity -> b
    boolean visible -> c
    com.badlogic.gdx.maps.MapProperties properties -> d
    com.badlogic.gdx.graphics.Color color -> e
    19:19:java.lang.String getName() -> a
    26:27:void setName(java.lang.String) -> a
    33:33:com.badlogic.gdx.graphics.Color getColor() -> c
    40:41:void setColor(com.badlogic.gdx.graphics.Color) -> a
    47:47:float getOpacity() -> d
    54:55:void setOpacity(float) -> a
    61:61:boolean isVisible() -> e
    68:69:void setVisible(boolean) -> a
    75:75:com.badlogic.gdx.maps.MapProperties getProperties() -> b
com.badlogic.gdx.maps.MapObjects -> com.badlogic.gdx.e.i:
    com.badlogic.gdx.utils.Array objects -> a
    26:26:com.badlogic.gdx.maps.MapObject get(int) -> a
    34:39:com.badlogic.gdx.maps.MapObject get(java.lang.String) -> a
    46:47:void add(com.badlogic.gdx.maps.MapObject) -> a
    53:54:void remove(int) -> b
    60:61:void remove(com.badlogic.gdx.maps.MapObject) -> b
    67:67:int getCount() -> a
    75:75:com.badlogic.gdx.utils.Array getByType(java.lang.Class) -> a
    84:90:com.badlogic.gdx.utils.Array getByType(java.lang.Class,com.badlogic.gdx.utils.Array) -> a
    98:98:java.util.Iterator iterator() -> iterator
com.badlogic.gdx.maps.MapProperties -> com.badlogic.gdx.e.j:
    com.badlogic.gdx.utils.ObjectMap properties -> a
    29:29:boolean containsKey(java.lang.String) -> b
    37:37:java.lang.Object get(java.lang.String) -> c
    48:48:java.lang.Object get$52fc0c2c(java.lang.String) -> a
    60:61:java.lang.Object get$43c67af0(java.lang.String,java.lang.Object) -> b
    69:70:void put(java.lang.String,java.lang.Object) -> a
    76:77:void putAll(com.badlogic.gdx.maps.MapProperties) -> a
    83:84:void remove(java.lang.String) -> d
    90:91:void clear() -> a
    97:97:java.util.Iterator getKeys() -> b
    104:104:java.util.Iterator getValues() -> c
com.badlogic.gdx.maps.MapRenderer -> com.badlogic.gdx.e.k:
    void setView(com.badlogic.gdx.graphics.OrthographicCamera) -> a
    void setView(com.badlogic.gdx.math.Matrix4,float,float,float,float) -> a
    void render() -> a
    void render(int[]) -> a
com.badlogic.gdx.maps.objects.CircleMapObject -> com.badlogic.gdx.e.a.a:
    com.badlogic.gdx.math.Circle circle -> a
    17:17:com.badlogic.gdx.math.Circle getCircle() -> c
com.badlogic.gdx.maps.objects.EllipseMapObject -> com.badlogic.gdx.e.a.b:
    com.badlogic.gdx.math.Ellipse ellipse -> a
    15:15:com.badlogic.gdx.math.Ellipse getEllipse() -> c
com.badlogic.gdx.maps.objects.PolygonMapObject -> com.badlogic.gdx.e.a.c:
    com.badlogic.gdx.math.Polygon polygon -> a
    20:20:com.badlogic.gdx.math.Polygon getPolygon() -> c
    27:28:void setPolygon(com.badlogic.gdx.math.Polygon) -> a
com.badlogic.gdx.maps.objects.PolylineMapObject -> com.badlogic.gdx.e.a.d:
    com.badlogic.gdx.math.Polyline polyline -> a
    17:17:com.badlogic.gdx.math.Polyline getPolyline() -> c
    24:25:void setPolyline(com.badlogic.gdx.math.Polyline) -> a
com.badlogic.gdx.maps.objects.RectangleMapObject -> com.badlogic.gdx.e.a.e:
    com.badlogic.gdx.math.Rectangle rectangle -> a
    17:17:com.badlogic.gdx.math.Rectangle getRectangle() -> c
com.badlogic.gdx.maps.objects.TextureMapObject -> com.badlogic.gdx.e.a.f:
    float x -> a
    float y -> b
    float originX -> c
    float originY -> d
    float scaleX -> e
    float scaleY -> f
    float rotation -> g
    com.badlogic.gdx.graphics.g2d.TextureRegion textureRegion -> h
    24:24:float getX() -> c
    31:32:void setX(float) -> a
    38:38:float getY() -> d
    45:46:void setY(float) -> b
    52:52:float getOriginX() -> e
    59:60:void setOriginX(float) -> c
    66:66:float getOriginY() -> f
    73:74:void setOriginY(float) -> d
    80:80:float getScaleX() -> g
    87:88:void setScaleX(float) -> e
    94:94:float getScaleY() -> h
    101:102:void setScaleY(float) -> f
    108:108:float getRotation() -> i
    115:116:void setRotation(float) -> g
    122:122:com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion() -> j
    129:130:void setTextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> a
com.badlogic.gdx.maps.tiled.TideMapLoader -> com.badlogic.gdx.e.b.a:
    com.badlogic.gdx.utils.XmlReader xml -> a
    com.badlogic.gdx.utils.XmlReader$Element root -> b
    47:58:com.badlogic.gdx.maps.tiled.TiledMap load(java.lang.String) -> b
    65:69:com.badlogic.gdx.maps.tiled.TiledMap load$6c7222e4(com.badlogic.gdx.assets.AssetManager,java.lang.String) -> a
    75:84:com.badlogic.gdx.utils.Array getDependencies$454a42(java.lang.String) -> c
    97:110:com.badlogic.gdx.maps.tiled.TiledMap loadMap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver) -> a
    120:127:com.badlogic.gdx.utils.Array loadTileSheets(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle) -> a
    131:192:void loadTileSheet(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver) -> a
    195:257:void loadLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element) -> a
    260:277:void loadProperties(com.badlogic.gdx.maps.MapProperties,com.badlogic.gdx.utils.XmlReader$Element) -> a
    280:290:com.badlogic.gdx.files.FileHandle getRelativeFileHandle(com.badlogic.gdx.files.FileHandle,java.lang.String) -> a
    28:28:java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    28:28:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.maps.tiled.TideMapLoader$Parameters -> com.badlogic.gdx.e.b.b:
com.badlogic.gdx.maps.tiled.TiledMap -> com.badlogic.gdx.e.b.c:
    com.badlogic.gdx.maps.tiled.TiledMapTileSets tilesets -> a
    com.badlogic.gdx.utils.Array ownedTextures -> b
    21:21:com.badlogic.gdx.maps.tiled.TiledMapTileSets getTileSets() -> c
    38:39:void setOwnedTextures(com.badlogic.gdx.utils.Array) -> a
    43:48:void dispose() -> dispose
com.badlogic.gdx.maps.tiled.TiledMapRenderer -> com.badlogic.gdx.e.b.d:
    void renderObject$39d8c4b3() -> b
    void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer) -> a
com.badlogic.gdx.maps.tiled.TiledMapTile -> com.badlogic.gdx.e.b.e:
    int getId() -> a
    void setId(int) -> a
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode getBlendMode() -> b
    void setBlendMode(com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode) -> a
    com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion() -> c
    com.badlogic.gdx.maps.MapProperties getProperties() -> d
com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode -> com.badlogic.gdx.e.b.f:
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode NONE -> a
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode ALPHA -> b
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode[] $VALUES -> c
    12:12:com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode[] values() -> values
    12:12:com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.maps.tiled.TiledMapTileLayer -> com.badlogic.gdx.e.b.g:
    int width -> a
    int height -> b
    float tileWidth -> c
    float tileHeight -> d
    com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell[][] cells -> e
    22:22:int getWidth() -> f
    29:29:int getHeight() -> g
    36:36:float getTileWidth() -> h
    43:43:float getTileHeight() -> i
    69:71:com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell getCell(int,int) -> a
    81:84:void setCell(int,int,com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell) -> a
com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell -> com.badlogic.gdx.e.b.h:
    com.badlogic.gdx.maps.tiled.TiledMapTile tile -> e
    boolean flipHorizontally -> f
    boolean flipVertically -> g
    int rotation -> h
    int ROTATE_0 -> a
    int ROTATE_90 -> b
    int ROTATE_180 -> c
    int ROTATE_270 -> d
    103:103:com.badlogic.gdx.maps.tiled.TiledMapTile getTile() -> a
    112:113:void setTile(com.badlogic.gdx.maps.tiled.TiledMapTile) -> a
    119:119:boolean getFlipHorizontally() -> b
    128:129:void setFlipHorizontally(boolean) -> a
    135:135:boolean getFlipVertically() -> c
    144:145:void setFlipVertically(boolean) -> b
    151:151:int getRotation() -> d
    160:161:void setRotation(int) -> a
com.badlogic.gdx.maps.tiled.TiledMapTileSet -> com.badlogic.gdx.e.b.i:
    java.lang.String name -> a
    com.badlogic.gdx.utils.IntMap tiles -> b
    com.badlogic.gdx.maps.MapProperties properties -> c
    21:21:java.lang.String getName() -> a
    28:29:void setName(java.lang.String) -> a
    35:35:com.badlogic.gdx.maps.MapProperties getProperties() -> b
    51:51:com.badlogic.gdx.maps.tiled.TiledMapTile getTile(int) -> a
    61:62:void putTile(int,com.badlogic.gdx.maps.tiled.TiledMapTile) -> a
    68:69:void removeTile(int) -> b
    72:72:int size() -> c
com.badlogic.gdx.maps.tiled.TiledMapTileSets -> com.badlogic.gdx.e.b.j:
    com.badlogic.gdx.utils.Array tilesets -> a
    26:26:com.badlogic.gdx.maps.tiled.TiledMapTileSet getTileSet(int) -> b
    34:39:com.badlogic.gdx.maps.tiled.TiledMapTileSet getTileSet(java.lang.String) -> a
    46:47:void addTileSet(com.badlogic.gdx.maps.tiled.TiledMapTileSet) -> a
    55:56:void removeTileSet(int) -> c
    62:63:void removeTileSet(com.badlogic.gdx.maps.tiled.TiledMapTileSet) -> b
    70:76:com.badlogic.gdx.maps.tiled.TiledMapTile getTile(int) -> a
    84:84:java.util.Iterator iterator() -> iterator
com.badlogic.gdx.maps.tiled.TmxMapLoader -> com.badlogic.gdx.e.b.k:
    int FLAG_FLIP_HORIZONTALLY -> a
    int FLAG_FLIP_VERTICALLY -> b
    int FLAG_FLIP_DIAGONALLY -> c
    int MASK_CLEAR -> d
    com.badlogic.gdx.utils.XmlReader xml -> e
    com.badlogic.gdx.utils.XmlReader$Element root -> f
    boolean yUp -> g
    int mapWidthInPixels -> h
    int mapHeightInPixels -> i
    88:88:com.badlogic.gdx.maps.tiled.TiledMap load(java.lang.String) -> b
    101:113:com.badlogic.gdx.maps.tiled.TiledMap load(java.lang.String,com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters) -> a
    119:128:com.badlogic.gdx.maps.tiled.TiledMap load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters) -> a
    141:153:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters) -> b
    166:207:com.badlogic.gdx.maps.tiled.TiledMap loadTilemap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver) -> a
    217:232:com.badlogic.gdx.utils.Array loadTilesets(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle) -> a
    264:350:void loadTileSet(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver) -> a
    353:567:void loadTileLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element) -> a
    570:585:void loadObjectGroup(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element) -> b
    588:648:void loadObject(com.badlogic.gdx.maps.MapLayer,com.badlogic.gdx.utils.XmlReader$Element) -> a
    651:661:void loadProperties(com.badlogic.gdx.maps.MapProperties,com.badlogic.gdx.utils.XmlReader$Element) -> a
    664:674:com.badlogic.gdx.files.FileHandle getRelativeFileHandle(com.badlogic.gdx.files.FileHandle,java.lang.String) -> a
    678:678:int unsignedByteToInt(byte) -> a
    45:45:java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    45:45:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters -> com.badlogic.gdx.e.b.l:
    boolean yUp -> b
    boolean generateMipMaps -> c
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer -> com.badlogic.gdx.e.b.a.a:
    com.badlogic.gdx.maps.tiled.TiledMap map -> a
    float unitScale -> b
    com.badlogic.gdx.graphics.g2d.SpriteBatch spriteBatch -> c
    com.badlogic.gdx.math.Rectangle viewBounds -> d
    25:25:com.badlogic.gdx.maps.tiled.TiledMap getMap() -> c
    29:29:float getUnitScale() -> d
    33:33:com.badlogic.gdx.graphics.g2d.SpriteBatch getSpriteBatch() -> e
    37:37:com.badlogic.gdx.math.Rectangle getViewBounds() -> f
    56:60:void setView(com.badlogic.gdx.graphics.OrthographicCamera) -> a
    64:66:void setView(com.badlogic.gdx.math.Matrix4,float,float,float,float) -> a
    70:83:void render() -> a
    87:101:void render(int[]) -> a
    105:106:void dispose() -> dispose
com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer -> com.badlogic.gdx.e.b.a.b:
    com.badlogic.gdx.maps.tiled.TiledMap map -> e
    float[] vertices -> f
    49:49:void renderObject$39d8c4b3() -> b
    54:184:void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer) -> a
com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer -> com.badlogic.gdx.e.b.a.c:
    float[] vertices -> e
    48:48:void renderObject$39d8c4b3() -> b
    53:192:void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer) -> a
com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer2 -> com.badlogic.gdx.e.b.a.d:
    com.badlogic.gdx.maps.tiled.TiledMap map -> a
    float unitScale -> b
    com.badlogic.gdx.graphics.g2d.SpriteCache spriteCache -> c
    com.badlogic.gdx.math.Rectangle viewBounds -> d
    float[] vertices -> h
    boolean recache -> e
    boolean cached -> f
    int count -> g
    72:77:void setView(com.badlogic.gdx.graphics.OrthographicCamera) -> a
    81:84:void setView(com.badlogic.gdx.math.Matrix4,float,float,float,float) -> a
    87:100:void begin() -> c
    103:116:void end() -> d
    120:137:void render() -> a
    142:142:void render(int[]) -> a
    149:149:void renderObject$39d8c4b3() -> b
    155:283:void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer) -> a
    287:288:void dispose() -> dispose
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile -> com.badlogic.gdx.e.b.b.a:
    int id -> a
    com.badlogic.gdx.utils.Array frameTiles -> b
    float animationTime -> c
    19:19:int getId() -> a
    24:25:void setId(int) -> a
    30:30:com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode getBlendMode() -> b
    37:37:void setBlendMode(com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode) -> a
    42:42:com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion() -> c
    48:48:com.badlogic.gdx.maps.MapProperties getProperties() -> d
    56:57:void setAnimationTime(float) -> a
com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile -> com.badlogic.gdx.e.b.b.b:
    int id -> a
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode blendMode -> b
    com.badlogic.gdx.maps.MapProperties properties -> c
    com.badlogic.gdx.graphics.g2d.TextureRegion textureRegion -> d
    22:22:int getId() -> a
    27:28:void setId(int) -> a
    32:32:com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode getBlendMode() -> b
    37:38:void setBlendMode(com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode) -> a
    45:48:com.badlogic.gdx.maps.MapProperties getProperties() -> d
    56:56:com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion() -> c
com.badlogic.gdx.math.BSpline -> com.badlogic.gdx.math.a:
    float d6 -> f
    com.badlogic.gdx.math.Vector[] controlPoints -> a
    com.badlogic.gdx.utils.Array knots -> b
    int degree -> c
    boolean continuous -> d
    int spanCount -> e
    com.badlogic.gdx.math.Vector tmp -> g
    33:37:com.badlogic.gdx.math.Vector cubic(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector) -> a
    49:57:com.badlogic.gdx.math.Vector cubic(com.badlogic.gdx.math.Vector,int,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector) -> a
    69:73:com.badlogic.gdx.math.Vector calculate(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector[],int,boolean,com.badlogic.gdx.math.Vector) -> a
    86:89:com.badlogic.gdx.math.Vector calculate(com.badlogic.gdx.math.Vector,int,float,com.badlogic.gdx.math.Vector[],int,boolean,com.badlogic.gdx.math.Vector) -> a
    105:119:com.badlogic.gdx.math.BSpline set(com.badlogic.gdx.math.Vector[],int,boolean) -> a
    124:128:com.badlogic.gdx.math.Vector valueAt(com.badlogic.gdx.math.Vector,float) -> a
    133:133:com.badlogic.gdx.math.Vector valueAt(com.badlogic.gdx.math.Vector,int,float) -> a
    138:138:int nearest(com.badlogic.gdx.math.Vector) -> a
    143:154:int nearest(com.badlogic.gdx.math.Vector,int,int) -> a
    159:159:float approximate(com.badlogic.gdx.math.Vector) -> b
    163:163:float approximate(com.badlogic.gdx.math.Vector,int,int) -> b
    167:189:float approximate(com.badlogic.gdx.math.Vector,int) -> a
    195:195:float locate(com.badlogic.gdx.math.Vector) -> c
    22:22:float locate(java.lang.Object) -> a
    22:22:float approximate(java.lang.Object) -> b
    22:22:java.lang.Object valueAt(java.lang.Object,float) -> a
com.badlogic.gdx.math.Bezier -> com.badlogic.gdx.math.b:
    com.badlogic.gdx.utils.Array points -> a
    com.badlogic.gdx.math.Vector tmp -> b
    35:35:com.badlogic.gdx.math.Vector linear(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector) -> a
    47:48:com.badlogic.gdx.math.Vector quadratic(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector) -> a
    61:64:com.badlogic.gdx.math.Vector cubic(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector) -> a
    82:82:com.badlogic.gdx.math.Bezier set(com.badlogic.gdx.math.Vector[]) -> a
    85:91:com.badlogic.gdx.math.Bezier set(com.badlogic.gdx.math.Vector[],int,int) -> a
    94:100:com.badlogic.gdx.math.Bezier set(com.badlogic.gdx.utils.Array,int,int) -> a
    104:111:com.badlogic.gdx.math.Vector valueAt(com.badlogic.gdx.math.Vector,float) -> a
    116:123:float approximate(com.badlogic.gdx.math.Vector) -> a
    129:129:float locate(com.badlogic.gdx.math.Vector) -> b
    24:24:float locate(java.lang.Object) -> a
    24:24:float approximate(java.lang.Object) -> b
    24:24:java.lang.Object valueAt(java.lang.Object,float) -> a
com.badlogic.gdx.math.CatmullRomSpline -> com.badlogic.gdx.math.c:
    com.badlogic.gdx.math.Vector[] controlPoints -> a
    boolean continuous -> b
    int spanCount -> c
    com.badlogic.gdx.math.Vector tmp -> d
    com.badlogic.gdx.math.Vector tmp2 -> e
    32:36:com.badlogic.gdx.math.Vector calculate(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector) -> a
    48:55:com.badlogic.gdx.math.Vector calculate(com.badlogic.gdx.math.Vector,int,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector) -> a
    70:77:com.badlogic.gdx.math.CatmullRomSpline set(com.badlogic.gdx.math.Vector[],boolean) -> a
    82:86:com.badlogic.gdx.math.Vector valueAt(com.badlogic.gdx.math.Vector,float) -> a
    91:91:com.badlogic.gdx.math.Vector valueAt(com.badlogic.gdx.math.Vector,int,float) -> a
    96:96:int nearest(com.badlogic.gdx.math.Vector) -> a
    101:112:int nearest(com.badlogic.gdx.math.Vector,int,int) -> a
    117:117:float approximate(com.badlogic.gdx.math.Vector) -> b
    121:121:float approximate(com.badlogic.gdx.math.Vector,int,int) -> b
    125:147:float approximate(com.badlogic.gdx.math.Vector,int) -> a
    152:152:float locate(com.badlogic.gdx.math.Vector) -> c
    23:23:float locate(java.lang.Object) -> a
    23:23:float approximate(java.lang.Object) -> b
    23:23:java.lang.Object valueAt(java.lang.Object,float) -> a
com.badlogic.gdx.math.Circle -> com.badlogic.gdx.math.d:
    float x -> a
    float y -> b
    float radius -> c
    42:44:boolean contains(float,float) -> a
    48:50:boolean contains(com.badlogic.gdx.math.Vector2) -> a
    54:57:void set(float,float,float) -> a
com.badlogic.gdx.math.EarClippingTriangulator -> com.badlogic.gdx.math.e:
    int CONCAVE -> a
    int CONVEX -> b
    int concaveVertexCount -> c
    45:76:java.util.List computeTriangles(java.util.List) -> a
    80:92:boolean areVerticesClockwise(java.util.ArrayList) -> a
    100:127:int[] classifyVertices(java.util.ArrayList) -> b
    132:135:boolean isTriangleConvex(float,float,float,float,float,float) -> a
    145:151:int computeSpannedAreaSign(float,float,float,float,float,float) -> b
    157:182:boolean isAnyVertexInTriangle(java.util.ArrayList,int[],float,float,float,float,float,float) -> a
    186:198:boolean isEarTip(java.util.ArrayList,int,int[]) -> a
    203:216:void cutEarTip(java.util.ArrayList,int,java.util.ArrayList) -> a
    220:236:void removeCollinearNeighborEarsAfterRemovingEarTip(java.util.ArrayList,int) -> a
    239:242:boolean isCollinear(java.util.ArrayList,int) -> b
    247:251:boolean isCollinear(java.util.ArrayList,int,int,int) -> a
    256:256:int computePreviousIndex(java.util.List,int) -> a
    260:260:int computeNextIndex(java.util.List,int) -> b
com.badlogic.gdx.math.Ellipse -> com.badlogic.gdx.math.f:
    float x -> a
    float y -> b
    float width -> c
    float height -> d
    float halfWidth -> e
    float halfHeight -> f
    long serialVersionUID -> g
    38:43:boolean contains(float,float) -> a
    47:47:boolean contains(com.badlogic.gdx.math.Vector2) -> a
    51:55:void set(float,float,float,float) -> a
com.badlogic.gdx.math.FloatCounter -> com.badlogic.gdx.math.g:
    int count -> a
    float total -> b
    float min -> c
    float max -> d
    float average -> e
    float latest -> f
    float value -> g
    com.badlogic.gdx.math.WindowedMean mean -> h
    58:75:void put(float) -> a
    81:90:void reset() -> a
com.badlogic.gdx.math.Frustum -> com.badlogic.gdx.math.h:
    com.badlogic.gdx.math.Vector3[] clipSpacePlanePoints -> a
    float[] clipSpacePlanePointsArray -> b
    com.badlogic.gdx.math.Plane[] planes -> c
    com.badlogic.gdx.math.Vector3[] planePoints -> d
    float[] planePointsArray -> e
    62:77:void update(com.badlogic.gdx.math.Matrix4) -> a
    84:88:boolean pointInFrustum(com.badlogic.gdx.math.Vector3) -> a
    97:100:boolean sphereInFrustum(com.badlogic.gdx.math.Vector3,float) -> a
    109:112:boolean sphereInFrustumWithoutNearFar(com.badlogic.gdx.math.Vector3,float) -> b
    120:132:boolean boundsInFrustum(com.badlogic.gdx.math.collision.BoundingBox) -> a
com.badlogic.gdx.math.Interpolation -> com.badlogic.gdx.math.i:
    com.badlogic.gdx.math.Interpolation linear -> a
    com.badlogic.gdx.math.Interpolation fade -> b
    com.badlogic.gdx.math.Interpolation$Pow pow2 -> c
    com.badlogic.gdx.math.Interpolation$PowIn pow2In -> d
    com.badlogic.gdx.math.Interpolation$PowOut pow2Out -> e
    com.badlogic.gdx.math.Interpolation$Pow pow3 -> f
    com.badlogic.gdx.math.Interpolation$PowIn pow3In -> g
    com.badlogic.gdx.math.Interpolation$PowOut pow3Out -> h
    com.badlogic.gdx.math.Interpolation$Pow pow4 -> i
    com.badlogic.gdx.math.Interpolation$PowIn pow4In -> j
    com.badlogic.gdx.math.Interpolation$PowOut pow4Out -> k
    com.badlogic.gdx.math.Interpolation$Pow pow5 -> l
    com.badlogic.gdx.math.Interpolation$PowIn pow5In -> m
    com.badlogic.gdx.math.Interpolation$PowOut pow5Out -> n
    com.badlogic.gdx.math.Interpolation sine -> o
    com.badlogic.gdx.math.Interpolation sineIn -> p
    com.badlogic.gdx.math.Interpolation sineOut -> q
    com.badlogic.gdx.math.Interpolation exp10 -> r
    com.badlogic.gdx.math.Interpolation exp10In -> s
    com.badlogic.gdx.math.Interpolation exp10Out -> t
    com.badlogic.gdx.math.Interpolation exp5 -> u
    com.badlogic.gdx.math.Interpolation exp5In -> v
    com.badlogic.gdx.math.Interpolation exp5Out -> w
    com.badlogic.gdx.math.Interpolation circle -> x
    com.badlogic.gdx.math.Interpolation circleIn -> y
    com.badlogic.gdx.math.Interpolation circleOut -> z
    com.badlogic.gdx.math.Interpolation$Elastic elastic -> A
    com.badlogic.gdx.math.Interpolation$Elastic elasticIn -> B
    com.badlogic.gdx.math.Interpolation$Elastic elasticOut -> C
    com.badlogic.gdx.math.Interpolation swing -> D
    com.badlogic.gdx.math.Interpolation swingIn -> E
    com.badlogic.gdx.math.Interpolation swingOut -> F
    com.badlogic.gdx.math.Interpolation bounce -> G
    com.badlogic.gdx.math.Interpolation bounceIn -> H
    com.badlogic.gdx.math.Interpolation bounceOut -> I
    float apply(float) -> a
    27:27:float apply(float,float,float) -> a
com.badlogic.gdx.math.Interpolation$1 -> com.badlogic.gdx.math.j:
    32:32:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$2 -> com.badlogic.gdx.math.k:
    38:38:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$3 -> com.badlogic.gdx.math.l:
    60:60:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$4 -> com.badlogic.gdx.math.m:
    66:66:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$5 -> com.badlogic.gdx.math.n:
    72:72:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$6 -> com.badlogic.gdx.math.o:
    86:92:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$7 -> com.badlogic.gdx.math.p:
    98:98:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$8 -> com.badlogic.gdx.math.q:
    104:105:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$Bounce -> com.badlogic.gdx.math.r:
    248:250:float out(float) -> b
    254:255:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$BounceIn -> com.badlogic.gdx.math.s:
    338:338:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$BounceOut -> com.badlogic.gdx.math.t:
    float[] widths -> J
    float[] heights -> K
    312:324:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$Elastic -> com.badlogic.gdx.math.u:
    float value -> J
    float power -> K
    205:211:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$ElasticIn -> com.badlogic.gdx.math.v:
    221:221:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$ElasticOut -> com.badlogic.gdx.math.w:
    231:232:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$Exp -> com.badlogic.gdx.math.x:
    float value -> J
    float power -> K
    float min -> L
    float scale -> M
    169:170:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$ExpIn -> com.badlogic.gdx.math.y:
    180:180:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$ExpOut -> com.badlogic.gdx.math.z:
    190:190:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$Pow -> com.badlogic.gdx.math.aa:
    int power -> J
    131:132:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$PowIn -> com.badlogic.gdx.math.ab:
    142:142:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$PowOut -> com.badlogic.gdx.math.ac:
    152:152:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$Swing -> com.badlogic.gdx.math.ad:
    float scale -> J
    352:358:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$SwingIn -> com.badlogic.gdx.math.ae:
    float scale -> J
    383:383:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$SwingOut -> com.badlogic.gdx.math.af:
    float scale -> J
    370:371:float apply(float) -> a
com.badlogic.gdx.math.Intersector -> com.badlogic.gdx.math.ag:
    com.badlogic.gdx.math.Vector3 v0 -> g
    com.badlogic.gdx.math.Vector3 v1 -> h
    com.badlogic.gdx.math.Vector3 v2 -> i
    com.badlogic.gdx.math.Plane p -> j
    com.badlogic.gdx.math.Vector3 i -> k
    com.badlogic.gdx.math.Vector3 dir -> l
    com.badlogic.gdx.math.Vector3 start -> m
    com.badlogic.gdx.math.Vector3 tmp -> a
    com.badlogic.gdx.math.Vector3 best -> b
    com.badlogic.gdx.math.Vector3 tmp1 -> c
    com.badlogic.gdx.math.Vector3 tmp2 -> d
    com.badlogic.gdx.math.Vector3 tmp3 -> e
    com.badlogic.gdx.math.Vector3 intersection -> f
    39:57:float getLowestPositiveRoot(float,float,float) -> a
    73:85:boolean isPointInTriangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    89:95:boolean intersectSegmentPlane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3) -> a
    102:102:int pointLineSide(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> a
    108:108:int pointLineSide(float,float,float,float,float,float) -> a
    117:129:boolean isPointInPolygon(java.util.List,com.badlogic.gdx.math.Vector2) -> a
    140:157:float distanceLinePoint(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> b
    162:163:float distanceLinePoint(float,float,float,float,float,float) -> b
    174:190:boolean intersectSegmentCircle(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float) -> a
    204:215:float intersectSegmentCircleDisplace(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Vector2) -> a
    226:237:boolean intersectRayPlane(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3) -> a
    252:264:float intersectLinePlane(float,float,float,float,float,float,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3) -> a
    279:302:boolean intersectRayTriangle(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    318:358:boolean intersectRaySphere(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3) -> a
    369:481:boolean intersectRayBounds(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.collision.BoundingBox,com.badlogic.gdx.math.Vector3) -> a
    491:527:boolean intersectRayBoundsFast(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.collision.BoundingBox) -> a
    543:567:boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,float[],com.badlogic.gdx.math.Vector3) -> a
    580:608:boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,float[],short[],int,com.badlogic.gdx.math.Vector3) -> a
    619:641:boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,java.util.List,com.badlogic.gdx.math.Vector3) -> a
    651:651:boolean intersectRectangles(com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> a
    664:676:boolean intersectLines(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> a
    688:700:boolean intersectSegments(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> b
    704:704:float det(float,float,float,float) -> a
    708:708:double detd(double,double,double,double) -> a
    712:716:boolean overlapCircles(com.badlogic.gdx.math.Circle,com.badlogic.gdx.math.Circle) -> a
    720:720:boolean overlapRectangles(com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> b
    724:744:boolean overlapCircleRectangle(com.badlogic.gdx.math.Circle,com.badlogic.gdx.math.Rectangle) -> a
    753:753:boolean overlapConvexPolygons(com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Polygon) -> a
    764:764:boolean overlapConvexPolygons$7244be0b(com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Polygon) -> b
    775:914:boolean overlapConvexPolygons(float[],float[],com.badlogic.gdx.math.Intersector$MinimumTranslationVector) -> a
    937:1032:void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle) -> a
    1037:1047:void splitEdge$445b702b(float[],int,int,int,com.badlogic.gdx.math.Plane,float[]) -> a
    1050:1059:void main$3231c38a() -> a
com.badlogic.gdx.math.Intersector$MinimumTranslationVector -> com.badlogic.gdx.math.ah:
    com.badlogic.gdx.math.Vector2 normal -> a
    float depth -> b
com.badlogic.gdx.math.Intersector$SplitTriangle -> com.badlogic.gdx.math.ai:
    float[] front -> a
    float[] back -> b
    float[] edgeSplit -> c
    int numFront -> d
    int numBack -> e
    int total -> f
    boolean frontCurrent -> g
    int frontOffset -> h
    int backOffset -> i
    1082:1082:java.lang.String toString() -> toString
    1087:1088:void setSide(boolean) -> a
    1091:1091:boolean getSide() -> a
    1095:1102:void add(float[],int,int) -> a
    1105:1111:void reset() -> b
com.badlogic.gdx.math.MathUtils -> com.badlogic.gdx.math.aj:
    float nanoToSec -> a
    float PI -> b
    float PI2 -> c
    int SIN_BITS -> j
    int SIN_MASK -> k
    int SIN_COUNT -> l
    float radFull -> m
    float degFull -> n
    float radToIndex -> o
    float degToIndex -> p
    float radiansToDegrees -> d
    float radDeg -> e
    float degreesToRadians -> f
    float degRad -> g
    int ATAN2_BITS -> q
    int ATAN2_BITS2 -> r
    int ATAN2_MASK -> s
    int ATAN2_COUNT -> t
    int ATAN2_DIM -> h
    float INV_ATAN2_DIM_MINUS_1 -> u
    java.util.Random random -> i
    int BIG_ENOUGH_INT -> v
    double BIG_ENOUGH_FLOOR -> w
    double CEIL -> x
    double BIG_ENOUGH_CEIL -> y
    double BIG_ENOUGH_ROUND -> z
    71:71:float sin(float) -> a
    76:76:float cos(float) -> b
    81:81:float sinDeg(float) -> c
    86:86:float cosDeg(float) -> d
    114:137:float atan2(float,float) -> a
    146:146:int random(int) -> a
    151:151:int random$255f288(int) -> b
    156:156:boolean randomBoolean() -> b
    161:161:float random() -> a
    166:166:float random(float) -> e
    171:171:float random(float,float) -> b
    178:185:int nextPowerOfTwo(int) -> c
    189:189:boolean isPowerOfTwo(int) -> d
    195:197:int clamp(int,int,int) -> a
    201:203:short clamp(short,short,short) -> a
    207:209:float clamp(float,float,float) -> a
    225:225:int floor(float) -> f
    231:231:int floorPositive(float) -> g
    237:237:int ceil(float) -> h
    243:243:int ceilPositive(float) -> i
    249:249:int round(float) -> j
    254:254:int roundPositive(float) -> k
com.badlogic.gdx.math.MathUtils$Atan2 -> com.badlogic.gdx.math.ak:
    float[] table -> a
com.badlogic.gdx.math.MathUtils$Cos -> com.badlogic.gdx.math.al:
    float[] table -> a
com.badlogic.gdx.math.MathUtils$Sin -> com.badlogic.gdx.math.am:
    float[] table -> a
com.badlogic.gdx.math.Matrix3 -> com.badlogic.gdx.math.an:
    long serialVersionUID -> k
    float DEGREE_TO_RAD -> l
    int M00 -> a
    int M01 -> b
    int M02 -> c
    int M10 -> d
    int M11 -> e
    int M12 -> f
    int M20 -> g
    int M21 -> h
    int M22 -> i
    float[] val -> j
    float[] tmp -> m
    52:61:com.badlogic.gdx.math.Matrix3 idt() -> a
    72:94:com.badlogic.gdx.math.Matrix3 mul(com.badlogic.gdx.math.Matrix3) -> a
    101:117:com.badlogic.gdx.math.Matrix3 setToRotation(float) -> b
    125:137:com.badlogic.gdx.math.Matrix3 setToTranslation(float,float) -> a
    144:156:com.badlogic.gdx.math.Matrix3 setToTranslation(com.badlogic.gdx.math.Vector2) -> a
    165:174:com.badlogic.gdx.math.Matrix3 setToScaling(float,float) -> e
    178:178:java.lang.String toString() -> toString
    184:184:float det() -> c
    191:216:com.badlogic.gdx.math.Matrix3 inv() -> d
    223:224:com.badlogic.gdx.math.Matrix3 set(com.badlogic.gdx.math.Matrix3) -> b
    231:240:com.badlogic.gdx.math.Matrix3 set(com.badlogic.gdx.math.Matrix4) -> a
    247:249:com.badlogic.gdx.math.Matrix3 trn(com.badlogic.gdx.math.Vector2) -> b
    257:259:com.badlogic.gdx.math.Matrix3 trn(float,float) -> b
    266:268:com.badlogic.gdx.math.Matrix3 trn(com.badlogic.gdx.math.Vector3) -> a
    277:289:com.badlogic.gdx.math.Matrix3 translate(float,float) -> c
    297:309:com.badlogic.gdx.math.Matrix3 translate(com.badlogic.gdx.math.Vector2) -> c
    317:334:com.badlogic.gdx.math.Matrix3 rotate(float) -> a
    343:353:com.badlogic.gdx.math.Matrix3 scale(float,float) -> d
    361:371:com.badlogic.gdx.math.Matrix3 scale(com.badlogic.gdx.math.Vector2) -> d
    377:377:float[] getValues() -> b
    384:386:com.badlogic.gdx.math.Matrix3 scl(float) -> c
    393:395:com.badlogic.gdx.math.Matrix3 scl(com.badlogic.gdx.math.Vector2) -> e
    402:404:com.badlogic.gdx.math.Matrix3 scl(com.badlogic.gdx.math.Vector3) -> b
    411:423:com.badlogic.gdx.math.Matrix3 transpose() -> e
    434:455:void mul(float[],float[]) -> a
com.badlogic.gdx.math.Matrix4 -> com.badlogic.gdx.math.Matrix4:
    long serialVersionUID -> B
    int M00 -> a
    int M01 -> b
    int M02 -> c
    int M03 -> d
    int M10 -> e
    int M11 -> f
    int M12 -> g
    int M13 -> h
    int M20 -> i
    int M21 -> j
    int M22 -> k
    int M23 -> l
    int M30 -> m
    int M31 -> n
    int M32 -> o
    int M33 -> p
    float[] tmp -> q
    float[] val -> r
    com.badlogic.gdx.math.Quaternion quat -> s
    com.badlogic.gdx.math.Vector3 l_vez -> t
    com.badlogic.gdx.math.Vector3 l_vex -> u
    com.badlogic.gdx.math.Vector3 l_vey -> v
    com.badlogic.gdx.math.Vector3 tmpVec -> w
    com.badlogic.gdx.math.Matrix4 tmpMat -> x
    com.badlogic.gdx.math.Vector3 right -> y
    com.badlogic.gdx.math.Vector3 tmpForward -> z
    com.badlogic.gdx.math.Vector3 tmpUp -> A
    84:84:com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix4) -> a
    94:95:com.badlogic.gdx.math.Matrix4 set(float[]) -> a
    103:103:com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Quaternion) -> a
    114:140:com.badlogic.gdx.math.Matrix4 set(float,float,float,float) -> d
    151:167:com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    172:172:com.badlogic.gdx.math.Matrix4 cpy() -> c
    180:183:com.badlogic.gdx.math.Matrix4 trn(com.badlogic.gdx.math.Vector3) -> a
    193:196:com.badlogic.gdx.math.Matrix4 trn(float,float,float) -> c
    201:201:float[] getValues() -> d
    213:214:com.badlogic.gdx.math.Matrix4 mul(com.badlogic.gdx.math.Matrix4) -> b
    221:237:com.badlogic.gdx.math.Matrix4 tra() -> e
    244:260:com.badlogic.gdx.math.Matrix4 idt() -> a
    268:327:com.badlogic.gdx.math.Matrix4 inv() -> b
    332:332:float det() -> f
    351:372:com.badlogic.gdx.math.Matrix4 setToProjection(float,float,float,float) -> a
    384:385:com.badlogic.gdx.math.Matrix4 setToOrtho2D$7167aba2(float,float) -> a
    399:400:com.badlogic.gdx.math.Matrix4 setToOrtho2D(float,float,float,float,float,float) -> b
    415:441:com.badlogic.gdx.math.Matrix4 setToOrtho(float,float,float,float,float,float) -> a
    449:452:com.badlogic.gdx.math.Matrix4 setTranslation(com.badlogic.gdx.math.Vector3) -> c
    461:465:com.badlogic.gdx.math.Matrix4 setToTranslation(com.badlogic.gdx.math.Vector3) -> d
    476:480:com.badlogic.gdx.math.Matrix4 setToTranslation(float,float,float) -> d
    490:497:com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    512:519:com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(float,float,float,float,float,float) -> c
    530:534:com.badlogic.gdx.math.Matrix4 setToRotation(com.badlogic.gdx.math.Vector3,float) -> a
    545:549:com.badlogic.gdx.math.Matrix4 setToRotation(float,float,float,float) -> b
    557:557:com.badlogic.gdx.math.Matrix4 setToRotation(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> b
    569:569:com.badlogic.gdx.math.Matrix4 setToRotation(float,float,float,float,float,float) -> d
    578:579:com.badlogic.gdx.math.Matrix4 setFromEulerAngles(float,float,float) -> e
    587:591:com.badlogic.gdx.math.Matrix4 setToScaling(com.badlogic.gdx.math.Vector3) -> e
    601:605:com.badlogic.gdx.math.Matrix4 setToScaling(float,float,float) -> f
    619:634:com.badlogic.gdx.math.Matrix4 setToLookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> c
    647:651:com.badlogic.gdx.math.Matrix4 setToLookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    659:664:com.badlogic.gdx.math.Matrix4 setToWorld(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> b
    669:669:java.lang.String toString() -> toString
    678:680:void lerp(com.badlogic.gdx.math.Matrix4,float) -> a
    685:701:com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix3) -> a
    705:708:com.badlogic.gdx.math.Matrix4 scl(com.badlogic.gdx.math.Vector3) -> b
    712:715:com.badlogic.gdx.math.Matrix4 scl(float,float,float) -> g
    719:722:com.badlogic.gdx.math.Matrix4 scl(float) -> a
    726:729:void getTranslation(com.badlogic.gdx.math.Vector3) -> f
    732:733:void getRotation(com.badlogic.gdx.math.Quaternion) -> b
    737:740:com.badlogic.gdx.math.Matrix4 toNormalMatrix() -> g
    void mul(float[],float[]) -> mul
    void mulVec(float[],float[]) -> mulVec
    void mulVec(float[],float[],int,int,int) -> mulVec
    void prj(float[],float[]) -> prj
    void prj(float[],float[],int,int,int) -> prj
    void rot(float[],float[]) -> rot
    void rot(float[],float[],int,int,int) -> rot
    boolean inv(float[]) -> inv
    float det(float[]) -> det
    1003:1003:com.badlogic.gdx.math.Matrix4 translate(com.badlogic.gdx.math.Vector3) -> g
    1013:1031:com.badlogic.gdx.math.Matrix4 translate(float,float,float) -> a
    1041:1043:com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Vector3,float) -> b
    1054:1056:com.badlogic.gdx.math.Matrix4 rotate(float,float,float,float) -> c
    1065:1067:com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Quaternion) -> c
    1075:1075:com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> d
    1085:1103:com.badlogic.gdx.math.Matrix4 scale(float,float,float) -> b
com.badlogic.gdx.math.Path -> com.badlogic.gdx.math.ao:
    java.lang.Object valueAt(java.lang.Object,float) -> a
    float approximate(java.lang.Object) -> b
    float locate(java.lang.Object) -> a
com.badlogic.gdx.math.Plane -> com.badlogic.gdx.math.ap:
    long serialVersionUID -> c
    com.badlogic.gdx.math.Vector3 normal -> a
    float d -> b
    73:78:void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    87:89:void set(float,float,float,float) -> a
    96:96:float distance(com.badlogic.gdx.math.Vector3) -> b
    105:112:com.badlogic.gdx.math.Plane$PlaneSide testPoint(com.badlogic.gdx.math.Vector3) -> a
    123:130:com.badlogic.gdx.math.Plane$PlaneSide testPoint(float,float,float) -> a
    139:140:boolean isFrontFacing(com.badlogic.gdx.math.Vector3) -> c
    145:145:com.badlogic.gdx.math.Vector3 getNormal() -> a
    150:150:float getD() -> b
    158:160:void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    163:165:void set(float,float,float,float,float,float) -> a
    171:173:void set(com.badlogic.gdx.math.Plane) -> a
    176:176:java.lang.String toString() -> toString
com.badlogic.gdx.math.Plane$PlaneSide -> com.badlogic.gdx.math.aq:
    com.badlogic.gdx.math.Plane$PlaneSide OnPlane -> a
    com.badlogic.gdx.math.Plane$PlaneSide Back -> b
    com.badlogic.gdx.math.Plane$PlaneSide Front -> c
    com.badlogic.gdx.math.Plane$PlaneSide[] $VALUES -> d
    31:31:com.badlogic.gdx.math.Plane$PlaneSide[] values() -> values
    31:31:com.badlogic.gdx.math.Plane$PlaneSide valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.math.Polygon -> com.badlogic.gdx.math.ar:
    float[] localVertices -> a
    float[] worldVertices -> b
    float x -> c
    float y -> d
    float originX -> e
    float originY -> f
    float rotation -> g
    float scaleX -> h
    float scaleY -> i
    boolean dirty -> j
    com.badlogic.gdx.math.Rectangle bounds -> k
    40:40:float[] getVertices() -> b
    45:83:float[] getTransformedVertices() -> a
    87:90:void setOrigin(float,float) -> b
    93:96:void setPosition(float,float) -> a
    99:102:void translate(float,float) -> c
    105:107:void setRotation(float) -> a
    110:112:void rotate(float) -> b
    115:118:void setScale(float,float) -> d
    121:124:void scale(float) -> c
    127:128:void dirty() -> c
    131:147:float area() -> d
    158:179:com.badlogic.gdx.math.Rectangle getBoundingRectangle() -> e
    183:194:boolean contains(float,float) -> e
    198:198:float getX() -> f
    202:202:float getY() -> g
    206:206:float getOriginX() -> h
    210:210:float getOriginY() -> i
    214:214:float getRotation() -> j
    218:218:float getScaleX() -> k
    222:222:float getScaleY() -> l
com.badlogic.gdx.math.Polyline -> com.badlogic.gdx.math.as:
    float[] localVertices -> a
    float[] worldVertices -> b
    float x -> c
    float y -> d
    float originX -> e
    float originY -> f
    float rotation -> g
    float scaleX -> h
    float scaleY -> i
    float length -> j
    float scaledLength -> k
    boolean calculateScaledLength -> l
    boolean calculateLength -> m
    boolean dirty -> n
    43:43:float[] getVertices() -> a
    48:86:float[] getTransformedVertices() -> b
    91:101:float getLength() -> c
    106:116:float getScaledLength() -> d
    120:120:float getX() -> e
    124:124:float getY() -> f
    128:128:float getOriginX() -> g
    132:132:float getOriginY() -> h
    136:136:float getRotation() -> i
    140:140:float getScaleX() -> j
    144:144:float getScaleY() -> k
    148:151:void setOrigin(float,float) -> b
    154:157:void setPosition(float,float) -> a
    160:162:void setRotation(float) -> a
    165:167:void rotate(float) -> b
    170:174:void setScale(float,float) -> c
    177:181:void scale(float) -> c
    184:185:void calculateLength() -> l
    188:189:void calculateScaledLength() -> m
    192:193:void dirty() -> n
    196:199:void translate(float,float) -> d
com.badlogic.gdx.math.Quaternion -> com.badlogic.gdx.math.at:
    long serialVersionUID -> e
    float NORMALIZATION_TOLERANCE -> f
    com.badlogic.gdx.math.Quaternion tmp1 -> g
    com.badlogic.gdx.math.Quaternion tmp2 -> h
    float x -> a
    float y -> b
    float z -> c
    float w -> d
    73:77:com.badlogic.gdx.math.Quaternion set(float,float,float,float) -> b
    84:84:com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Quaternion) -> a
    93:93:com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Vector3,float) -> a
    98:98:com.badlogic.gdx.math.Quaternion cpy() -> b
    103:103:float len() -> c
    108:108:java.lang.String toString() -> toString
    117:138:com.badlogic.gdx.math.Quaternion setEulerAngles(float,float,float) -> a
    143:143:float len2() -> d
    149:157:com.badlogic.gdx.math.Quaternion nor() -> e
    164:167:com.badlogic.gdx.math.Quaternion conjugate() -> a
    175:182:com.badlogic.gdx.math.Vector3 transform(com.badlogic.gdx.math.Vector3) -> a
    190:198:com.badlogic.gdx.math.Quaternion mul(com.badlogic.gdx.math.Quaternion) -> b
    206:214:com.badlogic.gdx.math.Quaternion mulLeft(com.badlogic.gdx.math.Quaternion) -> c
    223:249:void toMatrix(float[]) -> a
    254:254:com.badlogic.gdx.math.Quaternion idt() -> f
    264:264:com.badlogic.gdx.math.Quaternion setFromAxis(com.badlogic.gdx.math.Vector3,float) -> b
    274:281:com.badlogic.gdx.math.Quaternion setFromAxis(float,float,float,float) -> a
    291:291:com.badlogic.gdx.math.Quaternion setFromMatrix(com.badlogic.gdx.math.Matrix4) -> a
    317:354:com.badlogic.gdx.math.Quaternion setFromAxes(float,float,float,float,float,float,float,float,float) -> a
    362:364:com.badlogic.gdx.math.Quaternion setFromCross(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    376:378:com.badlogic.gdx.math.Quaternion setFromCross(float,float,float,float,float,float) -> a
    387:425:com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion,float) -> a
    429:436:boolean equals(java.lang.Object) -> equals
    444:444:float dot(com.badlogic.gdx.math.Quaternion) -> d
    451:455:com.badlogic.gdx.math.Quaternion mul$2f014c6f() -> g
com.badlogic.gdx.math.Rectangle -> com.badlogic.gdx.math.au:
    com.badlogic.gdx.math.Rectangle tmp -> a
    com.badlogic.gdx.math.Rectangle tmp2 -> b
    long serialVersionUID -> g
    float x -> c
    float y -> d
    float width -> e
    float height -> f
    59:59:float getX() -> a
    65:66:void setX(float) -> a
    70:70:float getY() -> b
    76:77:void setY(float) -> b
    81:81:float getWidth() -> c
    87:88:void setWidth(float) -> c
    92:92:float getHeight() -> d
    98:99:void setHeight(float) -> d
    104:110:boolean contains(com.badlogic.gdx.math.Rectangle) -> c
    117:117:boolean overlaps(com.badlogic.gdx.math.Rectangle) -> a
    121:125:void set(float,float,float,float) -> a
    131:131:boolean contains(float,float) -> a
    137:141:void set(com.badlogic.gdx.math.Rectangle) -> b
    146:155:void merge(com.badlogic.gdx.math.Rectangle) -> d
    158:158:java.lang.String toString() -> toString
com.badlogic.gdx.math.Vector -> com.badlogic.gdx.math.av:
    com.badlogic.gdx.math.Vector cpy() -> a
    float len() -> b
    float len2() -> c
    com.badlogic.gdx.math.Vector limit(float) -> a
    com.badlogic.gdx.math.Vector clamp(float,float) -> a
    com.badlogic.gdx.math.Vector set(com.badlogic.gdx.math.Vector) -> a
    com.badlogic.gdx.math.Vector sub(com.badlogic.gdx.math.Vector) -> b
    com.badlogic.gdx.math.Vector nor() -> d
    com.badlogic.gdx.math.Vector add(com.badlogic.gdx.math.Vector) -> c
    float dot(com.badlogic.gdx.math.Vector) -> d
    com.badlogic.gdx.math.Vector scl(float) -> b
    com.badlogic.gdx.math.Vector scl(com.badlogic.gdx.math.Vector) -> e
    float dst(com.badlogic.gdx.math.Vector) -> f
    float dst2(com.badlogic.gdx.math.Vector) -> g
    com.badlogic.gdx.math.Vector lerp(com.badlogic.gdx.math.Vector,float) -> a
com.badlogic.gdx.math.Vector2 -> com.badlogic.gdx.math.aw:
    long serialVersionUID -> f
    com.badlogic.gdx.math.Vector2 X -> a
    com.badlogic.gdx.math.Vector2 Y -> b
    com.badlogic.gdx.math.Vector2 Zero -> c
    float x -> d
    float y -> e
    57:57:com.badlogic.gdx.math.Vector2 cpy() -> e
    62:62:float len() -> b
    67:67:float len2() -> c
    74:76:com.badlogic.gdx.math.Vector2 set(com.badlogic.gdx.math.Vector2) -> a
    84:86:com.badlogic.gdx.math.Vector2 set(float,float) -> b
    93:95:com.badlogic.gdx.math.Vector2 sub(com.badlogic.gdx.math.Vector2) -> d
    101:106:com.badlogic.gdx.math.Vector2 nor() -> f
    113:115:com.badlogic.gdx.math.Vector2 add(com.badlogic.gdx.math.Vector2) -> b
    123:125:com.badlogic.gdx.math.Vector2 add(float,float) -> c
    131:131:float dot(com.badlogic.gdx.math.Vector2) -> e
    138:140:com.badlogic.gdx.math.Vector2 scl(float) -> c
    145:145:com.badlogic.gdx.math.Vector2 mul(float) -> d
    151:153:com.badlogic.gdx.math.Vector2 scl(float,float) -> e
    158:158:com.badlogic.gdx.math.Vector2 mul(float,float) -> f
    164:166:com.badlogic.gdx.math.Vector2 scl(com.badlogic.gdx.math.Vector2) -> f
    171:171:com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Vector2) -> g
    175:175:com.badlogic.gdx.math.Vector2 div(float) -> f
    179:179:com.badlogic.gdx.math.Vector2 div(float,float) -> g
    183:183:com.badlogic.gdx.math.Vector2 div(com.badlogic.gdx.math.Vector2) -> h
    189:191:float dst(com.badlogic.gdx.math.Vector2) -> c
    198:200:float dst(float,float) -> h
    206:208:float dst2(com.badlogic.gdx.math.Vector2) -> i
    215:217:float dst2(float,float) -> i
    224:228:com.badlogic.gdx.math.Vector2 limit(float) -> g
    236:243:com.badlogic.gdx.math.Vector2 clamp(float,float) -> j
    247:247:java.lang.String toString() -> toString
    255:257:com.badlogic.gdx.math.Vector2 sub(float,float) -> d
    264:268:com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Matrix3) -> a
    275:275:float crs(com.badlogic.gdx.math.Vector2) -> j
    283:283:float crs(float,float) -> k
    289:291:float angle() -> g
    297:299:void setAngle(float) -> h
    304:314:com.badlogic.gdx.math.Vector2 rotate(float) -> e
    324:327:com.badlogic.gdx.math.Vector2 lerp(com.badlogic.gdx.math.Vector2,float) -> a
    332:336:int hashCode() -> hashCode
    341:347:boolean equals(java.lang.Object) -> equals
    355:358:boolean epsilonEquals(com.badlogic.gdx.math.Vector2,float) -> b
    367:369:boolean epsilonEquals(float,float,float) -> a
    25:25:com.badlogic.gdx.math.Vector lerp(com.badlogic.gdx.math.Vector,float) -> a
    25:25:float dst2(com.badlogic.gdx.math.Vector) -> g
    25:25:float dst(com.badlogic.gdx.math.Vector) -> f
    25:25:com.badlogic.gdx.math.Vector scl(com.badlogic.gdx.math.Vector) -> e
    25:25:com.badlogic.gdx.math.Vector scl(float) -> b
    25:25:float dot(com.badlogic.gdx.math.Vector) -> d
    25:25:com.badlogic.gdx.math.Vector add(com.badlogic.gdx.math.Vector) -> c
    25:25:com.badlogic.gdx.math.Vector nor() -> d
    25:25:com.badlogic.gdx.math.Vector sub(com.badlogic.gdx.math.Vector) -> b
    25:25:com.badlogic.gdx.math.Vector set(com.badlogic.gdx.math.Vector) -> a
    25:25:com.badlogic.gdx.math.Vector clamp(float,float) -> a
    25:25:com.badlogic.gdx.math.Vector limit(float) -> a
    25:25:com.badlogic.gdx.math.Vector cpy() -> a
com.badlogic.gdx.math.Vector3 -> com.badlogic.gdx.math.ax:
    long serialVersionUID -> k
    float x -> a
    float y -> b
    float z -> c
    com.badlogic.gdx.math.Vector3 tmp -> d
    com.badlogic.gdx.math.Vector3 tmp2 -> e
    com.badlogic.gdx.math.Vector3 tmp3 -> f
    com.badlogic.gdx.math.Vector3 X -> g
    com.badlogic.gdx.math.Vector3 Y -> h
    com.badlogic.gdx.math.Vector3 Z -> i
    com.badlogic.gdx.math.Vector3 Zero -> j
    com.badlogic.gdx.math.Matrix4 tmpMat -> l
    87:90:com.badlogic.gdx.math.Vector3 set(float,float,float) -> a
    98:98:com.badlogic.gdx.math.Vector3 set(com.badlogic.gdx.math.Vector3) -> a
    106:106:com.badlogic.gdx.math.Vector3 set(float[]) -> a
    111:111:com.badlogic.gdx.math.Vector3 cpy() -> h
    120:120:com.badlogic.gdx.math.Vector3 tmp() -> e
    129:129:com.badlogic.gdx.math.Vector3 tmp2() -> f
    138:138:com.badlogic.gdx.math.Vector3 tmp3() -> i
    146:146:com.badlogic.gdx.math.Vector3 add(com.badlogic.gdx.math.Vector3) -> b
    155:155:com.badlogic.gdx.math.Vector3 add(float,float,float) -> b
    163:163:com.badlogic.gdx.math.Vector3 add(float) -> d
    170:170:com.badlogic.gdx.math.Vector3 sub(com.badlogic.gdx.math.Vector3) -> c
    180:180:com.badlogic.gdx.math.Vector3 sub(float,float,float) -> c
    188:188:com.badlogic.gdx.math.Vector3 sub(float) -> e
    195:195:com.badlogic.gdx.math.Vector3 scl(float) -> f
    200:200:com.badlogic.gdx.math.Vector3 mul(float) -> c
    207:207:com.badlogic.gdx.math.Vector3 scl(com.badlogic.gdx.math.Vector3) -> h
    212:212:com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Vector3) -> i
    221:221:com.badlogic.gdx.math.Vector3 scl(float,float,float) -> f
    226:226:com.badlogic.gdx.math.Vector3 mul(float,float,float) -> g
    231:231:com.badlogic.gdx.math.Vector3 scale(float,float,float) -> h
    239:239:com.badlogic.gdx.math.Vector3 div(float) -> g
    245:245:com.badlogic.gdx.math.Vector3 div(float,float,float) -> i
    251:251:com.badlogic.gdx.math.Vector3 div(com.badlogic.gdx.math.Vector3) -> j
    256:256:float len(float,float,float) -> d
    261:261:float len() -> b
    266:266:float len2(float,float,float) -> j
    271:271:float len2() -> c
    277:277:boolean idt(com.badlogic.gdx.math.Vector3) -> k
    282:285:float dst(float,float,float,float,float,float) -> b
    291:294:float dst(com.badlogic.gdx.math.Vector3) -> d
    299:302:float dst$483d241b(float,float) -> b
    307:310:float dst2(float,float,float,float,float,float) -> c
    317:320:float dst2(com.badlogic.gdx.math.Vector3) -> e
    329:332:float dst2(float,float,float) -> k
    338:341:com.badlogic.gdx.math.Vector3 nor() -> g
    346:346:float dot(float,float,float,float,float,float) -> a
    352:352:float dot(com.badlogic.gdx.math.Vector3) -> f
    361:361:float dot(float,float,float) -> e
    368:368:com.badlogic.gdx.math.Vector3 crs(com.badlogic.gdx.math.Vector3) -> g
    377:377:com.badlogic.gdx.math.Vector3 crs(float,float,float) -> l
    384:385:com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Matrix4) -> a
    393:393:com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Quaternion) -> a
    402:404:com.badlogic.gdx.math.Vector3 prj(com.badlogic.gdx.math.Matrix4) -> b
    414:415:com.badlogic.gdx.math.Vector3 rot(com.badlogic.gdx.math.Matrix4) -> c
    426:426:com.badlogic.gdx.math.Vector3 rotate(float,float,float,float) -> a
    435:436:com.badlogic.gdx.math.Vector3 rotate(com.badlogic.gdx.math.Vector3,float) -> a
    441:441:boolean isUnit() -> j
    446:446:boolean isUnit$133aef() -> k
    451:451:boolean isZero() -> l
    456:456:boolean isZero(float) -> h
    466:468:com.badlogic.gdx.math.Vector3 lerp(com.badlogic.gdx.math.Vector3,float) -> b
    478:495:com.badlogic.gdx.math.Vector3 slerp(com.badlogic.gdx.math.Vector3,float) -> c
    499:499:java.lang.String toString() -> toString
    506:508:com.badlogic.gdx.math.Vector3 limit(float) -> i
    516:523:com.badlogic.gdx.math.Vector3 clamp(float,float) -> c
    528:533:int hashCode() -> hashCode
    538:545:boolean equals(java.lang.Object) -> equals
    553:557:boolean epsilonEquals(com.badlogic.gdx.math.Vector3,float) -> d
    563:566:boolean epsilonEquals(float,float,float,float) -> b
    25:25:com.badlogic.gdx.math.Vector lerp(com.badlogic.gdx.math.Vector,float) -> a
    25:25:float dst2(com.badlogic.gdx.math.Vector) -> g
    25:25:float dst(com.badlogic.gdx.math.Vector) -> f
    25:25:com.badlogic.gdx.math.Vector scl(com.badlogic.gdx.math.Vector) -> e
    25:25:com.badlogic.gdx.math.Vector scl(float) -> b
    25:25:float dot(com.badlogic.gdx.math.Vector) -> d
    25:25:com.badlogic.gdx.math.Vector add(com.badlogic.gdx.math.Vector) -> c
    25:25:com.badlogic.gdx.math.Vector nor() -> d
    25:25:com.badlogic.gdx.math.Vector sub(com.badlogic.gdx.math.Vector) -> b
    25:25:com.badlogic.gdx.math.Vector set(com.badlogic.gdx.math.Vector) -> a
    25:25:com.badlogic.gdx.math.Vector clamp(float,float) -> a
    25:25:com.badlogic.gdx.math.Vector limit(float) -> a
    25:25:com.badlogic.gdx.math.Vector cpy() -> a
com.badlogic.gdx.math.WindowedMean -> com.badlogic.gdx.math.ay:
    float[] values -> a
    int added_values -> b
    int last_value -> c
    float mean -> d
    boolean dirty -> e
    41:41:boolean hasEnoughData() -> a
    46:51:void clear() -> b
    57:61:void addValue(float) -> a
    67:78:float getMean() -> c
    83:83:float getOldest() -> d
    88:88:float getLatest() -> e
    93:101:float standardDeviation() -> f
com.badlogic.gdx.math.collision.BoundingBox -> com.badlogic.gdx.math.a.a:
    long serialVersionUID -> g
    com.badlogic.gdx.math.Vector3[] crn -> a
    com.badlogic.gdx.math.Vector3 min -> b
    com.badlogic.gdx.math.Vector3 max -> c
    com.badlogic.gdx.math.Vector3 cnt -> d
    com.badlogic.gdx.math.Vector3 dim -> e
    boolean crn_dirty -> f
    40:40:com.badlogic.gdx.math.Vector3 getCenter() -> c
    44:55:void updateCorners() -> d
    59:60:com.badlogic.gdx.math.Vector3[] getCorners() -> a
    65:65:com.badlogic.gdx.math.Vector3 getDimensions() -> e
    70:70:com.badlogic.gdx.math.Vector3 getMin() -> f
    75:75:com.badlogic.gdx.math.Vector3 getMax() -> g
    112:113:com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.collision.BoundingBox) -> b
    122:129:com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    137:141:com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.Vector3[]) -> a
    149:153:com.badlogic.gdx.math.collision.BoundingBox set(java.util.List) -> a
    160:165:com.badlogic.gdx.math.collision.BoundingBox inf() -> b
    173:174:com.badlogic.gdx.math.collision.BoundingBox ext(com.badlogic.gdx.math.Vector3) -> a
    182:183:com.badlogic.gdx.math.collision.BoundingBox clr() -> h
    190:190:boolean isValid() -> i
    198:199:com.badlogic.gdx.math.collision.BoundingBox ext(com.badlogic.gdx.math.collision.BoundingBox) -> a
    209:217:com.badlogic.gdx.math.collision.BoundingBox mul(com.badlogic.gdx.math.Matrix4) -> a
    224:231:boolean contains(com.badlogic.gdx.math.collision.BoundingBox) -> c
    238:245:boolean contains(com.badlogic.gdx.math.Vector3) -> b
    249:249:java.lang.String toString() -> toString
    259:260:com.badlogic.gdx.math.collision.BoundingBox ext(float,float,float) -> a
    264:264:float min(float,float) -> a
    268:268:float max(float,float) -> b
com.badlogic.gdx.math.collision.Ray -> com.badlogic.gdx.math.a.b:
    long serialVersionUID -> d
    com.badlogic.gdx.math.Vector3 origin -> a
    com.badlogic.gdx.math.Vector3 direction -> b
    com.badlogic.gdx.math.Vector3 tmp -> c
    43:43:com.badlogic.gdx.math.collision.Ray cpy() -> a
    51:51:com.badlogic.gdx.math.Vector3 getEndPoint(float) -> a
    61:65:com.badlogic.gdx.math.collision.Ray mul(com.badlogic.gdx.math.Matrix4) -> a
    70:70:java.lang.String toString() -> toString
    79:81:com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    94:96:com.badlogic.gdx.math.collision.Ray set(float,float,float,float,float,float) -> a
    105:107:com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.collision.Ray) -> a
com.badlogic.gdx.math.collision.Segment -> com.badlogic.gdx.math.a.c:
    long serialVersionUID -> c
    com.badlogic.gdx.math.Vector3 a -> a
    com.badlogic.gdx.math.Vector3 b -> b
com.badlogic.gdx.math.collision.Sphere -> com.badlogic.gdx.math.a.d:
    long serialVersionUID -> c
    float radius -> a
    com.badlogic.gdx.math.Vector3 center -> b
    44:44:boolean overlaps(com.badlogic.gdx.math.collision.Sphere) -> a
com.badlogic.gdx.net.HttpStatus -> com.badlogic.gdx.f.a:
    int statusCode -> a
    int SC_CONTINUE -> b
    int SC_SWITCHING_PROTOCOLS -> c
    int SC_PROCESSING -> d
    int SC_OK -> e
    int SC_CREATED -> f
    int SC_ACCEPTED -> g
    int SC_NON_AUTHORITATIVE_INFORMATION -> h
    int SC_NO_CONTENT -> i
    int SC_RESET_CONTENT -> j
    int SC_PARTIAL_CONTENT -> k
    int SC_MULTI_STATUS -> l
    int SC_MULTIPLE_CHOICES -> m
    int SC_MOVED_PERMANENTLY -> n
    int SC_MOVED_TEMPORARILY -> o
    int SC_SEE_OTHER -> p
    int SC_NOT_MODIFIED -> q
    int SC_USE_PROXY -> r
    int SC_TEMPORARY_REDIRECT -> s
    int SC_BAD_REQUEST -> t
    int SC_UNAUTHORIZED -> u
    int SC_PAYMENT_REQUIRED -> v
    int SC_FORBIDDEN -> w
    int SC_NOT_FOUND -> x
    int SC_METHOD_NOT_ALLOWED -> y
    int SC_NOT_ACCEPTABLE -> z
    int SC_PROXY_AUTHENTICATION_REQUIRED -> A
    int SC_REQUEST_TIMEOUT -> B
    int SC_CONFLICT -> C
    int SC_GONE -> D
    int SC_LENGTH_REQUIRED -> E
    int SC_PRECONDITION_FAILED -> F
    int SC_REQUEST_TOO_LONG -> G
    int SC_REQUEST_URI_TOO_LONG -> H
    int SC_UNSUPPORTED_MEDIA_TYPE -> I
    int SC_REQUESTED_RANGE_NOT_SATISFIABLE -> J
    int SC_EXPECTATION_FAILED -> K
    int SC_INSUFFICIENT_SPACE_ON_RESOURCE -> L
    int SC_METHOD_FAILURE -> M
    int SC_UNPROCESSABLE_ENTITY -> N
    int SC_LOCKED -> O
    int SC_FAILED_DEPENDENCY -> P
    int SC_INTERNAL_SERVER_ERROR -> Q
    int SC_NOT_IMPLEMENTED -> R
    int SC_BAD_GATEWAY -> S
    int SC_SERVICE_UNAVAILABLE -> T
    int SC_GATEWAY_TIMEOUT -> U
    int SC_HTTP_VERSION_NOT_SUPPORTED -> V
    int SC_INSUFFICIENT_STORAGE -> W
    22:22:int getStatusCode() -> a
com.badlogic.gdx.net.NetJavaImpl -> com.badlogic.gdx.f.b:
    java.util.concurrent.ExecutorService executorService -> a
    99:190:void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener) -> a
com.badlogic.gdx.net.NetJavaImpl$1 -> com.badlogic.gdx.f.c:
    java.lang.String val$method -> a
    com.badlogic.gdx.Net$HttpRequest val$httpRequest -> b
    java.net.HttpURLConnection val$connection -> c
    com.badlogic.gdx.Net$HttpResponseListener val$httpResponseListener -> d
    com.badlogic.gdx.net.NetJavaImpl this$0 -> e
    140:186:void run() -> run
com.badlogic.gdx.net.NetJavaImpl$1$1 -> com.badlogic.gdx.f.d:
    com.badlogic.gdx.net.NetJavaImpl$1 this$1 -> a
    165:169:void run() -> run
com.badlogic.gdx.net.NetJavaImpl$1$2 -> com.badlogic.gdx.f.e:
    java.lang.Exception val$e -> a
    com.badlogic.gdx.net.NetJavaImpl$1 this$1 -> b
    178:180:void run() -> run
com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse -> com.badlogic.gdx.f.f:
    java.net.HttpURLConnection connection -> a
    com.badlogic.gdx.net.HttpStatus status -> b
    java.io.InputStream inputStream -> c
    50:63:byte[] getResult() -> a
    68:76:java.lang.String getResultAsString() -> b
    82:82:java.io.InputStream getResultAsStream() -> c
    87:87:com.badlogic.gdx.net.HttpStatus getStatus() -> d
com.badlogic.gdx.net.ServerSocket -> com.badlogic.gdx.f.g:
    com.badlogic.gdx.Net$Protocol getProtocol() -> getProtocol
    com.badlogic.gdx.net.Socket accept(com.badlogic.gdx.net.SocketHints) -> accept
com.badlogic.gdx.net.ServerSocketHints -> com.badlogic.gdx.f.h:
    int backlog -> a
    int performancePrefConnectionTime -> b
    int performancePrefLatency -> c
    int performancePrefBandwidth -> d
    boolean reuseAddress -> e
    int acceptTimeout -> f
    int receiveBufferSize -> g
com.badlogic.gdx.net.Socket -> com.badlogic.gdx.f.i:
    boolean isConnected() -> isConnected
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
com.badlogic.gdx.net.SocketHints -> com.badlogic.gdx.f.j:
    int connectTimeout -> a
    int performancePrefConnectionTime -> b
    int performancePrefLatency -> c
    int performancePrefBandwidth -> d
    int trafficClass -> e
    boolean keepAlive -> f
    boolean tcpNoDelay -> g
    int sendBufferSize -> h
    int receiveBufferSize -> i
    boolean linger -> j
    int lingerDuration -> k
com.badlogic.gdx.physics.box2d.Body -> com.badlogic.gdx.physics.box2d.Body:
    long addr -> a
    float[] tmp -> g
    com.badlogic.gdx.physics.box2d.World world -> h
    java.util.ArrayList fixtures -> i
    java.util.ArrayList joints -> b
    java.lang.Object userData -> j
    com.badlogic.gdx.physics.box2d.Transform transform -> k
    com.badlogic.gdx.math.Vector2 position -> l
    com.badlogic.gdx.math.Vector2 worldCenter -> m
    com.badlogic.gdx.math.Vector2 localCenter -> n
    com.badlogic.gdx.math.Vector2 linearVelocity -> o
    com.badlogic.gdx.physics.box2d.MassData massData -> p
    com.badlogic.gdx.math.Vector2 localPoint -> q
    com.badlogic.gdx.math.Vector2 worldVector -> r
    com.badlogic.gdx.math.Vector2 localPoint2 -> c
    com.badlogic.gdx.math.Vector2 localVector -> d
    com.badlogic.gdx.math.Vector2 linVelWorld -> e
    com.badlogic.gdx.math.Vector2 linVelLoc -> f
    60:66:void reset(long) -> a
    74:80:com.badlogic.gdx.physics.box2d.Fixture createFixture(com.badlogic.gdx.physics.box2d.FixtureDef) -> a
    long jniCreateFixture(long,long,float,float,float,boolean,short,short,short) -> jniCreateFixture
    108:113:com.badlogic.gdx.physics.box2d.Fixture createFixture(com.badlogic.gdx.physics.box2d.Shape,float) -> a
    long jniCreateFixture(long,long,float) -> jniCreateFixture
    128:132:void destroyFixture(com.badlogic.gdx.physics.box2d.Fixture) -> a
    void jniDestroyFixture(long,long) -> jniDestroyFixture
    145:146:void setTransform(com.badlogic.gdx.math.Vector2,float) -> a
    154:155:void setTransform(float,float,float) -> a
    166:167:void setTransform(float,float,float,boolean) -> a
    void jniSetTransform(long,float,float,float) -> jniSetTransform
    void jniSetTransform(long,float,float,float,boolean) -> jniSetTransform
    183:184:com.badlogic.gdx.physics.box2d.Transform getTransform() -> a
    void jniGetTransform(long,float[]) -> jniGetTransform
    201:204:com.badlogic.gdx.math.Vector2 getPosition() -> b
    void jniGetPosition(long,float[]) -> jniGetPosition
    217:217:float getAngle() -> c
    float jniGetAngle(long) -> jniGetAngle
    229:232:com.badlogic.gdx.math.Vector2 getWorldCenter() -> k
    void jniGetWorldCenter(long,float[]) -> jniGetWorldCenter
    246:249:com.badlogic.gdx.math.Vector2 getLocalCenter() -> l
    void jniGetLocalCenter(long,float[]) -> jniGetLocalCenter
    261:262:void setLinearVelocity(com.badlogic.gdx.math.Vector2) -> c
    266:267:void setLinearVelocity(float,float) -> a
    void jniSetLinearVelocity(long,float,float) -> jniSetLinearVelocity
    278:281:com.badlogic.gdx.math.Vector2 getLinearVelocity() -> d
    void jniGetLinearVelocity(long,float[]) -> jniGetLinearVelocity
    293:294:void setAngularVelocity(float) -> a
    void jniSetAngularVelocity(long,float) -> jniSetAngularVelocity
    303:303:float getAngularVelocity() -> m
    float jniGetAngularVelocity(long) -> jniGetAngularVelocity
    316:317:void applyForce(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> a
    326:327:void applyForce(float,float,float,float) -> a
    void jniApplyForce(long,float,float,float,float) -> jniApplyForce
    337:338:void applyForceToCenter(com.badlogic.gdx.math.Vector2) -> d
    344:345:void applyForceToCenter(float,float) -> b
    void jniApplyForceToCenter(long,float,float) -> jniApplyForceToCenter
    356:357:void applyTorque(float) -> b
    void jniApplyTorque(long,float) -> jniApplyTorque
    369:370:void applyLinearImpulse(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> b
    379:380:void applyLinearImpulse(float,float,float,float) -> b
    void jniApplyLinearImpulse(long,float,float,float,float) -> jniApplyLinearImpulse
    390:391:void applyAngularImpulse(float) -> c
    void jniApplyAngularImpulse(long,float) -> jniApplyAngularImpulse
    401:401:float getMass() -> n
    float jniGetMass(long) -> jniGetMass
    412:412:float getInertia() -> o
    float jniGetInertia(long) -> jniGetInertia
    425:430:com.badlogic.gdx.physics.box2d.MassData getMassData() -> p
    void jniGetMassData(long,float[]) -> jniGetMassData
    447:448:void setMassData(com.badlogic.gdx.physics.box2d.MassData) -> a
    void jniSetMassData(long,float,float,float,float) -> jniSetMassData
    463:464:void resetMassData() -> q
    void jniResetMassData(long) -> jniResetMassData
    477:480:com.badlogic.gdx.math.Vector2 getWorldPoint(com.badlogic.gdx.math.Vector2) -> e
    void jniGetWorldPoint(long,float,float,float[]) -> jniGetWorldPoint
    496:499:com.badlogic.gdx.math.Vector2 getWorldVector(com.badlogic.gdx.math.Vector2) -> f
    void jniGetWorldVector(long,float,float,float[]) -> jniGetWorldVector
    515:518:com.badlogic.gdx.math.Vector2 getLocalPoint(com.badlogic.gdx.math.Vector2) -> a
    void jniGetLocalPoint(long,float,float,float[]) -> jniGetLocalPoint
    534:537:com.badlogic.gdx.math.Vector2 getLocalVector(com.badlogic.gdx.math.Vector2) -> b
    void jniGetLocalVector(long,float,float,float[]) -> jniGetLocalVector
    553:556:com.badlogic.gdx.math.Vector2 getLinearVelocityFromWorldPoint(com.badlogic.gdx.math.Vector2) -> g
    void jniGetLinearVelocityFromWorldPoint(long,float,float,float[]) -> jniGetLinearVelocityFromWorldPoint
    572:575:com.badlogic.gdx.math.Vector2 getLinearVelocityFromLocalPoint(com.badlogic.gdx.math.Vector2) -> h
    void jniGetLinearVelocityFromLocalPoint(long,float,float,float[]) -> jniGetLinearVelocityFromLocalPoint
    587:587:float getLinearDamping() -> r
    float jniGetLinearDamping(long) -> jniGetLinearDamping
    597:598:void setLinearDamping(float) -> d
    void jniSetLinearDamping(long,float) -> jniSetLinearDamping
    607:607:float getAngularDamping() -> s
    float jniGetAngularDamping(long) -> jniGetAngularDamping
    617:618:void setAngularDamping(float) -> e
    void jniSetAngularDamping(long,float) -> jniSetAngularDamping
    627:628:void setType(com.badlogic.gdx.physics.box2d.BodyDef$BodyType) -> a
    void jniSetType(long,int) -> jniSetType
    652:656:com.badlogic.gdx.physics.box2d.BodyDef$BodyType getType() -> e
    int jniGetType(long) -> jniGetType
    666:667:void setBullet(boolean) -> a
    void jniSetBullet(long,boolean) -> jniSetBullet
    676:676:boolean isBullet() -> t
    boolean jniIsBullet(long) -> jniIsBullet
    686:687:void setSleepingAllowed(boolean) -> b
    void jniSetSleepingAllowed(long,boolean) -> jniSetSleepingAllowed
    696:696:boolean isSleepingAllowed() -> u
    boolean jniIsSleepingAllowed(long) -> jniIsSleepingAllowed
    707:708:void setAwake(boolean) -> c
    void jniSetAwake(long,boolean) -> jniSetAwake
    718:718:boolean isAwake() -> f
    boolean jniIsAwake(long) -> jniIsAwake
    733:734:void setActive(boolean) -> d
    void jniSetActive(long,boolean) -> jniSetActive
    743:743:boolean isActive() -> g
    boolean jniIsActive(long) -> jniIsActive
    753:754:void setFixedRotation(boolean) -> e
    void jniSetFixedRotation(long,boolean) -> jniSetFixedRotation
    763:763:boolean isFixedRotation() -> v
    boolean jniIsFixedRotation(long) -> jniIsFixedRotation
    773:773:java.util.ArrayList getFixtureList() -> h
    778:778:java.util.ArrayList getJointList() -> i
    791:791:float getGravityScale() -> w
    float jniGetGravityScale(long) -> jniGetGravityScale
    801:802:void setGravityScale(float) -> f
    void jniSetGravityScale(long,float) -> jniSetGravityScale
    811:811:com.badlogic.gdx.physics.box2d.World getWorld() -> x
    816:816:java.lang.Object getUserData() -> y
    821:822:void setUserData$5d527811() -> j
com.badlogic.gdx.physics.box2d.BodyDef -> com.badlogic.gdx.physics.box2d.a:
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType type -> a
    com.badlogic.gdx.math.Vector2 position -> b
    float angle -> c
    com.badlogic.gdx.math.Vector2 linearVelocity -> d
    float angularVelocity -> e
    float linearDamping -> f
    float angularDamping -> g
    boolean allowSleep -> h
    boolean awake -> i
    boolean fixedRotation -> j
    boolean bullet -> k
    boolean active -> l
    float gravityScale -> m
com.badlogic.gdx.physics.box2d.BodyDef$BodyType -> com.badlogic.gdx.physics.box2d.b:
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType StaticBody -> a
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType KinematicBody -> b
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType DynamicBody -> c
    int value -> d
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType[] $VALUES -> e
    28:28:com.badlogic.gdx.physics.box2d.BodyDef$BodyType[] values() -> values
    28:28:com.badlogic.gdx.physics.box2d.BodyDef$BodyType valueOf(java.lang.String) -> valueOf
    38:38:int getValue() -> a
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer -> com.badlogic.gdx.physics.box2d.c:
    com.badlogic.gdx.graphics.glutils.ShapeRenderer renderer -> a
    com.badlogic.gdx.math.Vector2[] vertices -> b
    com.badlogic.gdx.math.Vector2 lower -> c
    com.badlogic.gdx.math.Vector2 upper -> d
    boolean drawBodies -> e
    boolean drawJoints -> f
    boolean drawAABBs -> g
    boolean drawInactiveBodies -> h
    boolean drawVelocities -> i
    com.badlogic.gdx.graphics.Color SHAPE_NOT_ACTIVE -> j
    com.badlogic.gdx.graphics.Color SHAPE_STATIC -> k
    com.badlogic.gdx.graphics.Color SHAPE_KINEMATIC -> l
    com.badlogic.gdx.graphics.Color SHAPE_NOT_AWAKE -> m
    com.badlogic.gdx.graphics.Color SHAPE_AWAKE -> n
    com.badlogic.gdx.graphics.Color JOINT_COLOR -> o
    com.badlogic.gdx.graphics.Color AABB_COLOR -> p
    com.badlogic.gdx.graphics.Color VELOCITY_COLOR -> q
    com.badlogic.gdx.math.Vector2 t -> r
    com.badlogic.gdx.math.Vector2 axis -> s
    com.badlogic.gdx.math.Vector2 f -> t
    com.badlogic.gdx.math.Vector2 v -> u
    com.badlogic.gdx.math.Vector2 lv -> v
    75:77:void render(com.badlogic.gdx.physics.box2d.World,com.badlogic.gdx.math.Matrix4) -> a
    89:113:void renderBodies(com.badlogic.gdx.physics.box2d.World) -> a
    116:144:void renderBody(com.badlogic.gdx.physics.box2d.Body) -> a
    147:187:void drawAABB(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.physics.box2d.Transform) -> a
    193:228:void drawShape(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.physics.box2d.Transform,com.badlogic.gdx.graphics.Color) -> a
    235:250:void drawSolidCircle(com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.graphics.Color) -> a
    253:265:void drawSolidPolygon(com.badlogic.gdx.math.Vector2[],int,com.badlogic.gdx.graphics.Color,boolean) -> a
    268:294:void drawJoint(com.badlogic.gdx.physics.box2d.Joint) -> a
    297:299:void drawSegment(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.graphics.Color) -> a
    302:306:void drawContact(com.badlogic.gdx.physics.box2d.Contact) -> a
    309:309:boolean isDrawBodies() -> a
    313:314:void setDrawBodies(boolean) -> a
    317:317:boolean isDrawJoints() -> b
    321:322:void setDrawJoints(boolean) -> b
    325:325:boolean isDrawAABBs() -> c
    329:330:void setDrawAABBs(boolean) -> c
    333:333:boolean isDrawInactiveBodies() -> d
    337:338:void setDrawInactiveBodies(boolean) -> d
    341:341:boolean isDrawVelocities() -> e
    345:346:void setDrawVelocities(boolean) -> e
    349:349:com.badlogic.gdx.math.Vector2 getAxis() -> f
    353:354:void setAxis(com.badlogic.gdx.math.Vector2) -> a
    357:358:void dispose() -> g
com.badlogic.gdx.physics.box2d.ChainShape -> com.badlogic.gdx.physics.box2d.ChainShape:
    boolean isLooped -> a
    float[] verts -> c
    long newChainShape() -> newChainShape
    42:42:com.badlogic.gdx.physics.box2d.Shape$Type getType() -> a
    48:55:void createLoop(com.badlogic.gdx.math.Vector2[]) -> a
    void jniCreateLoop(long,float[],int) -> jniCreateLoop
    69:76:void createChain(com.badlogic.gdx.math.Vector2[]) -> b
    void jniCreateChain(long,float[],int) -> jniCreateChain
    89:90:void setPrevVertex(com.badlogic.gdx.math.Vector2) -> a
    94:95:void setPrevVertex(float,float) -> a
    void jniSetPrevVertex(long,float,float) -> jniSetPrevVertex
    104:105:void setNextVertex(com.badlogic.gdx.math.Vector2) -> b
    109:110:void setNextVertex(float,float) -> b
    void jniSetNextVertex(long,float,float) -> jniSetNextVertex
    119:119:int getVertexCount() -> b
    int jniGetVertexCount(long) -> jniGetVertexCount
    133:136:void getVertex(int,com.badlogic.gdx.math.Vector2) -> a
    void jniGetVertex(long,int,float[]) -> jniGetVertex
    146:146:boolean isLooped() -> d
com.badlogic.gdx.physics.box2d.CircleShape -> com.badlogic.gdx.physics.box2d.CircleShape:
    float[] tmp -> a
    com.badlogic.gdx.math.Vector2 position -> c
    long newCircleShape() -> newCircleShape
    44:44:com.badlogic.gdx.physics.box2d.Shape$Type getType() -> a
    52:55:com.badlogic.gdx.math.Vector2 getPosition() -> b
    void jniGetPosition(long,float[]) -> jniGetPosition
    66:67:void setPosition(com.badlogic.gdx.math.Vector2) -> a
    void jniSetPosition(long,float,float) -> jniSetPosition
com.badlogic.gdx.physics.box2d.Contact -> com.badlogic.gdx.physics.box2d.Contact:
    long addr -> a
    com.badlogic.gdx.physics.box2d.World world -> b
    com.badlogic.gdx.physics.box2d.WorldManifold worldManifold -> c
    float[] tmp -> d
    48:58:com.badlogic.gdx.physics.box2d.WorldManifold getWorldManifold() -> a
    int jniGetWorldManifold(long,float[]) -> jniGetWorldManifold
    80:80:boolean isTouching() -> b
    boolean jniIsTouching(long) -> jniIsTouching
    91:92:void setEnabled(boolean) -> a
    void jniSetEnabled(long,boolean) -> jniSetEnabled
    101:101:boolean isEnabled() -> c
    boolean jniIsEnabled(long) -> jniIsEnabled
    111:111:com.badlogic.gdx.physics.box2d.Fixture getFixtureA() -> d
    long jniGetFixtureA(long) -> jniGetFixtureA
    121:121:com.badlogic.gdx.physics.box2d.Fixture getFixtureB() -> e
    long jniGetFixtureB(long) -> jniGetFixtureB
    131:131:int getChildIndexA() -> f
    int jniGetChildIndexA(long) -> jniGetChildIndexA
    141:141:int getChildIndexB() -> g
    int jniGetChildIndexB(long) -> jniGetChildIndexB
    152:153:void setFriction(float) -> a
    void jniSetFriction(long,float) -> jniSetFriction
    162:162:float getFriction() -> h
    float jniGetFriction(long) -> jniGetFriction
    172:173:void resetFriction() -> i
    void jniResetFriction(long) -> jniResetFriction
    183:184:void setRestitution(float) -> b
    void jniSetRestitution(long,float) -> jniSetRestitution
    193:193:float getRestitution() -> j
    float jniGetRestitution(long) -> jniGetRestitution
    203:204:void ResetRestitution() -> k
    void jniResetRestitution(long) -> jniResetRestitution
com.badlogic.gdx.physics.box2d.ContactFilter -> com.badlogic.gdx.physics.box2d.d:
    boolean shouldCollide$41f686cf() -> a
com.badlogic.gdx.physics.box2d.ContactImpulse -> com.badlogic.gdx.physics.box2d.ContactImpulse:
    com.badlogic.gdx.physics.box2d.World world -> a
    long addr -> b
    float[] tmp -> c
    float[] normalImpulses -> d
    float[] tangentImpulses -> e
    40:41:float[] getNormalImpulses() -> a
    void jniGetNormalImpulses(long,float[]) -> jniGetNormalImpulses
    51:52:float[] getTangentImpulses() -> b
    void jniGetTangentImpulses(long,float[]) -> jniGetTangentImpulses
    62:62:int getCount() -> c
    int jniGetCount(long) -> jniGetCount
com.badlogic.gdx.physics.box2d.ContactListener -> com.badlogic.gdx.physics.box2d.e:
    void beginContact$40399ada() -> a
    void endContact$40399ada() -> b
    void preSolve$48d15bf() -> c
    void postSolve$538b9884() -> d
com.badlogic.gdx.physics.box2d.DestructionListener -> com.badlogic.gdx.physics.box2d.f:
com.badlogic.gdx.physics.box2d.EdgeShape -> com.badlogic.gdx.physics.box2d.EdgeShape:
    float[] vertex -> a
    long newEdgeShape() -> newEdgeShape
    43:44:void set(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> a
    48:49:void set(float,float,float,float) -> a
    void jniSet(long,float,float,float,float) -> jniSet
    59:62:void getVertex1(com.badlogic.gdx.math.Vector2) -> a
    void jniGetVertex1(long,float[]) -> jniGetVertex1
    71:74:void getVertex2(com.badlogic.gdx.math.Vector2) -> b
    void jniGetVertex2(long,float[]) -> jniGetVertex2
    104:104:com.badlogic.gdx.physics.box2d.Shape$Type getType() -> a
com.badlogic.gdx.physics.box2d.Filter -> com.badlogic.gdx.physics.box2d.g:
    short categoryBits -> a
    short maskBits -> b
    short groupIndex -> c
com.badlogic.gdx.physics.box2d.Fixture -> com.badlogic.gdx.physics.box2d.Fixture:
    com.badlogic.gdx.physics.box2d.Body body -> d
    long addr -> a
    com.badlogic.gdx.physics.box2d.Shape shape -> b
    java.lang.Object userData -> c
    short[] tmp -> e
    com.badlogic.gdx.physics.box2d.Filter filter -> f
    48:52:void reset(com.badlogic.gdx.physics.box2d.Body,long) -> a
    57:68:com.badlogic.gdx.physics.box2d.Shape$Type getType() -> a
    int jniGetType(long) -> jniGetType
    88:111:com.badlogic.gdx.physics.box2d.Shape getShape() -> b
    long jniGetShape(long) -> jniGetShape
    121:122:void setSensor(boolean) -> a
    void jniSetSensor(long,boolean) -> jniSetSensor
    132:132:boolean isSensor() -> e
    boolean jniIsSensor(long) -> jniIsSensor
    143:144:void setFilterData(com.badlogic.gdx.physics.box2d.Filter) -> a
    void jniSetFilterData(long,short,short,short) -> jniSetFilterData
    160:164:com.badlogic.gdx.physics.box2d.Filter getFilterData() -> c
    void jniGetFilterData(long,short[]) -> jniGetFilterData
    178:179:void refilter() -> f
    void jniRefilter(long) -> jniRefilter
    188:188:com.badlogic.gdx.physics.box2d.Body getBody() -> g
    194:194:boolean testPoint(com.badlogic.gdx.math.Vector2) -> a
    201:201:boolean testPoint(float,float) -> a
    boolean jniTestPoint(long,float,float) -> jniTestPoint
    236:237:void setDensity(float) -> a
    void jniSetDensity(long,float) -> jniSetDensity
    246:246:float getDensity() -> h
    float jniGetDensity(long) -> jniGetDensity
    256:256:float getFriction() -> i
    float jniGetFriction(long) -> jniGetFriction
    266:267:void setFriction(float) -> b
    void jniSetFriction(long,float) -> jniSetFriction
    276:276:float getRestitution() -> j
    float jniGetRestitution(long) -> jniGetRestitution
    286:287:void setRestitution(float) -> c
    void jniSetRestitution(long,float) -> jniSetRestitution
    301:302:void setUserData$5d527811() -> d
    306:306:java.lang.Object getUserData() -> k
com.badlogic.gdx.physics.box2d.FixtureDef -> com.badlogic.gdx.physics.box2d.h:
    com.badlogic.gdx.physics.box2d.Shape shape -> a
    float friction -> b
    float restitution -> c
    float density -> d
    boolean isSensor -> e
    com.badlogic.gdx.physics.box2d.Filter filter -> f
com.badlogic.gdx.physics.box2d.Joint -> com.badlogic.gdx.physics.box2d.Joint:
    long addr -> a
    com.badlogic.gdx.physics.box2d.World world -> d
    float[] tmp -> e
    com.badlogic.gdx.physics.box2d.JointEdge jointEdgeA -> b
    com.badlogic.gdx.physics.box2d.JointEdge jointEdgeB -> c
    com.badlogic.gdx.math.Vector2 anchorA -> f
    com.badlogic.gdx.math.Vector2 anchorB -> g
    com.badlogic.gdx.math.Vector2 reactionForce -> h
    51:55:com.badlogic.gdx.physics.box2d.JointDef$JointType getType() -> a
    int jniGetType(long) -> jniGetType
    65:65:com.badlogic.gdx.physics.box2d.Body getBodyA() -> b
    long jniGetBodyA(long) -> jniGetBodyA
    75:75:com.badlogic.gdx.physics.box2d.Body getBodyB() -> c
    long jniGetBodyB(long) -> jniGetBodyB
    87:90:com.badlogic.gdx.math.Vector2 getAnchorA() -> d
    void jniGetAnchorA(long,float[]) -> jniGetAnchorA
    104:107:com.badlogic.gdx.math.Vector2 getAnchorB() -> e
    void jniGetAnchorB(long,float[]) -> jniGetAnchorB
    121:124:com.badlogic.gdx.math.Vector2 getReactionForce(float) -> a
    void jniGetReactionForce(long,float,float[]) -> jniGetReactionForce
    136:136:float getReactionTorque(float) -> b
    float jniGetReactionTorque(long,float) -> jniGetReactionTorque
    155:155:boolean isActive() -> f
    boolean jniIsActive(long) -> jniIsActive
com.badlogic.gdx.physics.box2d.JointDef -> com.badlogic.gdx.physics.box2d.i:
    com.badlogic.gdx.physics.box2d.JointDef$JointType type -> a
    com.badlogic.gdx.physics.box2d.Body bodyA -> b
    com.badlogic.gdx.physics.box2d.Body bodyB -> c
    boolean collideConnected -> d
com.badlogic.gdx.physics.box2d.JointDef$JointType -> com.badlogic.gdx.physics.box2d.j:
    com.badlogic.gdx.physics.box2d.JointDef$JointType Unknown -> a
    com.badlogic.gdx.physics.box2d.JointDef$JointType RevoluteJoint -> b
    com.badlogic.gdx.physics.box2d.JointDef$JointType PrismaticJoint -> c
    com.badlogic.gdx.physics.box2d.JointDef$JointType DistanceJoint -> d
    com.badlogic.gdx.physics.box2d.JointDef$JointType PulleyJoint -> e
    com.badlogic.gdx.physics.box2d.JointDef$JointType MouseJoint -> f
    com.badlogic.gdx.physics.box2d.JointDef$JointType GearJoint -> g
    com.badlogic.gdx.physics.box2d.JointDef$JointType WheelJoint -> h
    com.badlogic.gdx.physics.box2d.JointDef$JointType WeldJoint -> i
    com.badlogic.gdx.physics.box2d.JointDef$JointType FrictionJoint -> j
    com.badlogic.gdx.physics.box2d.JointDef$JointType RopeJoint -> k
    com.badlogic.gdx.physics.box2d.JointDef$JointType[] valueTypes -> l
    int value -> m
    com.badlogic.gdx.physics.box2d.JointDef$JointType[] $VALUES -> n
    20:20:com.badlogic.gdx.physics.box2d.JointDef$JointType[] values() -> values
    20:20:com.badlogic.gdx.physics.box2d.JointDef$JointType valueOf(java.lang.String) -> valueOf
    33:33:int getValue() -> a
com.badlogic.gdx.physics.box2d.JointEdge -> com.badlogic.gdx.physics.box2d.k:
    com.badlogic.gdx.physics.box2d.Body other -> a
    com.badlogic.gdx.physics.box2d.Joint joint -> b
com.badlogic.gdx.physics.box2d.Manifold -> com.badlogic.gdx.physics.box2d.Manifold:
    long addr -> a
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint[] points -> b
    com.badlogic.gdx.math.Vector2 localNormal -> c
    com.badlogic.gdx.math.Vector2 localPoint -> d
    int[] tmpInt -> e
    float[] tmpFloat -> f
    40:44:com.badlogic.gdx.physics.box2d.Manifold$ManifoldType getType() -> a
    int jniGetType(long) -> jniGetType
    53:53:int getPointCount() -> b
    int jniGetPointCount(long) -> jniGetPointCount
    62:64:com.badlogic.gdx.math.Vector2 getLocalNormal() -> c
    void jniGetLocalNormal(long,float[]) -> jniGetLocalNormal
    74:76:com.badlogic.gdx.math.Vector2 getLocalPoint() -> d
    void jniGetLocalPoint(long,float[]) -> jniGetLocalPoint
    86:97:com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint[] getPoints() -> e
    int jniGetPoint(long,float[],int) -> jniGetPoint
com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint -> com.badlogic.gdx.physics.box2d.l:
    com.badlogic.gdx.math.Vector2 localPoint -> a
    float normalImpulse -> b
    float tangentImpulse -> c
    int contactID -> d
    com.badlogic.gdx.physics.box2d.Manifold this$0 -> e
    118:118:java.lang.String toString() -> toString
com.badlogic.gdx.physics.box2d.Manifold$ManifoldType -> com.badlogic.gdx.physics.box2d.m:
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType Circle -> a
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType FaceA -> b
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType FaceB -> c
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType[] $VALUES -> d
    122:122:com.badlogic.gdx.physics.box2d.Manifold$ManifoldType[] values() -> values
    122:122:com.badlogic.gdx.physics.box2d.Manifold$ManifoldType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.physics.box2d.MassData -> com.badlogic.gdx.physics.box2d.n:
    float mass -> a
    com.badlogic.gdx.math.Vector2 center -> b
    float I -> c
com.badlogic.gdx.physics.box2d.PolygonShape -> com.badlogic.gdx.physics.box2d.PolygonShape:
    float[] verts -> a
    long newPolygonShape() -> newPolygonShape
    44:44:com.badlogic.gdx.physics.box2d.Shape$Type getType() -> a
    50:56:void set(com.badlogic.gdx.math.Vector2[]) -> a
    61:62:void set(float[]) -> a
    67:68:void set(float[],int,int) -> a
    void jniSet(long,float[],int,int) -> jniSet
    85:86:void setAsBox(float,float) -> a
    void jniSetAsBox(long,float,float) -> jniSetAsBox
    99:100:void setAsBox(float,float,com.badlogic.gdx.math.Vector2,float) -> a
    void jniSetAsBox(long,float,float,float,float,float) -> jniSetAsBox
    109:109:int getVertexCount() -> b
    int jniGetVertexCount(long) -> jniGetVertexCount
    123:126:void getVertex(int,com.badlogic.gdx.math.Vector2) -> a
    void jniGetVertex(long,int,float[]) -> jniGetVertex
com.badlogic.gdx.physics.box2d.QueryCallback -> com.badlogic.gdx.physics.box2d.o:
    boolean reportFixture$2acb6fab() -> a
com.badlogic.gdx.physics.box2d.RayCastCallback -> com.badlogic.gdx.physics.box2d.p:
    float reportRayFixture$5d5164df(com.badlogic.gdx.math.Vector2,float) -> a
com.badlogic.gdx.physics.box2d.Shape -> com.badlogic.gdx.physics.box2d.Shape:
    long addr -> b
    com.badlogic.gdx.physics.box2d.Shape$Type getType() -> a
    45:45:float getRadius() -> c
    float jniGetRadius(long) -> jniGetRadius
    55:56:void setRadius(float) -> a
    void jniSetRadius(long,float) -> jniSetRadius
    65:66:void dispose() -> b
    void jniDispose(long) -> jniDispose
    int jniGetType(long) -> jniGetType
    86:86:int getChildCount() -> d
    int jniGetChildCount(long) -> jniGetChildCount
com.badlogic.gdx.physics.box2d.Shape$Type -> com.badlogic.gdx.physics.box2d.q:
    com.badlogic.gdx.physics.box2d.Shape$Type Circle -> a
    com.badlogic.gdx.physics.box2d.Shape$Type Polygon -> b
    com.badlogic.gdx.physics.box2d.Shape$Type Edge -> c
    com.badlogic.gdx.physics.box2d.Shape$Type Chain -> d
    com.badlogic.gdx.physics.box2d.Shape$Type[] $VALUES -> e
    32:32:com.badlogic.gdx.physics.box2d.Shape$Type[] values() -> values
    32:32:com.badlogic.gdx.physics.box2d.Shape$Type valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.physics.box2d.Transform -> com.badlogic.gdx.physics.box2d.r:
    int POS_X -> a
    int POS_Y -> b
    int COS -> c
    int SIN -> d
    float[] vals -> e
    com.badlogic.gdx.math.Vector2 position -> f
    49:54:com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Vector2) -> a
    59:59:com.badlogic.gdx.math.Vector2 getPosition() -> a
    65:68:void setRotation(float) -> a
    71:71:float getRotation() -> b
    77:79:void setPosition(com.badlogic.gdx.math.Vector2) -> b
com.badlogic.gdx.physics.box2d.World -> com.badlogic.gdx.physics.box2d.World:
    com.badlogic.gdx.utils.Pool freeBodies -> a
    com.badlogic.gdx.utils.Pool freeFixtures -> b
    long addr -> j
    com.badlogic.gdx.utils.LongMap bodies -> c
    com.badlogic.gdx.utils.LongMap fixtures -> d
    com.badlogic.gdx.utils.LongMap joints -> e
    com.badlogic.gdx.physics.box2d.ContactFilter contactFilter -> f
    com.badlogic.gdx.physics.box2d.ContactListener contactListener -> g
    float[] tmpGravity -> h
    com.badlogic.gdx.math.Vector2 gravity -> i
    com.badlogic.gdx.physics.box2d.QueryCallback queryCallback -> k
    long[] contactAddrs -> l
    java.util.ArrayList contacts -> m
    java.util.ArrayList freeContacts -> n
    com.badlogic.gdx.physics.box2d.Contact contact -> o
    com.badlogic.gdx.physics.box2d.Manifold manifold -> p
    com.badlogic.gdx.physics.box2d.ContactImpulse impulse -> q
    com.badlogic.gdx.physics.box2d.RayCastCallback rayCastCallback -> r
    com.badlogic.gdx.math.Vector2 rayPoint -> s
    com.badlogic.gdx.math.Vector2 rayNormal -> t
    long newWorld(float,float,boolean) -> newWorld
    251:251:void setDestructionListener$4c9bc94c() -> d
    256:258:void setContactFilter(com.badlogic.gdx.physics.box2d.ContactFilter) -> a
    void setUseDefaultContactFilter(boolean) -> setUseDefaultContactFilter
    267:268:void setContactListener(com.badlogic.gdx.physics.box2d.ContactListener) -> a
    273:279:com.badlogic.gdx.physics.box2d.Body createBody(com.badlogic.gdx.physics.box2d.BodyDef) -> a
    long jniCreateBody(long,int,float,float,float,float,float,float,float,float,boolean,boolean,boolean,boolean,boolean,float) -> jniCreateBody
    310:321:void destroyBody(com.badlogic.gdx.physics.box2d.Body) -> a
    void jniDestroyBody(long,long) -> jniDestroyBody
    333:352:com.badlogic.gdx.physics.box2d.Joint createJoint(com.badlogic.gdx.physics.box2d.JointDef) -> a
    356:411:long createProperJoint(com.badlogic.gdx.physics.box2d.JointDef) -> b
    long jniCreateWheelJoint(long,long,long,boolean,float,float,float,float,float,float,boolean,float,float,float,float) -> jniCreateWheelJoint
    long jniCreateRopeJoint(long,long,long,boolean,float,float,float,float,float) -> jniCreateRopeJoint
    long jniCreateDistanceJoint(long,long,long,boolean,float,float,float,float,float,float,float) -> jniCreateDistanceJoint
    long jniCreateFrictionJoint(long,long,long,boolean,float,float,float,float,float,float) -> jniCreateFrictionJoint
    long jniCreateGearJoint(long,long,long,boolean,long,long,float) -> jniCreateGearJoint
    long jniCreateMouseJoint(long,long,long,boolean,float,float,float,float,float) -> jniCreateMouseJoint
    long jniCreatePrismaticJoint(long,long,long,boolean,float,float,float,float,float,float,float,boolean,float,float,boolean,float,float) -> jniCreatePrismaticJoint
    long jniCreatePulleyJoint(long,long,long,boolean,float,float,float,float,float,float,float,float,float,float,float) -> jniCreatePulleyJoint
    long jniCreateRevoluteJoint(long,long,long,boolean,float,float,float,float,float,boolean,float,float,boolean,float,float) -> jniCreateRevoluteJoint
    long jniCreateWeldJoint(long,long,long,boolean,float,float,float,float,float) -> jniCreateWeldJoint
    583:587:void destroyJoint(com.badlogic.gdx.physics.box2d.Joint) -> a
    void jniDestroyJoint(long,long) -> jniDestroyJoint
    600:601:void step(float,int,int) -> a
    void jniStep(long,float,int,int) -> jniStep
    620:621:void clearForces() -> e
    void jniClearForces(long) -> jniClearForces
    630:631:void setWarmStarting(boolean) -> a
    void jniSetWarmStarting(long,boolean) -> jniSetWarmStarting
    640:641:void setContinuousPhysics(boolean) -> b
    void jniSetContiousPhysics(long,boolean) -> jniSetContiousPhysics
    650:650:int getProxyCount() -> f
    int jniGetProxyCount(long) -> jniGetProxyCount
    660:660:int getBodyCount() -> g
    int jniGetBodyCount(long) -> jniGetBodyCount
    670:670:int getJointCount() -> h
    int jniGetJointcount(long) -> jniGetJointcount
    680:680:int getContactCount() -> i
    int jniGetContactCount(long) -> jniGetContactCount
    690:691:void setGravity(com.badlogic.gdx.math.Vector2) -> a
    void jniSetGravity(long,float,float) -> jniSetGravity
    703:706:com.badlogic.gdx.math.Vector2 getGravity() -> j
    void jniGetGravity(long,float[]) -> jniGetGravity
    718:718:boolean isLocked() -> k
    boolean jniIsLocked(long) -> jniIsLocked
    728:729:void setAutoClearForces(boolean) -> c
    void jniSetAutoClearForces(long,boolean) -> jniSetAutoClearForces
    738:738:boolean getAutoClearForces() -> l
    boolean jniGetAutoClearForces(long) -> jniGetAutoClearForces
    753:755:void QueryAABB(com.badlogic.gdx.physics.box2d.QueryCallback,float,float,float,float) -> a
    void jniQueryAABB(long,float,float,float,float) -> jniQueryAABB
    793:814:java.util.List getContactList() -> a
    819:819:java.util.Iterator getBodies() -> b
    824:824:java.util.Iterator getJoints() -> c
    void jniGetContactList(long,long[]) -> jniGetContactList
    840:841:void dispose() -> dispose
    void jniDispose(long) -> jniDispose
    853:864:boolean contactFilter(long,long) -> a
    873:875:void beginContact(long) -> a
    878:880:void endContact(long) -> b
    883:886:void preSolve(long,long) -> b
    889:892:void postSolve(long,long) -> c
    895:898:boolean reportFixture(long) -> c
    void setVelocityThreshold(float) -> setVelocityThreshold
    float getVelocityThreshold() -> getVelocityThreshold
    917:919:void rayCast(com.badlogic.gdx.physics.box2d.RayCastCallback,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> a
    void jniRayCast(long,float,float,float,float) -> jniRayCast
    933:940:float reportRayFixture(long,float,float,float,float,float) -> a
com.badlogic.gdx.physics.box2d.World$1 -> com.badlogic.gdx.physics.box2d.s:
    com.badlogic.gdx.physics.box2d.World this$0 -> a
    188:188:com.badlogic.gdx.physics.box2d.Body newObject() -> a
    185:185:java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.box2d.World$2 -> com.badlogic.gdx.physics.box2d.t:
    com.badlogic.gdx.physics.box2d.World this$0 -> a
    196:196:com.badlogic.gdx.physics.box2d.Fixture newObject() -> a
    193:193:java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.box2d.WorldManifold -> com.badlogic.gdx.physics.box2d.u:
    com.badlogic.gdx.math.Vector2 normal -> a
    com.badlogic.gdx.math.Vector2[] points -> b
    int numContactPoints -> c
    32:32:com.badlogic.gdx.math.Vector2 getNormal() -> c
    38:38:com.badlogic.gdx.math.Vector2[] getPoints() -> a
    43:43:int getNumberOfContactPoints() -> b
com.badlogic.gdx.physics.box2d.joints.DistanceJoint -> com.badlogic.gdx.physics.box2d.joints.DistanceJoint:
    36:37:void setLength(float) -> a
    void jniSetLength(long,float) -> jniSetLength
    46:46:float getLength() -> f
    float jniGetLength(long) -> jniGetLength
    56:57:void setFrequency(float) -> b
    void jniSetFrequency(long,float) -> jniSetFrequency
    66:66:float getFrequency() -> g
    float jniGetFrequency(long) -> jniGetFrequency
    76:77:void setDampingRatio(float) -> c
    void jniSetDampingRatio(long,float) -> jniSetDampingRatio
    86:86:float getDampingRatio() -> h
    float jniGetDampingRatio(long) -> jniGetDampingRatio
com.badlogic.gdx.physics.box2d.joints.DistanceJointDef -> com.badlogic.gdx.physics.box2d.joints.a:
    com.badlogic.gdx.math.Vector2 localAnchorA -> e
    com.badlogic.gdx.math.Vector2 localAnchorB -> f
    float length -> g
    float frequencyHz -> h
    float dampingRatio -> i
    34:39:void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> a
com.badlogic.gdx.physics.box2d.joints.FrictionJoint -> com.badlogic.gdx.physics.box2d.joints.FrictionJoint:
    35:36:void setMaxForce(float) -> a
    void jniSetMaxForce(long,float) -> jniSetMaxForce
    45:45:float getMaxForce() -> f
    float jniGetMaxForce(long) -> jniGetMaxForce
    55:56:void setMaxTorque(float) -> b
    void jniSetMaxTorque(long,float) -> jniSetMaxTorque
    65:65:float getMaxTorque() -> g
    float jniGetMaxTorque(long) -> jniGetMaxTorque
com.badlogic.gdx.physics.box2d.joints.FrictionJointDef -> com.badlogic.gdx.physics.box2d.joints.b:
    com.badlogic.gdx.math.Vector2 localAnchorA -> e
    com.badlogic.gdx.math.Vector2 localAnchorB -> f
    float maxForce -> g
    float maxTorque -> h
    32:36:void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2) -> a
com.badlogic.gdx.physics.box2d.joints.GearJoint -> com.badlogic.gdx.physics.box2d.joints.GearJoint:
    39:40:void setRatio(float) -> a
    void jniSetRatio(long,float) -> jniSetRatio
    49:49:float getRatio() -> f
    float jniGetRatio(long) -> jniGetRatio
com.badlogic.gdx.physics.box2d.joints.GearJointDef -> com.badlogic.gdx.physics.box2d.joints.c:
    com.badlogic.gdx.physics.box2d.Joint joint1 -> e
    com.badlogic.gdx.physics.box2d.Joint joint2 -> f
    float ratio -> g
com.badlogic.gdx.physics.box2d.joints.MouseJoint -> com.badlogic.gdx.physics.box2d.joints.MouseJoint:
    float[] tmp -> d
    com.badlogic.gdx.math.Vector2 target -> e
    38:39:void setTarget(com.badlogic.gdx.math.Vector2) -> a
    void jniSetTarget(long,float,float) -> jniSetTarget
    51:54:com.badlogic.gdx.math.Vector2 getTarget() -> f
    void jniGetTarget(long,float[]) -> jniGetTarget
    65:66:void setMaxForce(float) -> a
    void jniSetMaxForce(long,float) -> jniSetMaxForce
    75:75:float getMaxForce() -> g
    float jniGetMaxForce(long) -> jniGetMaxForce
    85:86:void setFrequency(float) -> b
    void jniSetFrequency(long,float) -> jniSetFrequency
    95:95:float getFrequency() -> h
    float jniGetFrequency(long) -> jniGetFrequency
    105:106:void setDampingRatio(float) -> c
    void jniSetDampingRatio(long,float) -> jniSetDampingRatio
    115:115:float getDampingRatio() -> i
    float jniGetDampingRatio(long) -> jniGetDampingRatio
com.badlogic.gdx.physics.box2d.joints.MouseJointDef -> com.badlogic.gdx.physics.box2d.joints.d:
    com.badlogic.gdx.math.Vector2 target -> e
    float maxForce -> f
    float frequencyHz -> g
    float dampingRatio -> h
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint -> com.badlogic.gdx.physics.box2d.joints.PrismaticJoint:
    37:37:float getJointTranslation() -> f
    float jniGetJointTranslation(long) -> jniGetJointTranslation
    47:47:float getJointSpeed() -> g
    float jniGetJointSpeed(long) -> jniGetJointSpeed
    57:57:boolean isLimitEnabled() -> h
    boolean jniIsLimitEnabled(long) -> jniIsLimitEnabled
    67:68:void enableLimit(boolean) -> a
    void jniEnableLimit(long,boolean) -> jniEnableLimit
    77:77:float getLowerLimit() -> i
    float jniGetLowerLimit(long) -> jniGetLowerLimit
    87:87:float getUpperLimit() -> j
    float jniGetUpperLimit(long) -> jniGetUpperLimit
    97:98:void setLimits(float,float) -> a
    void jniSetLimits(long,float,float) -> jniSetLimits
    107:107:boolean isMotorEnabled() -> k
    boolean jniIsMotorEnabled(long) -> jniIsMotorEnabled
    117:118:void enableMotor(boolean) -> b
    void jniEnableMotor(long,boolean) -> jniEnableMotor
    127:128:void setMotorSpeed(float) -> a
    void jniSetMotorSpeed(long,float) -> jniSetMotorSpeed
    137:137:float getMotorSpeed() -> l
    float jniGetMotorSpeed(long) -> jniGetMotorSpeed
    147:148:void setMaxMotorForce(float) -> b
    void jniSetMaxMotorForce(long,float) -> jniSetMaxMotorForce
    157:157:float getMotorForce(float) -> c
    float jniGetMotorForce(long,float) -> jniGetMotorForce
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef -> com.badlogic.gdx.physics.box2d.joints.e:
    com.badlogic.gdx.math.Vector2 localAnchorA -> e
    com.badlogic.gdx.math.Vector2 localAnchorB -> f
    com.badlogic.gdx.math.Vector2 localAxisA -> g
    float referenceAngle -> h
    boolean enableLimit -> i
    float lowerTranslation -> j
    float upperTranslation -> k
    boolean enableMotor -> l
    float maxMotorForce -> m
    float motorSpeed -> n
    35:42:void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> a
com.badlogic.gdx.physics.box2d.joints.PulleyJoint -> com.badlogic.gdx.physics.box2d.joints.PulleyJoint:
    float[] tmp -> d
    com.badlogic.gdx.math.Vector2 groundAnchorA -> e
    com.badlogic.gdx.math.Vector2 groundAnchorB -> f
    41:43:com.badlogic.gdx.math.Vector2 getGroundAnchorA() -> f
    void jniGetGroundAnchorA(long,float[]) -> jniGetGroundAnchorA
    56:58:com.badlogic.gdx.math.Vector2 getGroundAnchorB() -> g
    void jniGetGroundAnchorB(long,float[]) -> jniGetGroundAnchorB
    69:69:float getLength1() -> h
    float jniGetLength1(long) -> jniGetLength1
    79:79:float getLength2() -> i
    float jniGetLength2(long) -> jniGetLength2
    89:89:float getRatio() -> j
    float jniGetRatio(long) -> jniGetRatio
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef -> com.badlogic.gdx.physics.box2d.joints.f:
    float minPulleyLength -> l
    com.badlogic.gdx.math.Vector2 groundAnchorA -> e
    com.badlogic.gdx.math.Vector2 groundAnchorB -> f
    com.badlogic.gdx.math.Vector2 localAnchorA -> g
    com.badlogic.gdx.math.Vector2 localAnchorB -> h
    float lengthA -> i
    float lengthB -> j
    float ratio -> k
    36:46:void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float) -> a
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint -> com.badlogic.gdx.physics.box2d.joints.RevoluteJoint:
    38:38:float getJointAngle() -> f
    float jniGetJointAngle(long) -> jniGetJointAngle
    48:48:float getJointSpeed() -> g
    float jniGetJointSpeed(long) -> jniGetJointSpeed
    58:58:boolean isLimitEnabled() -> h
    boolean jniIsLimitEnabled(long) -> jniIsLimitEnabled
    68:69:void enableLimit(boolean) -> a
    void jniEnableLimit(long,boolean) -> jniEnableLimit
    78:78:float getLowerLimit() -> i
    float jniGetLowerLimit(long) -> jniGetLowerLimit
    88:88:float getUpperLimit() -> j
    float jniGetUpperLimit(long) -> jniGetUpperLimit
    99:100:void setLimits(float,float) -> a
    void jniSetLimits(long,float,float) -> jniSetLimits
    109:109:boolean isMotorEnabled() -> k
    boolean jniIsMotorEnabled(long) -> jniIsMotorEnabled
    119:120:void enableMotor(boolean) -> b
    void jniEnableMotor(long,boolean) -> jniEnableMotor
    129:130:void setMotorSpeed(float) -> a
    void jniSetMotorSpeed(long,float) -> jniSetMotorSpeed
    139:139:float getMotorSpeed() -> l
    float jniGetMotorSpeed(long) -> jniGetMotorSpeed
    149:150:void setMaxMotorTorque(float) -> b
    void jniSetMaxMotorTorque(long,float) -> jniSetMaxMotorTorque
    159:159:float getMotorTorque(float) -> c
    float jniGetMotorTorque(long,float) -> jniGetMotorTorque
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef -> com.badlogic.gdx.physics.box2d.joints.g:
    com.badlogic.gdx.math.Vector2 localAnchorA -> e
    com.badlogic.gdx.math.Vector2 localAnchorB -> f
    float referenceAngle -> g
    boolean enableLimit -> h
    float lowerAngle -> i
    float upperAngle -> j
    boolean enableMotor -> k
    float motorSpeed -> l
    float maxMotorTorque -> m
    35:40:void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2) -> a
com.badlogic.gdx.physics.box2d.joints.RopeJoint -> com.badlogic.gdx.physics.box2d.joints.RopeJoint:
    38:38:float getMaxLength() -> f
    float jniGetMaxLength(long) -> jniGetMaxLength
    48:49:void setMaxLength(float) -> a
    float jniSetMaxLength(long,float) -> jniSetMaxLength
com.badlogic.gdx.physics.box2d.joints.RopeJointDef -> com.badlogic.gdx.physics.box2d.joints.h:
    com.badlogic.gdx.math.Vector2 localAnchorA -> e
    com.badlogic.gdx.math.Vector2 localAnchorB -> f
    float maxLength -> g
com.badlogic.gdx.physics.box2d.joints.WeldJoint -> com.badlogic.gdx.physics.box2d.joints.WeldJoint:
    35:35:float getReferenceAngle() -> f
    float jniGetReferenceAngle(long) -> jniGetReferenceAngle
com.badlogic.gdx.physics.box2d.joints.WeldJointDef -> com.badlogic.gdx.physics.box2d.joints.i:
    com.badlogic.gdx.math.Vector2 localAnchorA -> e
    com.badlogic.gdx.math.Vector2 localAnchorB -> f
    float referenceAngle -> g
    31:36:void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2) -> a
com.badlogic.gdx.physics.box2d.joints.WheelJoint -> com.badlogic.gdx.physics.box2d.joints.WheelJoint:
    37:37:float getJointTranslation() -> f
    float jniGetJointTranslation(long) -> jniGetJointTranslation
    47:47:float getJointSpeed() -> g
    float jniGetJointSpeed(long) -> jniGetJointSpeed
    57:57:boolean isMotorEnabled() -> h
    boolean jniIsMotorEnabled(long) -> jniIsMotorEnabled
    67:68:void enableMotor(boolean) -> a
    void jniEnableMotor(long,boolean) -> jniEnableMotor
    77:78:void setMotorSpeed(float) -> a
    void jniSetMotorSpeed(long,float) -> jniSetMotorSpeed
    87:87:float getMotorSpeed() -> i
    float jniGetMotorSpeed(long) -> jniGetMotorSpeed
    97:98:void setMaxMotorTorque(float) -> b
    void jniSetMaxMotorTorque(long,float) -> jniSetMaxMotorTorque
    106:106:float getMaxMotorTorque() -> j
    float jniGetMaxMotorTorque(long) -> jniGetMaxMotorTorque
    116:116:float getMotorTorque(float) -> c
    float jniGetMotorTorque(long,float) -> jniGetMotorTorque
    126:127:void setSpringFrequencyHz(float) -> d
    void jniSetSpringFrequencyHz(long,float) -> jniSetSpringFrequencyHz
    135:135:float getSpringFrequencyHz() -> k
    float jniGetSpringFrequencyHz(long) -> jniGetSpringFrequencyHz
    145:146:void setSpringDampingRatio(float) -> e
    void jniSetSpringDampingRatio(long,float) -> jniSetSpringDampingRatio
    154:154:float getSpringDampingRatio() -> l
    float jniGetSpringDampingRatio(long) -> jniGetSpringDampingRatio
com.badlogic.gdx.physics.box2d.joints.WheelJointDef -> com.badlogic.gdx.physics.box2d.joints.j:
    com.badlogic.gdx.math.Vector2 localAnchorA -> e
    com.badlogic.gdx.math.Vector2 localAnchorB -> f
    com.badlogic.gdx.math.Vector2 localAxisA -> g
    boolean enableMotor -> h
    float maxMotorTorque -> i
    float motorSpeed -> j
    float frequencyHz -> k
    float dampingRatio -> l
    33:38:void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> a
com.badlogic.gdx.scenes.scene2d.Action -> com.badlogic.gdx.g.a.a:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> a
    com.badlogic.gdx.utils.Pool pool -> b
    boolean act(float) -> a
    39:39:void restart() -> a
    43:43:com.badlogic.gdx.scenes.scene2d.Actor getActor() -> c
    55:63:void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    72:73:void reset() -> b
    76:76:com.badlogic.gdx.utils.Pool getPool() -> d
    82:83:void setPool(com.badlogic.gdx.utils.Pool) -> a
    86:90:java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.Actor -> com.badlogic.gdx.g.a.b:
    com.badlogic.gdx.scenes.scene2d.Stage stage -> a
    com.badlogic.gdx.scenes.scene2d.Group parent -> b
    com.badlogic.gdx.utils.DelayedRemovalArray listeners -> c
    com.badlogic.gdx.utils.DelayedRemovalArray captureListeners -> d
    com.badlogic.gdx.utils.Array actions -> e
    java.lang.String name -> f
    com.badlogic.gdx.scenes.scene2d.Touchable touchable -> g
    boolean visible -> h
    float x -> i
    float y -> j
    float width -> k
    float height -> l
    float originX -> m
    float originY -> n
    float scaleX -> o
    float scaleY -> p
    float rotation -> q
    com.badlogic.gdx.graphics.Color color -> r
    78:78:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    85:94:void act(float) -> a
    109:146:boolean fire(com.badlogic.gdx.scenes.scene2d.Event) -> a
    156:181:boolean notify(com.badlogic.gdx.scenes.scene2d.Event,boolean) -> a
    196:197:com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> a
    203:204:boolean remove() -> a
    212:216:boolean addListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> a
    220:220:boolean removeListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> b
    224:224:com.badlogic.gdx.utils.Array getListeners() -> w
    230:231:boolean addCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> c
    235:235:boolean removeCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> d
    239:239:com.badlogic.gdx.utils.Array getCaptureListeners() -> x
    243:245:void addAction(com.badlogic.gdx.scenes.scene2d.Action) -> a
    248:249:void removeAction(com.badlogic.gdx.scenes.scene2d.Action) -> b
    252:252:com.badlogic.gdx.utils.Array getActions() -> b
    257:260:void clearActions() -> c
    264:266:void clearListeners() -> y
    270:272:void clear() -> d
    276:276:com.badlogic.gdx.scenes.scene2d.Stage getStage() -> e
    282:283:void setStage(com.badlogic.gdx.scenes.scene2d.Stage) -> a
    287:292:boolean isDescendantOf(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    298:302:boolean isAscendantOf(com.badlogic.gdx.scenes.scene2d.Actor) -> b
    308:308:boolean hasParent() -> z
    313:313:com.badlogic.gdx.scenes.scene2d.Group getParent() -> f
    319:320:void setParent(com.badlogic.gdx.scenes.scene2d.Group) -> a
    323:323:com.badlogic.gdx.scenes.scene2d.Touchable getTouchable() -> g
    328:329:void setTouchable(com.badlogic.gdx.scenes.scene2d.Touchable) -> a
    332:332:boolean isVisible() -> h
    337:338:void setVisible(boolean) -> a
    341:341:float getX() -> i
    345:346:void setX(float) -> b
    349:349:float getY() -> j
    353:354:void setY(float) -> c
    358:360:void setPosition(float,float) -> a
    363:365:void translate(float,float) -> b
    368:368:float getWidth() -> k
    372:373:void setWidth(float) -> d
    376:376:float getHeight() -> l
    380:381:void setHeight(float) -> e
    385:385:float getTop() -> m
    390:390:float getRight() -> n
    395:397:void setSize(float,float) -> c
    401:403:void size(float) -> h
    407:409:void size(float,float) -> d
    413:417:void setBounds(float,float,float,float) -> a
    420:420:float getOriginX() -> o
    424:425:void setOriginX(float) -> i
    428:428:float getOriginY() -> p
    432:433:void setOriginY(float) -> j
    437:439:void setOrigin(float,float) -> g
    442:442:float getScaleX() -> q
    446:447:void setScaleX(float) -> k
    450:450:float getScaleY() -> r
    454:455:void setScaleY(float) -> l
    459:461:void setScale(float) -> m
    465:467:void setScale(float,float) -> e
    471:473:void scale(float) -> n
    477:479:void scale(float,float) -> f
    482:482:float getRotation() -> s
    486:487:void setRotation(float) -> f
    491:492:void rotate(float) -> g
    495:496:void setColor(com.badlogic.gdx.graphics.Color) -> a
    499:500:void setColor(float,float,float,float) -> c
    504:504:com.badlogic.gdx.graphics.Color getColor() -> t
    508:508:java.lang.String getName() -> u
    514:515:void setName(java.lang.String) -> a
    519:520:void toFront() -> v
    524:525:void toBack() -> A
    531:541:void setZIndex(int) -> a
    546:548:int getZIndex() -> B
    553:553:boolean clipBegin() -> C
    562:572:boolean clipBegin(float,float,float,float) -> b
    577:578:void clipEnd() -> D
    582:584:com.badlogic.gdx.math.Vector2 screenToLocalCoordinates(com.badlogic.gdx.math.Vector2) -> d
    589:592:com.badlogic.gdx.math.Vector2 stageToLocalCoordinates(com.badlogic.gdx.math.Vector2) -> a
    598:606:com.badlogic.gdx.math.Vector2 localToStageCoordinates(com.badlogic.gdx.math.Vector2) -> b
    612:616:com.badlogic.gdx.math.Vector2 localToParentCoordinates(com.badlogic.gdx.math.Vector2) -> e
    621:627:com.badlogic.gdx.math.Vector2 localToAscendantCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2) -> a
    632:706:com.badlogic.gdx.math.Vector2 parentToLocalCoordinates(com.badlogic.gdx.math.Vector2) -> c
    710:716:java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.Event -> com.badlogic.gdx.g.a.c:
    com.badlogic.gdx.scenes.scene2d.Stage stage -> a
    com.badlogic.gdx.scenes.scene2d.Actor targetActor -> b
    com.badlogic.gdx.scenes.scene2d.Actor listenerActor -> c
    boolean capture -> d
    boolean bubbles -> e
    boolean handled -> f
    boolean stopped -> g
    boolean cancelled -> h
    47:48:void handle() -> a
    54:57:void cancel() -> c
    62:63:void stop() -> d
    66:74:void reset() -> b
    78:78:com.badlogic.gdx.scenes.scene2d.Actor getTarget() -> e
    82:83:void setTarget(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    87:87:com.badlogic.gdx.scenes.scene2d.Actor getListenerActor() -> f
    91:92:void setListenerActor(com.badlogic.gdx.scenes.scene2d.Actor) -> b
    95:95:boolean getBubbles() -> g
    101:102:void setBubbles(boolean) -> b
    106:106:boolean isHandled() -> h
    111:111:boolean isStopped() -> i
    116:116:boolean isCancelled() -> j
    120:121:void setCapture(boolean) -> a
    126:126:boolean isCapture() -> l
    130:131:void setStage(com.badlogic.gdx.scenes.scene2d.Stage) -> a
    135:135:com.badlogic.gdx.scenes.scene2d.Stage getStage() -> k
com.badlogic.gdx.scenes.scene2d.EventListener -> com.badlogic.gdx.g.a.d:
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> a
com.badlogic.gdx.scenes.scene2d.Group -> com.badlogic.gdx.g.a.e:
    com.badlogic.gdx.utils.SnapshotArray children -> a
    com.badlogic.gdx.math.Matrix3 localTransform -> b
    com.badlogic.gdx.math.Matrix3 worldTransform -> c
    com.badlogic.gdx.math.Matrix4 batchTransform -> d
    com.badlogic.gdx.math.Matrix4 oldBatchTransform -> e
    boolean transform -> f
    com.badlogic.gdx.math.Rectangle cullingArea -> g
    com.badlogic.gdx.math.Vector2 point -> h
    45:50:void act(float) -> a
    55:58:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    66:134:void drawChildren(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> b
    139:141:void applyTransform(com.badlogic.gdx.graphics.g2d.SpriteBatch,com.badlogic.gdx.math.Matrix4) -> a
    145:177:com.badlogic.gdx.math.Matrix4 computeTransform() -> w
    183:184:void resetTransform(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
    189:190:void setCullingArea(com.badlogic.gdx.math.Rectangle) -> a
    193:202:com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> a
    207:207:void childrenChanged() -> x
    212:217:void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> c
    222:230:void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor) -> a
    235:241:void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> a
    246:255:void addActorAfter(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> b
    261:267:boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> d
    272:281:void clearChildren() -> y
    285:287:void clear() -> d
    291:301:com.badlogic.gdx.scenes.scene2d.Actor findActor(java.lang.String) -> a
    305:309:void setStage(com.badlogic.gdx.scenes.scene2d.Stage) -> a
    313:317:boolean swapActor(int,int) -> a
    322:326:boolean swapActor(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> c
    331:331:com.badlogic.gdx.utils.SnapshotArray getChildren() -> z
    340:341:void setTransform(boolean) -> b
    344:344:boolean isTransform() -> A
    350:356:com.badlogic.gdx.math.Vector2 localToDescendantCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2) -> a
com.badlogic.gdx.scenes.scene2d.InputEvent -> com.badlogic.gdx.g.a.f:
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type type -> a
    float stageX -> b
    float stageY -> c
    int pointer -> d
    int button -> e
    int keyCode -> f
    int scrollAmount -> g
    char character -> h
    com.badlogic.gdx.scenes.scene2d.Actor relatedActor -> i
    31:34:void reset() -> b
    38:38:float getStageX() -> l
    42:43:void setStageX(float) -> a
    47:47:float getStageY() -> m
    51:52:void setStageY(float) -> b
    56:56:com.badlogic.gdx.scenes.scene2d.InputEvent$Type getType() -> n
    60:61:void setType(com.badlogic.gdx.scenes.scene2d.InputEvent$Type) -> a
    66:66:int getPointer() -> o
    70:71:void setPointer(int) -> a
    76:76:int getButton() -> p
    80:81:void setButton(int) -> b
    85:85:int getKeyCode() -> q
    89:90:void setKeyCode(int) -> c
    94:94:char getCharacter() -> r
    98:99:void setCharacter(char) -> a
    103:103:int getScrollAmount() -> s
    107:108:void setScrollAmount(int) -> d
    113:113:com.badlogic.gdx.scenes.scene2d.Actor getRelatedActor() -> t
    118:119:void setRelatedActor(com.badlogic.gdx.scenes.scene2d.Actor) -> c
    122:122:java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.InputEvent$Type -> com.badlogic.gdx.g.a.g:
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type touchDown -> a
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type touchUp -> b
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type touchDragged -> c
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type mouseMoved -> d
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type enter -> e
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type exit -> f
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type scrolled -> g
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type keyDown -> h
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type keyUp -> i
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type keyTyped -> j
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type[] $VALUES -> k
    126:126:com.badlogic.gdx.scenes.scene2d.InputEvent$Type[] values() -> values
    126:126:com.badlogic.gdx.scenes.scene2d.InputEvent$Type valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.scenes.scene2d.InputListener -> com.badlogic.gdx.g.a.h:
    com.badlogic.gdx.math.Vector2 tmpCoords -> a
    39:74:boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> a
    82:82:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> a
    89:89:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> b
    95:95:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> a
    101:101:boolean mouseMoved$43069385(com.badlogic.gdx.scenes.scene2d.InputEvent,float) -> a
    108:108:void enter$6049651d(int) -> a
    114:114:void exit(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> a
    118:118:boolean scrolled$1dcb6a90(int) -> b
    123:123:boolean keyDown$3bf7ec50(int) -> c
    128:128:boolean keyUp$3bf7ec50() -> a
    133:133:boolean keyTyped$3bf802d6(char) -> a
com.badlogic.gdx.scenes.scene2d.InputListener$1 -> com.badlogic.gdx.g.a.i:
    int[] $SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type -> a
com.badlogic.gdx.scenes.scene2d.Stage -> com.badlogic.gdx.g.a.j:
    com.badlogic.gdx.math.Vector2 actorCoords -> a
    com.badlogic.gdx.math.Vector3 cameraCoords -> b
    float width -> c
    float height -> d
    float gutterWidth -> e
    float gutterHeight -> f
    float centerX -> g
    float centerY -> h
    com.badlogic.gdx.graphics.Camera camera -> i
    com.badlogic.gdx.graphics.g2d.SpriteBatch batch -> j
    boolean ownsBatch -> k
    com.badlogic.gdx.scenes.scene2d.Group root -> l
    com.badlogic.gdx.math.Vector2 stageCoords -> m
    com.badlogic.gdx.scenes.scene2d.Actor[] pointerOverActors -> n
    boolean[] pointerTouched -> o
    int[] pointerScreenX -> p
    int[] pointerScreenY -> q
    int mouseScreenX -> r
    int mouseScreenY -> s
    com.badlogic.gdx.scenes.scene2d.Actor mouseOverActor -> t
    com.badlogic.gdx.scenes.scene2d.Actor keyboardFocus -> u
    com.badlogic.gdx.scenes.scene2d.Actor scrollFocus -> v
    com.badlogic.gdx.utils.SnapshotArray touchFocuses -> w
    102:110:void initialize(float,float,boolean) -> b
    118:153:void setViewport(float,float,boolean) -> c
    156:162:void draw() -> a
    166:167:void act() -> j
    174:203:void act(float) -> a
    207:229:com.badlogic.gdx.scenes.scene2d.Actor fireEnterAndExit(com.badlogic.gdx.scenes.scene2d.Actor,int,int,int) -> a
    234:254:boolean touchDown(int,int,int,int) -> a
    260:287:boolean touchDragged(int,int,int) -> a
    293:324:boolean touchUp(int,int,int,int) -> b
    330:347:boolean mouseMoved(int,int) -> a
    353:366:boolean scrolled(int) -> c
    372:380:boolean keyDown(int) -> a
    386:394:boolean keyUp(int) -> b
    400:408:boolean keyTyped(char) -> a
    414:421:void addTouchFocus(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor,int,int) -> a
    426:435:void removeTouchFocus(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor,int,int) -> b
    442:443:void cancelTouchFocus() -> k
    448:472:void cancelTouchFocus(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor) -> a
    478:479:void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    484:485:void addAction(com.badlogic.gdx.scenes.scene2d.Action) -> a
    490:490:com.badlogic.gdx.utils.Array getActors() -> b
    496:496:boolean addListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> c
    502:502:boolean removeListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> d
    508:508:boolean addCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> a
    514:514:boolean removeCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> b
    519:521:void clear() -> l
    525:528:void unfocusAll() -> m
    532:534:void unfocus(com.badlogic.gdx.scenes.scene2d.Actor) -> b
    539:559:void setKeyboardFocus(com.badlogic.gdx.scenes.scene2d.Actor) -> c
    564:564:com.badlogic.gdx.scenes.scene2d.Actor getKeyboardFocus() -> c
    570:590:void setScrollFocus(com.badlogic.gdx.scenes.scene2d.Actor) -> d
    595:595:com.badlogic.gdx.scenes.scene2d.Actor getScrollFocus() -> d
    601:601:float getWidth() -> e
    607:607:float getHeight() -> f
    613:613:float getGutterWidth() -> n
    619:619:float getGutterHeight() -> o
    623:623:com.badlogic.gdx.graphics.g2d.SpriteBatch getSpriteBatch() -> g
    627:627:com.badlogic.gdx.graphics.Camera getCamera() -> h
    634:635:void setCamera(com.badlogic.gdx.graphics.Camera) -> a
    639:639:com.badlogic.gdx.scenes.scene2d.Group getRoot() -> i
    648:649:com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> a
    656:659:com.badlogic.gdx.math.Vector2 screenToStageCoordinates(com.badlogic.gdx.math.Vector2) -> a
    666:670:com.badlogic.gdx.math.Vector2 stageToScreenCoordinates(com.badlogic.gdx.math.Vector2) -> b
    676:677:com.badlogic.gdx.math.Vector2 toScreenCoordinates(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Matrix4) -> a
    681:682:void dispose() -> dispose
com.badlogic.gdx.scenes.scene2d.Stage$TouchFocus -> com.badlogic.gdx.g.a.k:
    com.badlogic.gdx.scenes.scene2d.EventListener listener -> a
    com.badlogic.gdx.scenes.scene2d.Actor listenerActor -> b
    com.badlogic.gdx.scenes.scene2d.Actor target -> c
    int pointer -> d
    int button -> e
    692:694:void reset() -> b
com.badlogic.gdx.scenes.scene2d.Touchable -> com.badlogic.gdx.g.a.l:
    com.badlogic.gdx.scenes.scene2d.Touchable enabled -> a
    com.badlogic.gdx.scenes.scene2d.Touchable disabled -> b
    com.badlogic.gdx.scenes.scene2d.Touchable childrenOnly -> c
    com.badlogic.gdx.scenes.scene2d.Touchable[] $VALUES -> d
    20:20:com.badlogic.gdx.scenes.scene2d.Touchable[] values() -> values
    20:20:com.badlogic.gdx.scenes.scene2d.Touchable valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.scenes.scene2d.actions.Actions -> com.badlogic.gdx.g.a.a.a:
    33:36:com.badlogic.gdx.scenes.scene2d.Action action(java.lang.Class) -> a
    40:42:com.badlogic.gdx.scenes.scene2d.actions.AddAction addAction(com.badlogic.gdx.scenes.scene2d.Action) -> a
    46:49:com.badlogic.gdx.scenes.scene2d.actions.AddAction addAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Actor) -> a
    53:55:com.badlogic.gdx.scenes.scene2d.actions.RemoveAction removeAction(com.badlogic.gdx.scenes.scene2d.Action) -> b
    59:62:com.badlogic.gdx.scenes.scene2d.actions.RemoveAction removeAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Actor) -> b
    67:67:com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveTo(float,float) -> a
    71:71:com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveTo(float,float,float) -> a
    75:79:com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveTo$c42c229(float,float,float) -> b
    84:84:com.badlogic.gdx.scenes.scene2d.actions.MoveByAction moveBy(float,float) -> b
    88:88:com.badlogic.gdx.scenes.scene2d.actions.MoveByAction moveBy(float,float,float) -> c
    92:96:com.badlogic.gdx.scenes.scene2d.actions.MoveByAction moveBy$6a46cf85(float,float,float) -> d
    101:101:com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float) -> c
    105:105:com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float,float) -> e
    109:113:com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo$4fc7b059(float,float,float) -> f
    118:118:com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float) -> d
    122:122:com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float,float) -> g
    126:130:com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy$5234424b(float,float,float) -> h
    135:135:com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float) -> e
    139:139:com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float,float) -> i
    143:147:com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo$2ec82a82(float,float,float) -> j
    152:152:com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float) -> f
    156:156:com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float,float) -> k
    160:164:com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy$2f3be2da(float,float,float) -> l
    169:169:com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float) -> a
    173:173:com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float,float) -> g
    177:181:com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo$6589fb17(float,float) -> h
    186:186:com.badlogic.gdx.scenes.scene2d.actions.RotateByAction rotateBy(float) -> b
    190:190:com.badlogic.gdx.scenes.scene2d.actions.RotateByAction rotateBy(float,float) -> i
    194:198:com.badlogic.gdx.scenes.scene2d.actions.RotateByAction rotateBy$785edbb(float,float) -> j
    203:203:com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color) -> a
    208:208:com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color,float) -> a
    213:217:com.badlogic.gdx.scenes.scene2d.actions.ColorAction color$2f941340(com.badlogic.gdx.graphics.Color,float) -> b
    222:222:com.badlogic.gdx.scenes.scene2d.actions.AlphaAction alpha(float) -> c
    227:227:com.badlogic.gdx.scenes.scene2d.actions.AlphaAction alpha(float,float) -> k
    232:236:com.badlogic.gdx.scenes.scene2d.actions.AlphaAction alpha$33a9621f(float,float) -> l
    241:241:com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeOut(float) -> d
    246:250:com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeOut(float,com.badlogic.gdx.math.Interpolation) -> a
    255:255:com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeIn(float) -> e
    260:264:com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeIn(float,com.badlogic.gdx.math.Interpolation) -> b
    268:268:com.badlogic.gdx.scenes.scene2d.actions.VisibleAction show() -> b
    272:272:com.badlogic.gdx.scenes.scene2d.actions.VisibleAction hide() -> c
    276:278:com.badlogic.gdx.scenes.scene2d.actions.VisibleAction visible(boolean) -> a
    282:284:com.badlogic.gdx.scenes.scene2d.actions.TouchableAction touchable(com.badlogic.gdx.scenes.scene2d.Touchable) -> a
    288:288:com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction removeActor() -> a
    292:294:com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    298:300:com.badlogic.gdx.scenes.scene2d.actions.DelayAction delay(float) -> f
    304:307:com.badlogic.gdx.scenes.scene2d.actions.DelayAction delay(float,com.badlogic.gdx.scenes.scene2d.Action) -> a
    311:313:com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action) -> c
    317:320:com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> a
    324:328:com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> a
    332:337:com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> a
    341:347:com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> a
    351:354:com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action[]) -> a
    358:358:com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence() -> d
    362:364:com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action) -> d
    368:371:com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> b
    375:379:com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> b
    383:388:com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> b
    392:398:com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> b
    402:405:com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action[]) -> b
    409:409:com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel() -> e
    413:416:com.badlogic.gdx.scenes.scene2d.actions.RepeatAction repeat(int,com.badlogic.gdx.scenes.scene2d.Action) -> a
    420:423:com.badlogic.gdx.scenes.scene2d.actions.RepeatAction forever(com.badlogic.gdx.scenes.scene2d.Action) -> e
    427:429:com.badlogic.gdx.scenes.scene2d.actions.RunnableAction run(java.lang.Runnable) -> a
    433:435:com.badlogic.gdx.scenes.scene2d.actions.LayoutAction layout(boolean) -> b
    439:441:com.badlogic.gdx.scenes.scene2d.actions.AfterAction after(com.badlogic.gdx.scenes.scene2d.Action) -> f
    445:448:com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction addListener(com.badlogic.gdx.scenes.scene2d.EventListener,boolean) -> a
    452:456:com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction addListener(com.badlogic.gdx.scenes.scene2d.EventListener,boolean,com.badlogic.gdx.scenes.scene2d.Actor) -> a
    460:463:com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction removeListener$3ad8e431(com.badlogic.gdx.scenes.scene2d.EventListener) -> a
    467:471:com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction removeListener(com.badlogic.gdx.scenes.scene2d.EventListener,boolean,com.badlogic.gdx.scenes.scene2d.Actor) -> b
com.badlogic.gdx.scenes.scene2d.actions.AddAction -> com.badlogic.gdx.g.a.a.b:
    com.badlogic.gdx.scenes.scene2d.Actor targetActor -> b
    com.badlogic.gdx.scenes.scene2d.Action action -> c
    29:30:boolean act(float) -> a
    34:34:com.badlogic.gdx.scenes.scene2d.Actor getTargetActor() -> c
    39:40:void setTargetActor(com.badlogic.gdx.scenes.scene2d.Actor) -> b
    43:43:com.badlogic.gdx.scenes.scene2d.Action getAction() -> d
    47:48:void setAction(com.badlogic.gdx.scenes.scene2d.Action) -> a
    51:52:void restart() -> a
    55:58:void reset() -> b
com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction -> com.badlogic.gdx.g.a.a.c:
    com.badlogic.gdx.scenes.scene2d.Actor targetActor -> b
    com.badlogic.gdx.scenes.scene2d.EventListener listener -> c
    boolean capture -> d
    31:36:boolean act(float) -> a
    40:40:com.badlogic.gdx.scenes.scene2d.Actor getTargetActor() -> c
    45:46:void setTargetActor(com.badlogic.gdx.scenes.scene2d.Actor) -> b
    49:49:com.badlogic.gdx.scenes.scene2d.EventListener getListener() -> d
    53:54:void setListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> a
    57:57:boolean getCapture() -> e
    61:62:void setCapture(boolean) -> a
    65:68:void reset() -> b
com.badlogic.gdx.scenes.scene2d.actions.AfterAction -> com.badlogic.gdx.g.a.a.d:
    com.badlogic.gdx.utils.Array waitForActions -> c
    28:30:void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    33:35:void restart() -> a
    38:46:boolean act(float) -> a
com.badlogic.gdx.scenes.scene2d.actions.AlphaAction -> com.badlogic.gdx.g.a.a.e:
    float start -> b
    float end -> c
    com.badlogic.gdx.graphics.Color color -> d
    30:32:void begin() -> c
    35:36:void update(float) -> b
    39:41:void reset() -> b
    44:44:com.badlogic.gdx.graphics.Color getColor() -> d
    50:51:void setColor(com.badlogic.gdx.graphics.Color) -> a
    54:54:float getAlpha() -> e
    58:59:void setAlpha(float) -> c
com.badlogic.gdx.scenes.scene2d.actions.ColorAction -> com.badlogic.gdx.g.a.a.f:
    float startR -> b
    float startG -> c
    float startB -> d
    float startA -> e
    com.badlogic.gdx.graphics.Color color -> f
    com.badlogic.gdx.graphics.Color end -> g
    31:36:void begin() -> c
    39:44:void update(float) -> b
    47:49:void reset() -> b
    52:52:com.badlogic.gdx.graphics.Color getColor() -> d
    58:59:void setColor(com.badlogic.gdx.graphics.Color) -> b
    62:62:com.badlogic.gdx.graphics.Color getEndColor() -> e
    67:68:void setEndColor(com.badlogic.gdx.graphics.Color) -> a
com.badlogic.gdx.scenes.scene2d.actions.DelayAction -> com.badlogic.gdx.g.a.a.g:
    float duration -> c
    float time -> d
    25:31:boolean act(float) -> a
    36:37:void finish() -> c
    40:42:void restart() -> a
    46:46:float getTime() -> d
    51:52:void setTime(float) -> c
    55:55:float getDuration() -> e
    60:61:void setDuration(float) -> b
com.badlogic.gdx.scenes.scene2d.actions.DelegateAction -> com.badlogic.gdx.g.a.a.h:
    com.badlogic.gdx.scenes.scene2d.Action action -> b
    29:30:void setAction(com.badlogic.gdx.scenes.scene2d.Action) -> a
    33:33:com.badlogic.gdx.scenes.scene2d.Action getAction() -> c
    37:38:void restart() -> a
    41:43:void reset() -> b
    46:48:void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    51:51:java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.actions.FloatAction -> com.badlogic.gdx.g.a.a.i:
    float start -> b
    float end -> c
    float value -> d
    38:39:void begin() -> c
    42:43:void update(float) -> b
    47:47:float getValue() -> d
    52:53:void setValue(float) -> c
    56:56:float getStart() -> e
    61:62:void setStart(float) -> d
    65:65:float getEnd() -> f
    70:71:void setEnd(float) -> f
com.badlogic.gdx.scenes.scene2d.actions.IntAction -> com.badlogic.gdx.g.a.a.j:
    int start -> b
    int end -> c
    int value -> d
    38:39:void begin() -> c
    42:43:void update(float) -> b
    47:47:int getValue() -> d
    52:53:void setValue(int) -> a
    56:56:int getStart() -> e
    61:62:void setStart(int) -> b
    65:65:int getEnd() -> f
    70:71:void setEnd(int) -> c
com.badlogic.gdx.scenes.scene2d.actions.LayoutAction -> com.badlogic.gdx.g.a.a.k:
    boolean enabled -> b
    31:33:void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    36:37:boolean act(float) -> a
    41:41:boolean isEnabled() -> c
    45:46:void setLayoutEnabled(boolean) -> a
com.badlogic.gdx.scenes.scene2d.actions.MoveByAction -> com.badlogic.gdx.g.a.a.l:
    float amountX -> b
    float amountY -> c
    25:26:void updateRelative(float) -> c
    29:31:void setAmount(float,float) -> a
    34:34:float getAmountX() -> d
    38:39:void setAmountX(float) -> d
    42:42:float getAmountY() -> e
    46:47:void setAmountY(float) -> f
com.badlogic.gdx.scenes.scene2d.actions.MoveToAction -> com.badlogic.gdx.g.a.a.m:
    float startX -> b
    float startY -> c
    float endX -> d
    float endY -> e
    26:28:void begin() -> c
    31:32:void update(float) -> b
    35:37:void setPosition(float,float) -> a
    40:40:float getX() -> d
    44:45:void setX(float) -> c
    48:48:float getY() -> e
    52:53:void setY(float) -> d
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction -> com.badlogic.gdx.g.a.a.n:
    com.badlogic.gdx.utils.Array actions -> b
    boolean complete -> c
    30:35:boolean act(float) -> a
    39:43:void restart() -> a
    46:48:void reset() -> b
    51:53:void addAction(com.badlogic.gdx.scenes.scene2d.Action) -> a
    56:60:void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    63:63:com.badlogic.gdx.utils.Array getActions() -> c
    67:76:java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction -> com.badlogic.gdx.g.a.a.o:
    float lastPercent -> b
    25:26:void begin() -> c
    29:31:void update(float) -> b
    void updateRelative(float) -> c
com.badlogic.gdx.scenes.scene2d.actions.RemoveAction -> com.badlogic.gdx.g.a.a.p:
    com.badlogic.gdx.scenes.scene2d.Actor targetActor -> b
    com.badlogic.gdx.scenes.scene2d.Action action -> c
    29:30:boolean act(float) -> a
    34:34:com.badlogic.gdx.scenes.scene2d.Actor getTargetActor() -> c
    39:40:void setTargetActor(com.badlogic.gdx.scenes.scene2d.Actor) -> b
    43:43:com.badlogic.gdx.scenes.scene2d.Action getAction() -> d
    47:48:void setAction(com.badlogic.gdx.scenes.scene2d.Action) -> a
    51:54:void reset() -> b
com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction -> com.badlogic.gdx.g.a.a.q:
    com.badlogic.gdx.scenes.scene2d.Actor removeActor -> b
    boolean removed -> c
    29:33:boolean act(float) -> a
    37:38:void restart() -> a
    41:43:void reset() -> b
    46:46:com.badlogic.gdx.scenes.scene2d.Actor getRemoveActor() -> c
    51:52:void setRemoveActor(com.badlogic.gdx.scenes.scene2d.Actor) -> b
com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction -> com.badlogic.gdx.g.a.a.r:
    com.badlogic.gdx.scenes.scene2d.Actor targetActor -> b
    com.badlogic.gdx.scenes.scene2d.EventListener listener -> c
    boolean capture -> d
    31:36:boolean act(float) -> a
    40:40:com.badlogic.gdx.scenes.scene2d.Actor getTargetActor() -> c
    45:46:void setTargetActor(com.badlogic.gdx.scenes.scene2d.Actor) -> b
    49:49:com.badlogic.gdx.scenes.scene2d.EventListener getListener() -> d
    53:54:void setListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> a
    57:57:boolean getCapture() -> e
    61:62:void setCapture(boolean) -> a
    65:68:void reset() -> b
com.badlogic.gdx.scenes.scene2d.actions.RepeatAction -> com.badlogic.gdx.g.a.a.s:
    int FOREVER -> c
    int repeatCount -> d
    int executedCount -> e
    boolean finished -> f
    28:35:boolean act(float) -> a
    40:41:void finish() -> c
    44:47:void restart() -> a
    51:52:void setCount(int) -> a
    55:55:int getCount() -> d
com.badlogic.gdx.scenes.scene2d.actions.RotateByAction -> com.badlogic.gdx.g.a.a.t:
    float amount -> b
    25:26:void updateRelative(float) -> c
    29:29:float getAmount() -> d
    33:34:void setAmount(float) -> d
com.badlogic.gdx.scenes.scene2d.actions.RotateToAction -> com.badlogic.gdx.g.a.a.u:
    float start -> b
    float end -> c
    25:26:void begin() -> c
    29:30:void update(float) -> b
    33:33:float getRotation() -> d
    37:38:void setRotation(float) -> c
com.badlogic.gdx.scenes.scene2d.actions.RunnableAction -> com.badlogic.gdx.g.a.a.v:
    java.lang.Runnable runnable -> b
    boolean ran -> c
    29:33:boolean act(float) -> a
    38:39:void run() -> c
    42:43:void restart() -> a
    46:48:void reset() -> b
    51:51:java.lang.Runnable getRunnable() -> d
    55:56:void setRunnable(java.lang.Runnable) -> a
com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction -> com.badlogic.gdx.g.a.a.w:
    float amountX -> b
    float amountY -> c
    25:26:void updateRelative(float) -> c
    29:31:void setAmount(float,float) -> a
    34:36:void setAmount(float) -> d
    39:39:float getAmountX() -> d
    43:44:void setAmountX(float) -> f
    47:47:float getAmountY() -> e
    51:52:void setAmountY(float) -> g
com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction -> com.badlogic.gdx.g.a.a.x:
    float startX -> b
    float startY -> c
    float endX -> d
    float endY -> e
    26:28:void begin() -> c
    31:32:void update(float) -> b
    35:37:void setScale(float,float) -> a
    40:42:void setScale(float) -> c
    45:45:float getX() -> d
    49:50:void setX(float) -> d
    53:53:float getY() -> e
    57:58:void setY(float) -> f
com.badlogic.gdx.scenes.scene2d.actions.SequenceAction -> com.badlogic.gdx.g.a.a.y:
    int index -> c
    25:30:boolean act(float) -> a
    34:36:void restart() -> a
com.badlogic.gdx.scenes.scene2d.actions.SizeByAction -> com.badlogic.gdx.g.a.a.z:
    float amountWidth -> b
    float amountHeight -> c
    25:26:void updateRelative(float) -> c
    29:31:void setAmount(float,float) -> a
    34:34:float getAmountWidth() -> d
    38:39:void setAmountWidth(float) -> d
    42:42:float getAmountHeight() -> e
    46:47:void setAmountHeight(float) -> f
com.badlogic.gdx.scenes.scene2d.actions.SizeToAction -> com.badlogic.gdx.g.a.a.aa:
    float startWidth -> b
    float startHeight -> c
    float endWidth -> d
    float endHeight -> e
    26:28:void begin() -> c
    31:32:void update(float) -> b
    35:37:void setSize(float,float) -> a
    40:40:float getWidth() -> d
    44:45:void setWidth(float) -> c
    48:48:float getHeight() -> e
    52:53:void setHeight(float) -> d
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction -> com.badlogic.gdx.g.a.a.ab:
    float duration -> b
    float time -> c
    com.badlogic.gdx.math.Interpolation interpolation -> d
    boolean reverse -> e
    boolean complete -> f
    42:55:boolean act(float) -> a
    61:61:void begin() -> c
    65:65:void end() -> d
    void update(float) -> b
    74:75:void finish() -> e
    78:80:void restart() -> a
    83:86:void reset() -> b
    90:90:float getTime() -> f
    95:96:void setTime(float) -> c
    99:99:float getDuration() -> g
    104:105:void setDuration(float) -> e
    108:108:com.badlogic.gdx.math.Interpolation getInterpolation() -> h
    112:113:void setInterpolation(com.badlogic.gdx.math.Interpolation) -> a
    116:116:boolean isReverse() -> i
    121:122:void setReverse(boolean) -> a
com.badlogic.gdx.scenes.scene2d.actions.TouchableAction -> com.badlogic.gdx.g.a.a.ac:
    com.badlogic.gdx.scenes.scene2d.Touchable touchable -> b
    29:30:boolean act(float) -> a
    34:34:com.badlogic.gdx.scenes.scene2d.Touchable getTouchable() -> c
    38:39:void setTouchable(com.badlogic.gdx.scenes.scene2d.Touchable) -> a
com.badlogic.gdx.scenes.scene2d.actions.VisibleAction -> com.badlogic.gdx.g.a.a.ad:
    boolean visible -> b
    28:29:boolean act(float) -> a
    33:33:boolean isVisible() -> c
    37:38:void setVisible(boolean) -> a
com.badlogic.gdx.scenes.scene2d.ui.Button -> com.badlogic.gdx.g.a.b.a:
    com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle style -> d
    boolean isChecked -> a
    boolean isDisabled -> b
    com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup buttonGroup -> c
    com.badlogic.gdx.scenes.scene2d.utils.ClickListener clickListener -> e
    80:88:void initialize() -> J
    107:115:void setChecked(boolean) -> c
    120:121:void toggle() -> R
    124:124:boolean isChecked() -> a_
    128:128:boolean isPressed() -> b_
    132:132:boolean isOver() -> D
    136:136:com.badlogic.gdx.scenes.scene2d.utils.ClickListener getClickListener() -> S
    140:140:boolean isDisabled() -> T
    145:146:void setDisabled(boolean) -> e
    149:164:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> a
    169:169:com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> E
    173:206:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    209:209:void drawBackground(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> c
    212:216:float getPrefWidth() -> F
    220:224:float getPrefHeight() -> G
    228:228:float getMinWidth() -> H
    232:232:float getMinHeight() -> I
com.badlogic.gdx.scenes.scene2d.ui.Button$1 -> com.badlogic.gdx.g.a.b.b:
    com.badlogic.gdx.scenes.scene2d.ui.Button this$0 -> a
    83:86:void clicked$43069389(float,float) -> a
com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle -> com.badlogic.gdx.g.a.b.c:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable up -> a
    com.badlogic.gdx.scenes.scene2d.utils.Drawable down -> b
    com.badlogic.gdx.scenes.scene2d.utils.Drawable over -> c
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checked -> d
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkedOver -> e
    com.badlogic.gdx.scenes.scene2d.utils.Drawable disabled -> f
    float pressedOffsetX -> g
    float pressedOffsetY -> h
    float unpressedOffsetX -> i
    float unpressedOffsetY -> j
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup -> com.badlogic.gdx.g.a.b.d:
    com.badlogic.gdx.utils.Array buttons -> a
    com.badlogic.gdx.utils.Array checkedButtons -> b
    int minCheckCount -> c
    int maxCheckCount -> d
    boolean uncheckLast -> e
    com.badlogic.gdx.scenes.scene2d.ui.Button lastChecked -> f
    42:49:void add(com.badlogic.gdx.scenes.scene2d.ui.Button) -> a
    52:55:void add(com.badlogic.gdx.scenes.scene2d.ui.Button[]) -> a
    58:61:void remove(com.badlogic.gdx.scenes.scene2d.ui.Button) -> b
    64:67:void remove(com.badlogic.gdx.scenes.scene2d.ui.Button[]) -> b
    71:79:void setChecked(java.lang.String) -> a
    84:105:boolean canCheck(com.badlogic.gdx.scenes.scene2d.ui.Button,boolean) -> a
    110:117:void uncheckAll() -> a
    121:122:com.badlogic.gdx.scenes.scene2d.ui.Button getChecked() -> b
    126:126:com.badlogic.gdx.utils.Array getAllChecked() -> c
    130:130:com.badlogic.gdx.utils.Array getButtons() -> d
    135:136:void setMinCheckCount(int) -> a
    140:141:void setMaxCheckCount(int) -> b
    147:148:void setUncheckLast(boolean) -> a
com.badlogic.gdx.scenes.scene2d.ui.CheckBox -> com.badlogic.gdx.g.a.b.e:
    com.badlogic.gdx.scenes.scene2d.ui.Image image -> d
    com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle style -> e
    51:54:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> a
    59:59:com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle getStyle() -> S
    64:72:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    75:75:com.badlogic.gdx.scenes.scene2d.ui.Image getImage() -> T
    27:27:com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle getStyle() -> J
    27:27:com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> E
com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle -> com.badlogic.gdx.g.a.b.f:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOn -> k
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOff -> l
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOver -> m
com.badlogic.gdx.scenes.scene2d.ui.Dialog -> com.badlogic.gdx.g.a.b.g:
    float fadeDuration -> a
    com.badlogic.gdx.scenes.scene2d.ui.Table contentTable -> b
    com.badlogic.gdx.scenes.scene2d.ui.Table buttonTable -> c
    com.badlogic.gdx.scenes.scene2d.ui.Skin skin -> n
    com.badlogic.gdx.utils.ObjectMap values -> d
    boolean cancelHide -> e
    com.badlogic.gdx.scenes.scene2d.Actor previousKeyboardFocus -> f
    com.badlogic.gdx.scenes.scene2d.Actor previousScrollFocus -> g
    com.badlogic.gdx.scenes.scene2d.InputListener ignoreTouchDown -> h
    74:113:void initialize() -> D
    116:116:com.badlogic.gdx.scenes.scene2d.ui.Table getContentTable() -> E
    120:120:com.badlogic.gdx.scenes.scene2d.ui.Table getButtonTable() -> J
    125:127:com.badlogic.gdx.scenes.scene2d.ui.Dialog text(java.lang.String) -> a
    132:132:com.badlogic.gdx.scenes.scene2d.ui.Dialog text(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle) -> a
    137:138:com.badlogic.gdx.scenes.scene2d.ui.Dialog text(com.badlogic.gdx.scenes.scene2d.ui.Label) -> a
    144:144:com.badlogic.gdx.scenes.scene2d.ui.Dialog button(java.lang.String) -> b
    150:152:com.badlogic.gdx.scenes.scene2d.ui.Dialog button$5346cc1a(java.lang.String) -> c
    158:158:com.badlogic.gdx.scenes.scene2d.ui.Dialog button(java.lang.String,java.lang.Object,com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle) -> a
    163:163:com.badlogic.gdx.scenes.scene2d.ui.Dialog button(com.badlogic.gdx.scenes.scene2d.ui.Button) -> a
    169:171:com.badlogic.gdx.scenes.scene2d.ui.Dialog button(com.badlogic.gdx.scenes.scene2d.ui.Button,java.lang.Object) -> a
    176:189:com.badlogic.gdx.scenes.scene2d.ui.Dialog show(com.badlogic.gdx.scenes.scene2d.Stage) -> b
    195:201:void hide() -> h_
    204:214:void setParent(com.badlogic.gdx.scenes.scene2d.Group) -> a
    217:218:void setObject(com.badlogic.gdx.scenes.scene2d.Actor,java.lang.Object) -> a
    223:233:com.badlogic.gdx.scenes.scene2d.ui.Dialog key(int,java.lang.Object) -> a
    239:239:void result$5d527811() -> i_
    242:243:void cancel() -> R
com.badlogic.gdx.scenes.scene2d.ui.Dialog$1 -> com.badlogic.gdx.g.a.b.h:
    com.badlogic.gdx.scenes.scene2d.ui.Dialog this$0 -> a
    51:52:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> a
com.badlogic.gdx.scenes.scene2d.ui.Dialog$2 -> com.badlogic.gdx.g.a.b.i:
    com.badlogic.gdx.scenes.scene2d.ui.Dialog this$0 -> a
    86:92:void changed$d8a80ea(com.badlogic.gdx.scenes.scene2d.Actor) -> a
com.badlogic.gdx.scenes.scene2d.ui.Dialog$3 -> com.badlogic.gdx.g.a.b.j:
    com.badlogic.gdx.scenes.scene2d.ui.Dialog this$0 -> a
    97:98:void keyboardFocusChanged$5cca10c6(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,boolean) -> a
    101:102:void scrollFocusChanged$5cca10c6(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,boolean) -> b
    105:111:void focusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent) -> a
com.badlogic.gdx.scenes.scene2d.ui.Dialog$4 -> com.badlogic.gdx.g.a.b.k:
    int val$keycode -> a
    java.lang.Object val$object -> b
    com.badlogic.gdx.scenes.scene2d.ui.Dialog this$0 -> c
    225:230:boolean keyDown$3bf7ec50(int) -> c
com.badlogic.gdx.scenes.scene2d.ui.Image -> com.badlogic.gdx.g.a.b.l:
    com.badlogic.gdx.utils.Scaling scaling -> a
    int align -> b
    float imageX -> c
    float imageY -> d
    float imageWidth -> e
    float imageHeight -> f
    com.badlogic.gdx.scenes.scene2d.utils.Drawable drawable -> g
    90:116:void layout() -> d_
    119:142:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    145:152:void setDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> a
    155:155:com.badlogic.gdx.scenes.scene2d.utils.Drawable getDrawable() -> x
    159:161:void setScaling(com.badlogic.gdx.utils.Scaling) -> a
    164:165:void setAlign(int) -> a
    168:168:float getMinWidth() -> H
    172:172:float getMinHeight() -> I
    176:177:float getPrefWidth() -> F
    181:182:float getPrefHeight() -> G
    186:186:float getImageX() -> y
    190:190:float getImageY() -> A
    194:194:float getImageWidth() -> D
    198:198:float getImageHeight() -> E
com.badlogic.gdx.scenes.scene2d.ui.ImageButton -> com.badlogic.gdx.g.a.b.m:
    com.badlogic.gdx.scenes.scene2d.ui.Image image -> d
    com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle style -> e
    64:68:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> a
    71:71:com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle getStyle() -> J
    75:86:void updateImage() -> R
    89:91:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    94:94:com.badlogic.gdx.scenes.scene2d.ui.Image getImage() -> S
    98:98:com.esotericsoftware.tablelayout.Cell getImageCell() -> T
    29:29:com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> E
com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle -> com.badlogic.gdx.g.a.b.n:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageUp -> k
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDown -> l
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageOver -> m
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageChecked -> n
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageCheckedOver -> o
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDisabled -> p
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton -> com.badlogic.gdx.g.a.b.o:
    com.badlogic.gdx.scenes.scene2d.ui.Image image -> d
    com.badlogic.gdx.scenes.scene2d.ui.Label label -> e
    com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle style -> f
    68:79:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> a
    82:82:com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle getStyle() -> J
    86:97:void updateImage() -> R
    100:114:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    117:117:com.badlogic.gdx.scenes.scene2d.ui.Image getImage() -> S
    121:121:com.esotericsoftware.tablelayout.Cell getImageCell() -> T
    125:125:com.badlogic.gdx.scenes.scene2d.ui.Label getLabel() -> U
    129:129:com.esotericsoftware.tablelayout.Cell getLabelCell() -> V
    133:134:void setText(java.lang.String) -> a
    137:137:java.lang.CharSequence getText() -> W
    34:34:com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> E
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle -> com.badlogic.gdx.g.a.b.p:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageUp -> k
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDown -> l
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageOver -> m
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageChecked -> n
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageCheckedOver -> o
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDisabled -> p
com.badlogic.gdx.scenes.scene2d.ui.Label -> com.badlogic.gdx.g.a.b.q:
    com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle style -> a
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds bounds -> b
    com.badlogic.gdx.utils.StringBuilder text -> c
    com.badlogic.gdx.graphics.g2d.BitmapFontCache cache -> d
    int labelAlign -> e
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment lineAlign -> f
    boolean wrap -> g
    float lastPrefHeight -> h
    boolean sizeInvalid -> i
    float fontScaleX -> j
    float fontScaleY -> k
    77:82:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle) -> a
    87:87:com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle getStyle() -> x
    92:103:void setText(java.lang.CharSequence) -> a
    106:111:boolean textEquals(java.lang.CharSequence) -> b
    115:115:java.lang.CharSequence getText() -> y
    119:121:void invalidate() -> c_
    124:133:void computeSize() -> A
    136:183:void layout() -> d_
    186:195:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    198:203:float getPrefWidth() -> F
    207:211:float getPrefHeight() -> G
    215:216:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getTextBounds() -> D
    223:225:void setWrap(boolean) -> b
    230:231:void setAlignment(int) -> a
    237:247:void setAlignment(int,int) -> a
    250:253:void setFontScale(float) -> h
    256:259:void setFontScale(float,float) -> g
    262:262:float getFontScaleX() -> E
    266:268:void setFontScaleX(float) -> i
    271:271:float getFontScaleY() -> J
    275:277:void setFontScaleY(float) -> j
com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle -> com.badlogic.gdx.g.a.b.r:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> a
    com.badlogic.gdx.graphics.Color fontColor -> b
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> c
com.badlogic.gdx.scenes.scene2d.ui.List -> com.badlogic.gdx.g.a.b.s:
    com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle style -> a
    java.lang.String[] items -> b
    int selectedIndex -> c
    com.badlogic.gdx.math.Rectangle cullingArea -> d
    float prefWidth -> e
    float prefHeight -> f
    float itemHeight -> g
    float textOffsetX -> h
    float textOffsetY -> i
    71:80:void touchDown(float) -> h
    83:89:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle) -> a
    93:93:com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle getStyle() -> x
    98:128:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    132:132:int getSelectedIndex() -> y
    136:139:void setSelectedIndex(int) -> a
    143:144:java.lang.String getSelection() -> A
    149:156:int setSelection(java.lang.String) -> a
    160:189:void setItems(java.lang.Object[]) -> a
    192:192:java.lang.String[] getItems() -> D
    196:196:float getPrefWidth() -> F
    200:200:float getPrefHeight() -> G
    204:205:void setCullingArea(com.badlogic.gdx.math.Rectangle) -> a
com.badlogic.gdx.scenes.scene2d.ui.List$1 -> com.badlogic.gdx.g.a.b.t:
    com.badlogic.gdx.scenes.scene2d.ui.List this$0 -> a
    63:65:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> a
com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle -> com.badlogic.gdx.g.a.b.u:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> a
    com.badlogic.gdx.graphics.Color fontColorSelected -> b
    com.badlogic.gdx.graphics.Color fontColorUnselected -> c
    com.badlogic.gdx.scenes.scene2d.utils.Drawable selection -> d
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane -> com.badlogic.gdx.g.a.b.v:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle style -> C
    com.badlogic.gdx.scenes.scene2d.Actor widget -> D
    com.badlogic.gdx.math.Rectangle hScrollBounds -> a
    com.badlogic.gdx.math.Rectangle vScrollBounds -> b
    com.badlogic.gdx.math.Rectangle hKnobBounds -> c
    com.badlogic.gdx.math.Rectangle vKnobBounds -> d
    com.badlogic.gdx.math.Rectangle widgetAreaBounds -> E
    com.badlogic.gdx.math.Rectangle widgetCullingArea -> F
    com.badlogic.gdx.math.Rectangle scissorBounds -> G
    com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener flickScrollListener -> H
    boolean scrollX -> e
    boolean scrollY -> f
    float amountX -> g
    float amountY -> h
    float visualAmountX -> i
    float visualAmountY -> j
    float maxX -> k
    float maxY -> l
    boolean touchScrollH -> m
    boolean touchScrollV -> n
    com.badlogic.gdx.math.Vector2 lastPoint -> o
    float areaWidth -> p
    float areaHeight -> q
    boolean fadeScrollBars -> I
    boolean smoothScrolling -> J
    float fadeAlpha -> r
    float fadeAlphaSeconds -> s
    float fadeDelay -> t
    float fadeDelaySeconds -> u
    boolean cancelTouchFocus -> v
    boolean flickScroll -> w
    float velocityX -> x
    float velocityY -> y
    float flingTimer -> z
    boolean overscrollX -> K
    boolean overscrollY -> L
    float flingTime -> A
    float overscrollDistance -> M
    float overscrollSpeedMin -> N
    float overscrollSpeedMax -> O
    boolean forceOverscrollX -> P
    boolean forceOverscrollY -> Q
    boolean disableX -> R
    boolean disableY -> S
    boolean clamp -> T
    boolean scrollbarsOnTop -> U
    int draggingPointer -> B
    224:226:void resetFade() -> j_
    229:232:void cancelTouchFocusedChild$2f9d2637() -> C
    235:240:void clamp() -> D
    243:246:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle) -> a
    251:251:com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle getStyle() -> J
    255:333:void act(float) -> a
    336:468:void layout() -> d_
    472:547:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    550:551:float getPrefWidth() -> F
    555:556:float getPrefHeight() -> G
    560:560:float getMinWidth() -> H
    564:564:float getMinHeight() -> I
    570:574:void setWidget(com.badlogic.gdx.scenes.scene2d.Actor) -> e
    578:578:com.badlogic.gdx.scenes.scene2d.Actor getWidget() -> K
    582:582:void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> c
    586:586:void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor) -> a
    590:590:void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> a
    594:596:boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> d
    600:603:com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> a
    608:609:void scrollX(float) -> l
    613:614:void scrollY(float) -> m
    618:619:void visualScrollX(float) -> n
    623:624:void visualScrollY(float) -> o
    627:628:void setScrollX(float) -> h
    632:632:float getScrollX() -> L
    636:637:void setScrollY(float) -> i
    641:641:float getScrollY() -> E
    645:645:float getVisualScrollX() -> M
    649:649:float getVisualScrollY() -> N
    653:653:float getScrollPercentX() -> R
    657:658:void setScrollPercentX(float) -> j
    661:661:float getScrollPercentY() -> S
    665:666:void setScrollPercentY(float) -> k
    669:676:void setFlickScroll(boolean) -> e
    681:690:void scrollTo(float,float,float,float) -> c
    695:704:void scrollToCenter(float,float,float,float) -> d
    708:708:float getMaxX() -> T
    713:713:float getMaxY() -> U
    717:717:float getScrollBarHeight() -> V
    721:721:float getScrollBarWidth() -> W
    725:725:boolean isScrollX() -> X
    729:729:boolean isScrollY() -> Y
    734:736:void setScrollingDisabled(boolean,boolean) -> a
    739:739:boolean isDragging() -> Z
    743:743:boolean isPanning() -> aa
    747:747:boolean isFlinging() -> ab
    751:752:void setVelocityX(float) -> p
    756:759:float getVelocityX() -> ac
    763:764:void setVelocityY(float) -> q
    768:768:float getVelocityY() -> ad
    774:776:void setOverscroll(boolean,boolean) -> b
    781:784:void setupOverscroll(float,float,float) -> a
    789:791:void setForceOverscroll(boolean,boolean) -> c
    795:796:void setFlingTime(float) -> r
    800:801:void setClamp(boolean) -> f
    805:809:void setFadeScrollBars(boolean) -> g
    812:814:void setupFadeScrollBars(float,float) -> g
    817:818:void setSmoothScrolling(boolean) -> h
    824:826:void setScrollbarsOnTop(boolean) -> i
    831:832:void setCancelTouchFocus(boolean) -> j
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$1 -> com.badlogic.gdx.g.a.b.w:
    float handlePosition -> b
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane this$0 -> a
    108:142:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> a
    146:150:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> b
    153:171:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> a
    174:175:boolean mouseMoved$43069385(com.badlogic.gdx.scenes.scene2d.InputEvent,float) -> a
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$2 -> com.badlogic.gdx.g.a.b.x:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane this$0 -> a
    181:186:void pan$645d22b7$43069389(float,float) -> a
    189:199:void fling$1dcb6a94$43069389(float,float) -> b
    202:206:boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> a
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$3 -> com.badlogic.gdx.g.a.b.y:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane this$0 -> a
    213:218:boolean scrolled$1dcb6a90(int) -> b
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle -> com.badlogic.gdx.g.a.b.z:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> a
    com.badlogic.gdx.scenes.scene2d.utils.Drawable corner -> b
    com.badlogic.gdx.scenes.scene2d.utils.Drawable hScroll -> c
    com.badlogic.gdx.scenes.scene2d.utils.Drawable hScrollKnob -> d
    com.badlogic.gdx.scenes.scene2d.utils.Drawable vScroll -> e
    com.badlogic.gdx.scenes.scene2d.utils.Drawable vScrollKnob -> f
com.badlogic.gdx.scenes.scene2d.ui.SelectBox -> com.badlogic.gdx.g.a.b.aa:
    com.badlogic.gdx.math.Vector2 tmpCoords -> a
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle style -> b
    java.lang.String[] items -> c
    int selectedIndex -> d
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds bounds -> g
    com.badlogic.gdx.math.Vector2 screenCoords -> e
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectList list -> f
    float prefWidth -> h
    float prefHeight -> i
    com.badlogic.gdx.scenes.scene2d.utils.ClickListener clickListener -> j
    88:94:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle) -> a
    99:99:com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle getStyle() -> y
    103:129:void setItems(java.lang.Object[]) -> a
    134:163:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    168:169:void setSelection(int) -> a
    172:177:void setSelection(java.lang.String) -> a
    181:181:int getSelectionIndex() -> A
    186:186:java.lang.String getSelection() -> D
    190:190:float getPrefWidth() -> F
    194:194:float getPrefHeight() -> G
    198:202:void hideList() -> x
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$1 -> com.badlogic.gdx.g.a.b.ab:
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox this$0 -> a
    73:82:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> a
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle -> com.badlogic.gdx.g.a.b.ac:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> a
    com.badlogic.gdx.scenes.scene2d.utils.Drawable backgroundOver -> b
    com.badlogic.gdx.scenes.scene2d.utils.Drawable backgroundOpen -> c
    com.badlogic.gdx.scenes.scene2d.utils.Drawable listBackground -> d
    com.badlogic.gdx.scenes.scene2d.utils.Drawable listSelection -> e
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> f
    com.badlogic.gdx.graphics.Color fontColor -> g
    float itemSpacing -> h
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectList -> com.badlogic.gdx.g.a.b.ad:
    com.badlogic.gdx.math.Vector2 oldScreenCoords -> a
    float itemHeight -> b
    float textOffsetX -> c
    float textOffsetY -> d
    int listSelectedIndex -> e
    com.badlogic.gdx.scenes.scene2d.InputListener stageListener -> f
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox this$0 -> g
    263:275:void layout() -> w
    279:304:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    308:308:com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> a
    312:314:void act(float) -> a
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectList$1 -> com.badlogic.gdx.g.a.b.ae:
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectList this$1 -> a
    212:227:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> a
    231:232:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> b
    235:243:boolean mouseMoved$43069385(com.badlogic.gdx.scenes.scene2d.InputEvent,float) -> a
com.badlogic.gdx.scenes.scene2d.ui.Skin -> com.badlogic.gdx.g.a.b.af:
    com.badlogic.gdx.utils.ObjectMap resources -> a
    com.badlogic.gdx.graphics.g2d.TextureAtlas atlas -> b
    93:95:void load(com.badlogic.gdx.files.FileHandle) -> a
    101:106:void addRegions(com.badlogic.gdx.graphics.g2d.TextureAtlas) -> a
    109:110:void add(java.lang.String,java.lang.Object) -> a
    113:121:void add(java.lang.String,java.lang.Object,java.lang.Class) -> a
    124:124:java.lang.Object get(java.lang.Class) -> a
    128:140:java.lang.Object get(java.lang.String,java.lang.Class) -> a
    144:148:java.lang.Object optional(java.lang.String,java.lang.Class) -> b
    152:154:boolean has(java.lang.String,java.lang.Class) -> c
    159:159:com.badlogic.gdx.utils.ObjectMap getAll(java.lang.Class) -> b
    163:163:com.badlogic.gdx.graphics.Color getColor(java.lang.String) -> a
    167:167:com.badlogic.gdx.graphics.g2d.BitmapFont getFont(java.lang.String) -> b
    173:180:com.badlogic.gdx.graphics.g2d.TextureRegion getRegion(java.lang.String) -> d
    186:200:com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable getTiledDrawable(java.lang.String) -> e
    207:224:com.badlogic.gdx.graphics.g2d.NinePatch getPatch(java.lang.String) -> f
    232:246:com.badlogic.gdx.graphics.g2d.Sprite getSprite(java.lang.String) -> g
    253:289:com.badlogic.gdx.scenes.scene2d.utils.Drawable getDrawable(java.lang.String) -> c
    295:298:java.lang.String find(java.lang.Object) -> a
    303:303:com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(java.lang.String) -> h
    308:308:com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(java.lang.String,float,float,float,float) -> a
    313:313:com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(java.lang.String,com.badlogic.gdx.graphics.Color) -> a
    318:321:com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> a
    326:326:com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable,float,float,float,float) -> a
    331:357:com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.Color) -> a
    366:386:void setEnabled(com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> a
    390:390:com.badlogic.gdx.graphics.g2d.TextureAtlas getAtlas() -> a
    395:400:void dispose() -> dispose
    403:494:com.badlogic.gdx.utils.Json getJsonLoader(com.badlogic.gdx.files.FileHandle) -> b
    498:503:java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String) -> a
com.badlogic.gdx.scenes.scene2d.ui.Skin$1 -> com.badlogic.gdx.g.a.b.ag:
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> a
    408:409:java.lang.Object readValue(java.lang.Class,java.lang.Class,java.lang.Object) -> a
com.badlogic.gdx.scenes.scene2d.ui.Skin$2 -> com.badlogic.gdx.g.a.b.ah:
    com.badlogic.gdx.scenes.scene2d.ui.Skin val$skin -> a
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> b
    417:426:com.badlogic.gdx.scenes.scene2d.ui.Skin read$28ddaaad(com.badlogic.gdx.utils.Json,java.lang.Object) -> b
    431:441:void readNamedObjects(com.badlogic.gdx.utils.Json,java.lang.Class,com.badlogic.gdx.utils.ObjectMap) -> a
    415:415:java.lang.Object read$185f67a5(com.badlogic.gdx.utils.Json,java.lang.Object) -> a
com.badlogic.gdx.scenes.scene2d.ui.Skin$3 -> com.badlogic.gdx.g.a.b.ai:
    com.badlogic.gdx.files.FileHandle val$skinFile -> a
    com.badlogic.gdx.scenes.scene2d.ui.Skin val$skin -> b
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> c
    447:467:com.badlogic.gdx.graphics.g2d.BitmapFont read$251bbf52(com.badlogic.gdx.utils.Json,java.lang.Object) -> b
    445:445:java.lang.Object read$185f67a5(com.badlogic.gdx.utils.Json,java.lang.Object) -> a
com.badlogic.gdx.scenes.scene2d.ui.Skin$4 -> com.badlogic.gdx.g.a.b.aj:
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> a
    474:482:com.badlogic.gdx.graphics.Color read$597e236d(com.badlogic.gdx.utils.Json,java.lang.Object) -> b
    472:472:java.lang.Object read$185f67a5(com.badlogic.gdx.utils.Json,java.lang.Object) -> a
com.badlogic.gdx.scenes.scene2d.ui.Skin$5 -> com.badlogic.gdx.g.a.b.ak:
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> a
    488:490:java.lang.Object read$185f67a5(com.badlogic.gdx.utils.Json,java.lang.Object) -> a
com.badlogic.gdx.scenes.scene2d.ui.Skin$TintedDrawable -> com.badlogic.gdx.g.a.b.al:
    java.lang.String name -> a
    com.badlogic.gdx.graphics.Color color -> b
com.badlogic.gdx.scenes.scene2d.ui.Slider -> com.badlogic.gdx.g.a.b.am:
    com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle style -> b
    float min -> c
    float max -> d
    float stepSize -> e
    float value -> f
    float animateFromValue -> g
    float sliderPos -> h
    boolean vertical -> i
    int draggingPointer -> a
    float animateDuration -> j
    float animateTime -> k
    com.badlogic.gdx.math.Interpolation animateInterpolation -> l
    99:102:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle) -> a
    107:107:com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle getStyle() -> x
    111:113:void act(float) -> a
    117:175:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    178:203:void calculatePositionAndValue(float,float) -> g
    207:207:boolean isDragging() -> y
    211:211:float getValue() -> A
    216:217:float getVisualValue() -> D
    222:235:void setValue(float) -> h
    239:244:void setRange(float,float) -> h
    248:250:void setStepSize(float) -> i
    253:256:float getPrefWidth() -> F
    260:263:float getPrefHeight() -> G
    267:267:float getMinValue() -> E
    271:271:float getMaxValue() -> J
    275:275:float getStepSize() -> K
    280:281:void setAnimateDuration(float) -> j
    285:287:void setAnimateInterpolation(com.badlogic.gdx.math.Interpolation) -> a
com.badlogic.gdx.scenes.scene2d.ui.Slider$1 -> com.badlogic.gdx.g.a.b.an:
    com.badlogic.gdx.scenes.scene2d.ui.Slider this$0 -> a
    80:83:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> a
    87:90:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> b
    93:94:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> a
com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle -> com.badlogic.gdx.g.a.b.ao:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> a
    com.badlogic.gdx.scenes.scene2d.utils.Drawable knob -> b
    com.badlogic.gdx.scenes.scene2d.utils.Drawable knobBefore -> c
    com.badlogic.gdx.scenes.scene2d.utils.Drawable knobAfter -> d
com.badlogic.gdx.scenes.scene2d.ui.SplitPane -> com.badlogic.gdx.g.a.b.ap:
    com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle style -> a
    com.badlogic.gdx.scenes.scene2d.Actor firstWidget -> i
    com.badlogic.gdx.scenes.scene2d.Actor secondWidget -> j
    boolean vertical -> b
    float splitAmount -> c
    float minAmount -> d
    float maxAmount -> e
    float oldSplitAmount -> k
    com.badlogic.gdx.math.Rectangle firstWidgetBounds -> l
    com.badlogic.gdx.math.Rectangle secondWidgetBounds -> m
    com.badlogic.gdx.math.Rectangle handleBounds -> f
    com.badlogic.gdx.math.Rectangle firstScissors -> n
    com.badlogic.gdx.math.Rectangle secondScissors -> o
    com.badlogic.gdx.math.Vector2 lastPoint -> g
    com.badlogic.gdx.math.Vector2 handlePosition -> h
    82:131:void initialize() -> D
    134:136:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle) -> a
    141:141:com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle getStyle() -> E
    146:185:void layout() -> d_
    189:192:float getPrefWidth() -> F
    197:200:float getPrefHeight() -> G
    204:204:float getMinWidth() -> H
    208:208:float getMinHeight() -> I
    212:213:void setVertical(boolean) -> e
    216:228:void calculateHorizBoundsAndPositions() -> J
    231:244:void calculateVertBoundsAndPositions() -> K
    248:274:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    278:280:void setSplitAmount(float) -> h
    283:283:float getSplit() -> L
    287:290:void setMinSplitAmount(float) -> i
    293:296:void setMaxSplitAmount(float) -> j
    300:304:void setFirstWidget(com.badlogic.gdx.scenes.scene2d.Actor) -> e
    308:312:void setSecondWidget(com.badlogic.gdx.scenes.scene2d.Actor) -> f
    315:315:void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> c
    319:319:void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor) -> a
    323:323:void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> a
    327:327:boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> d
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$1 -> com.badlogic.gdx.g.a.b.aq:
    int draggingPointer -> a
    com.badlogic.gdx.scenes.scene2d.ui.SplitPane this$0 -> b
    86:94:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> a
    98:99:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> b
    102:129:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> a
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle -> com.badlogic.gdx.g.a.b.ar:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable handle -> a
com.badlogic.gdx.scenes.scene2d.ui.Stack -> com.badlogic.gdx.g.a.b.as:
    float prefWidth -> a
    float prefHeight -> b
    float minWidth -> c
    float minHeight -> d
    float maxWidth -> e
    float maxHeight -> f
    boolean sizeInvalid -> g
    53:55:void invalidate() -> c_
    58:88:void computeSize() -> D
    91:92:void add(com.badlogic.gdx.scenes.scene2d.Actor) -> e
    95:114:void layout() -> d_
    117:118:float getPrefWidth() -> F
    122:123:float getPrefHeight() -> G
    127:128:float getMinWidth() -> H
    132:133:float getMinHeight() -> I
    137:138:float getMaxWidth() -> B
    142:143:float getMaxHeight() -> k_
com.badlogic.gdx.scenes.scene2d.ui.Table -> com.badlogic.gdx.g.a.b.at:
    com.badlogic.gdx.scenes.scene2d.ui.TableLayout layout -> a
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> b
    boolean clip -> c
    com.badlogic.gdx.scenes.scene2d.ui.Skin skin -> d
    79:96:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    101:106:void drawBackground(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> c
    109:111:void invalidate() -> c_
    114:115:float getPrefWidth() -> F
    119:120:float getPrefHeight() -> G
    124:124:float getMinWidth() -> H
    128:128:float getMinHeight() -> I
    134:135:void setBackground(java.lang.String) -> a
    141:152:void setBackground(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> a
    155:155:com.badlogic.gdx.scenes.scene2d.utils.Drawable getBackground() -> D
    159:163:com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> a
    169:172:void setClip$1385ff() -> K
    176:176:int getRow(float) -> l
    181:184:void clearChildren() -> y
    188:189:com.esotericsoftware.tablelayout.Cell add(java.lang.String) -> b
    194:195:com.esotericsoftware.tablelayout.Cell add(java.lang.String,java.lang.String) -> a
    200:201:com.esotericsoftware.tablelayout.Cell add(java.lang.String,java.lang.String,com.badlogic.gdx.graphics.Color) -> a
    206:207:com.esotericsoftware.tablelayout.Cell add(java.lang.String,java.lang.String,java.lang.String) -> a
    212:212:com.esotericsoftware.tablelayout.Cell add() -> E
    218:218:com.esotericsoftware.tablelayout.Cell add(com.badlogic.gdx.scenes.scene2d.Actor) -> e
    224:229:com.esotericsoftware.tablelayout.Cell stack(com.badlogic.gdx.scenes.scene2d.Actor[]) -> a
    235:235:com.esotericsoftware.tablelayout.Cell row() -> L
    241:241:com.esotericsoftware.tablelayout.Cell columnDefaults(int) -> a
    246:246:com.esotericsoftware.tablelayout.Cell defaults() -> M
    250:251:void layout() -> d_
    256:257:void reset() -> J
    261:261:com.esotericsoftware.tablelayout.Cell getCell(com.badlogic.gdx.scenes.scene2d.Actor) -> f
    266:266:java.util.List getCells() -> R
    271:272:com.badlogic.gdx.scenes.scene2d.ui.Table pad$3161f66b() -> S
    276:277:com.badlogic.gdx.scenes.scene2d.ui.Table pad(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value) -> a
    282:283:com.badlogic.gdx.scenes.scene2d.ui.Table padTop(com.esotericsoftware.tablelayout.Value) -> a
    288:289:com.badlogic.gdx.scenes.scene2d.ui.Table padLeft(com.esotericsoftware.tablelayout.Value) -> b
    294:295:com.badlogic.gdx.scenes.scene2d.ui.Table padBottom(com.esotericsoftware.tablelayout.Value) -> c
    300:301:com.badlogic.gdx.scenes.scene2d.ui.Table padRight(com.esotericsoftware.tablelayout.Value) -> d
    306:307:com.badlogic.gdx.scenes.scene2d.ui.Table pad(float) -> m
    311:312:com.badlogic.gdx.scenes.scene2d.ui.Table pad(float,float,float,float) -> c
    317:318:com.badlogic.gdx.scenes.scene2d.ui.Table padTop(float) -> h
    323:324:com.badlogic.gdx.scenes.scene2d.ui.Table padLeft(float) -> i
    329:330:com.badlogic.gdx.scenes.scene2d.ui.Table padBottom(float) -> j
    335:336:com.badlogic.gdx.scenes.scene2d.ui.Table padRight(float) -> k
    342:343:com.badlogic.gdx.scenes.scene2d.ui.Table align(int) -> b
    348:349:com.badlogic.gdx.scenes.scene2d.ui.Table center() -> T
    354:355:com.badlogic.gdx.scenes.scene2d.ui.Table top() -> U
    360:361:com.badlogic.gdx.scenes.scene2d.ui.Table left() -> V
    366:367:com.badlogic.gdx.scenes.scene2d.ui.Table bottom() -> W
    372:373:com.badlogic.gdx.scenes.scene2d.ui.Table right() -> X
    378:379:com.badlogic.gdx.scenes.scene2d.ui.Table debug() -> Y
    384:385:com.badlogic.gdx.scenes.scene2d.ui.Table debugTable() -> Z
    390:391:com.badlogic.gdx.scenes.scene2d.ui.Table debugCell() -> aa
    396:397:com.badlogic.gdx.scenes.scene2d.ui.Table debugWidget() -> ab
    402:403:com.badlogic.gdx.scenes.scene2d.ui.Table debug(com.esotericsoftware.tablelayout.BaseTableLayout$Debug) -> a
    407:407:com.esotericsoftware.tablelayout.BaseTableLayout$Debug getDebug() -> ac
    411:411:com.esotericsoftware.tablelayout.Value getPadTopValue() -> ad
    415:415:float getPadTop() -> N
    419:419:com.esotericsoftware.tablelayout.Value getPadLeftValue() -> ae
    423:423:float getPadLeft() -> O
    427:427:com.esotericsoftware.tablelayout.Value getPadBottomValue() -> af
    431:431:float getPadBottom() -> ag
    435:435:com.esotericsoftware.tablelayout.Value getPadRightValue() -> ah
    439:439:float getPadRight() -> P
    444:444:float getPadX() -> ai
    449:449:float getPadY() -> aj
    453:453:int getAlign() -> ak
    457:458:void setSkin(com.badlogic.gdx.scenes.scene2d.ui.Skin) -> a
    462:463:void setRound(boolean) -> e
    469:471:void drawDebug(com.badlogic.gdx.scenes.scene2d.Stage) -> b
    474:480:void drawDebug(com.badlogic.gdx.utils.Array,com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
com.badlogic.gdx.scenes.scene2d.ui.TableLayout -> com.badlogic.gdx.g.a.b.au:
    com.badlogic.gdx.utils.Array debugRects -> a
    com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer debugRenderer -> p
    boolean round -> b
    48:108:void layout() -> a
    112:114:void invalidateHierarchy() -> b
    117:119:void toStageCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2) -> a
    123:178:void drawDebug(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
com.badlogic.gdx.scenes.scene2d.ui.TableToolkit -> com.badlogic.gdx.g.a.b.av:
    boolean drawDebug -> a
    35:44:void addChild(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> a
    47:48:void removeChild(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> b
    51:52:float getMinWidth(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    56:57:float getMinHeight(com.badlogic.gdx.scenes.scene2d.Actor) -> b
    61:62:float getPrefWidth(com.badlogic.gdx.scenes.scene2d.Actor) -> c
    66:67:float getPrefHeight(com.badlogic.gdx.scenes.scene2d.Actor) -> d
    71:72:float getMaxWidth(com.badlogic.gdx.scenes.scene2d.Actor) -> e
    76:77:float getMaxHeight(com.badlogic.gdx.scenes.scene2d.Actor) -> f
    81:81:float getWidth(com.badlogic.gdx.scenes.scene2d.Actor) -> g
    85:85:float getHeight(com.badlogic.gdx.scenes.scene2d.Actor) -> h
    89:90:void clearDebugRectangles(com.badlogic.gdx.scenes.scene2d.ui.TableLayout) -> a
    93:96:void addDebugRectangle(com.badlogic.gdx.scenes.scene2d.ui.TableLayout,com.esotericsoftware.tablelayout.BaseTableLayout$Debug,float,float,float,float) -> a
    31:31:void addDebugRectangle(com.esotericsoftware.tablelayout.BaseTableLayout,com.esotericsoftware.tablelayout.BaseTableLayout$Debug,float,float,float,float) -> a
    31:31:void clearDebugRectangles(com.esotericsoftware.tablelayout.BaseTableLayout) -> a
    31:31:float getHeight(java.lang.Object) -> a
    31:31:float getWidth(java.lang.Object) -> b
    31:31:float getMaxHeight(java.lang.Object) -> c
    31:31:float getMaxWidth(java.lang.Object) -> d
    31:31:float getPrefHeight(java.lang.Object) -> e
    31:31:float getPrefWidth(java.lang.Object) -> f
    31:31:float getMinHeight(java.lang.Object) -> g
    31:31:float getMinWidth(java.lang.Object) -> h
    31:31:void removeChild(java.lang.Object,java.lang.Object) -> a
    31:31:void addChild(java.lang.Object,java.lang.Object) -> b
com.badlogic.gdx.scenes.scene2d.ui.TableToolkit$DebugRect -> com.badlogic.gdx.g.a.b.aw:
    com.esotericsoftware.tablelayout.BaseTableLayout$Debug type -> g
com.badlogic.gdx.scenes.scene2d.ui.TextButton -> com.badlogic.gdx.g.a.b.ax:
    com.badlogic.gdx.scenes.scene2d.ui.Label label -> d
    com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle style -> e
    54:64:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> a
    67:67:com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle getStyle() -> J
    72:84:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    87:87:com.badlogic.gdx.scenes.scene2d.ui.Label getLabel() -> Q
    91:91:com.esotericsoftware.tablelayout.Cell getLabelCell() -> S
    95:96:void setText(java.lang.String) -> a
    99:99:java.lang.CharSequence getText() -> R
    29:29:com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> E
com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle -> com.badlogic.gdx.g.a.b.ay:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> q
    com.badlogic.gdx.graphics.Color fontColor -> r
    com.badlogic.gdx.graphics.Color downFontColor -> s
    com.badlogic.gdx.graphics.Color overFontColor -> t
    com.badlogic.gdx.graphics.Color checkedFontColor -> u
    com.badlogic.gdx.graphics.Color checkedOverFontColor -> v
    com.badlogic.gdx.graphics.Color disabledFontColor -> w
com.badlogic.gdx.scenes.scene2d.ui.TextField -> com.badlogic.gdx.g.a.b.az:
    char BACKSPACE -> w
    char ENTER_DESKTOP -> x
    char ENTER_ANDROID -> y
    char TAB -> z
    char DELETE -> A
    char BULLET -> B
    com.badlogic.gdx.math.Vector2 tmp1 -> C
    com.badlogic.gdx.math.Vector2 tmp2 -> D
    com.badlogic.gdx.math.Vector2 tmp3 -> E
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle style -> a
    java.lang.String text -> b
    java.lang.String messageText -> c
    java.lang.CharSequence displayText -> F
    int cursor -> d
    com.badlogic.gdx.utils.Clipboard clipboard -> G
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener listener -> e
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter filter -> f
    com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard keyboard -> g
    boolean focusTraversal -> h
    boolean disabled -> i
    boolean passwordMode -> H
    java.lang.StringBuilder passwordBuffer -> I
    com.badlogic.gdx.math.Rectangle fieldBounds -> J
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds textBounds -> K
    com.badlogic.gdx.math.Rectangle scissor -> L
    float renderOffset -> j
    float textOffset -> k
    int visibleTextStart -> M
    int visibleTextEnd -> N
    com.badlogic.gdx.utils.FloatArray glyphAdvances -> O
    com.badlogic.gdx.utils.FloatArray glyphPositions -> l
    boolean cursorOn -> m
    float blinkTime -> P
    long lastBlink -> n
    boolean hasSelection -> o
    int selectionStart -> p
    float selectionX -> Q
    float selectionWidth -> R
    char passwordCharacter -> S
    com.badlogic.gdx.scenes.scene2d.InputListener inputListener -> q
    com.badlogic.gdx.scenes.scene2d.ui.TextField$KeyRepeatTask keyRepeatTask -> r
    float keyRepeatInitialTime -> s
    float keyRepeatTime -> t
    boolean rightAligned -> u
    int maxLength -> v
    128:366:void initialize() -> R
    369:370:void setMaxLength$13462e() -> x
    373:373:int getMaxLength() -> S
    377:380:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle) -> a
    383:384:void setPasswordCharacter(char) -> a
    389:389:com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle getStyle() -> T
    393:444:void calculateOffsets() -> U
    448:503:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    506:519:void updateDisplayText() -> y
    522:527:void blink() -> V
    531:536:void copy() -> A
    541:545:void cut() -> D
    549:579:void paste() -> E
    582:589:void delete() -> J
    594:609:void next(boolean) -> b
    612:627:com.badlogic.gdx.scenes.scene2d.ui.TextField findNextTextField(com.badlogic.gdx.utils.Array,com.badlogic.gdx.scenes.scene2d.ui.TextField,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,boolean) -> a
    632:633:void setTextFieldListener(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener) -> a
    637:638:void setTextFieldFilter(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter) -> a
    642:643:void setFocusTraversal(boolean) -> e
    647:647:java.lang.String getMessageText() -> W
    653:654:void setMessageText(java.lang.String) -> b
    657:678:void setText(java.lang.String) -> a
    682:682:java.lang.String getText() -> K
    687:704:void setSelection$255f295(int) -> a
    707:708:void selectAll() -> X
    711:712:void clearSelection() -> L
    716:719:void setCursorPosition$13462e() -> M
    722:722:int getCursorPosition() -> Y
    727:727:com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard getOnscreenKeyboard() -> N
    731:732:void setOnscreenKeyboard(com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard) -> a
    735:736:void setClipboard(com.badlogic.gdx.utils.Clipboard) -> a
    739:739:float getPrefWidth() -> F
    743:748:float getPrefHeight() -> G
    752:753:void setRightAligned(boolean) -> f
    758:759:void setPasswordMode(boolean) -> g
    762:763:void setBlinkTime(float) -> h
    766:767:void setDisabled(boolean) -> h
    770:770:boolean isDisabled() -> Z
    774:774:boolean isPasswordMode() -> aa
    778:778:com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter getTextFieldFilter() -> ab
com.badlogic.gdx.scenes.scene2d.ui.TextField$1 -> com.badlogic.gdx.g.a.b.ba:
    com.badlogic.gdx.scenes.scene2d.ui.TextField this$0 -> a
    130:131:void clicked$43069389(float,float) -> a
    134:143:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> a
    147:152:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> a
    155:165:void setCursorPosition(float) -> a
    168:297:boolean keyDown$3bf7ec50(int) -> c
    301:303:boolean keyUp$3bf7ec50() -> a
    307:363:boolean keyTyped$3bf802d6(char) -> a
com.badlogic.gdx.scenes.scene2d.ui.TextField$DefaultOnscreenKeyboard -> com.badlogic.gdx.g.a.b.bb:
    824:825:void show(boolean) -> a
com.badlogic.gdx.scenes.scene2d.ui.TextField$KeyRepeatTask -> com.badlogic.gdx.g.a.b.bc:
    int keycode -> a
    com.badlogic.gdx.scenes.scene2d.ui.TextField this$0 -> b
    785:786:void run() -> run
com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard -> com.badlogic.gdx.g.a.b.bd:
    void show(boolean) -> a
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter -> com.badlogic.gdx.g.a.b.be:
    boolean acceptChar$5b6ffccc(char) -> a
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter$DigitsOnlyFilter -> com.badlogic.gdx.g.a.b.bf:
    806:806:boolean acceptChar$5b6ffccc(char) -> a
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener -> com.badlogic.gdx.g.a.b.bg:
    void keyTyped(com.badlogic.gdx.scenes.scene2d.ui.TextField,char) -> a
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle -> com.badlogic.gdx.g.a.b.bh:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> a
    com.badlogic.gdx.graphics.Color fontColor -> b
    com.badlogic.gdx.graphics.Color disabledFontColor -> c
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> d
    com.badlogic.gdx.scenes.scene2d.utils.Drawable cursor -> e
    com.badlogic.gdx.scenes.scene2d.utils.Drawable selection -> f
    com.badlogic.gdx.graphics.g2d.BitmapFont messageFont -> g
    com.badlogic.gdx.graphics.Color messageFontColor -> h
com.badlogic.gdx.scenes.scene2d.ui.Touchpad -> com.badlogic.gdx.g.a.b.bi:
    com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle style -> b
    boolean touched -> a
    float deadzoneRadius -> c
    com.badlogic.gdx.math.Circle knobBounds -> d
    com.badlogic.gdx.math.Circle touchBounds -> e
    com.badlogic.gdx.math.Circle deadzoneBounds -> f
    com.badlogic.gdx.math.Vector2 knobPosition -> g
    com.badlogic.gdx.math.Vector2 knobPercent -> h
    91:119:void calculatePositionAndValue(float,float,boolean) -> b
    122:125:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle) -> a
    130:130:com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle getStyle() -> x
    135:135:com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> a
    141:151:void layout() -> d_
    155:174:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    178:178:float getPrefWidth() -> F
    183:183:float getPrefHeight() -> G
    187:187:boolean isTouched() -> y
    192:195:void setDeadzone(float) -> h
    199:199:float getKnobX() -> A
    204:204:float getKnobY() -> D
    210:210:float getKnobPercentX() -> E
    216:216:float getKnobPercentY() -> J
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$1 -> com.badlogic.gdx.g.a.b.bj:
    com.badlogic.gdx.scenes.scene2d.ui.Touchpad this$0 -> a
    71:74:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> a
    79:80:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> a
    84:86:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> b
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle -> com.badlogic.gdx.g.a.b.bk:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> a
    com.badlogic.gdx.scenes.scene2d.utils.Drawable knob -> b
com.badlogic.gdx.scenes.scene2d.ui.Tree -> com.badlogic.gdx.g.a.b.bl:
    com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle style -> a
    com.badlogic.gdx.utils.Array rootNodes -> b
    com.badlogic.gdx.utils.Array selectedNodes -> c
    float ySpacing -> d
    float iconSpacing -> e
    float padding -> f
    float indentSpacing -> g
    float leftColumnWidth -> j
    float prefWidth -> k
    float prefHeight -> l
    boolean sizeInvalid -> m
    boolean multiSelect -> h
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node foundNode -> n
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node overNode -> i
    com.badlogic.gdx.scenes.scene2d.utils.ClickListener clickListener -> o
    65:117:void initialize() -> D
    120:122:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle) -> a
    125:126:void add(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> c
    129:134:void insert(int,com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> a
    137:144:void remove(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> a
    148:152:void clearChildren() -> y
    155:155:com.badlogic.gdx.utils.Array getNodes() -> E
    159:161:void invalidate() -> c_
    164:173:void computeSize() -> J
    176:198:void computeSize(com.badlogic.gdx.utils.Array,float) -> a
    201:203:void layout() -> d_
    206:218:float layout(com.badlogic.gdx.utils.Array,float,float) -> b
    222:230:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    234:261:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,com.badlogic.gdx.utils.Array,float) -> a
    265:267:com.badlogic.gdx.scenes.scene2d.ui.Tree$Node getNodeAt(float) -> h
    271:283:float getNodeAt(com.badlogic.gdx.utils.Array,float,float) -> c
    287:295:void selectNodes(com.badlogic.gdx.utils.Array,float,float) -> a
    298:298:com.badlogic.gdx.utils.Array getSelection() -> K
    302:304:void setSelection(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> d
    307:309:void setSelection(com.badlogic.gdx.utils.Array) -> c
    312:313:void addSelection(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> e
    316:317:void clearSelection() -> L
    320:320:com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle getStyle() -> M
    324:324:com.badlogic.gdx.utils.Array getRootNodes() -> N
    328:328:com.badlogic.gdx.scenes.scene2d.ui.Tree$Node getOverNode() -> R
    332:333:void setOverNode(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> b
    337:338:void setPadding(float) -> i
    342:343:void setYSpacing(float) -> j
    347:348:void setIconSpacing(float) -> k
    351:352:float getPrefWidth() -> F
    356:357:float getPrefHeight() -> G
    362:363:com.badlogic.gdx.scenes.scene2d.ui.Tree$Node findNode(java.lang.Object) -> a
    367:376:com.badlogic.gdx.scenes.scene2d.ui.Tree$Node findNode(com.badlogic.gdx.utils.Array,java.lang.Object) -> a
    380:381:void collapseAll() -> S
    384:389:void collapseAll(com.badlogic.gdx.utils.Array) -> a
    392:393:void expandAll() -> T
    396:398:void expandAll(com.badlogic.gdx.utils.Array) -> b
    402:402:com.badlogic.gdx.scenes.scene2d.utils.ClickListener getClickListener() -> U
    406:407:void setMultiSelect(boolean) -> e
com.badlogic.gdx.scenes.scene2d.ui.Tree$1 -> com.badlogic.gdx.g.a.b.bm:
    com.badlogic.gdx.scenes.scene2d.ui.Tree this$0 -> a
    67:105:void clicked$43069389(float,float) -> a
    108:109:boolean mouseMoved$43069385(com.badlogic.gdx.scenes.scene2d.InputEvent,float) -> a
    113:115:void exit(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> a
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node -> com.badlogic.gdx.g.a.b.bn:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> a
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node parent -> b
    com.badlogic.gdx.utils.Array children -> c
    boolean selectable -> d
    boolean expanded -> e
    com.badlogic.gdx.scenes.scene2d.utils.Drawable icon -> f
    float height -> g
    java.lang.Object object -> h
    425:438:void setExpanded(boolean) -> a
    442:446:void addToTree(com.badlogic.gdx.scenes.scene2d.ui.Tree) -> a
    450:454:void removeFromTree(com.badlogic.gdx.scenes.scene2d.ui.Tree) -> b
    457:458:void add(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> b
    461:463:void addAll(com.badlogic.gdx.utils.Array) -> a
    466:473:void insert(int,com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> a
    476:479:void remove() -> a
    482:488:void remove(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> a
    491:497:void removeAll() -> b
    501:503:com.badlogic.gdx.scenes.scene2d.ui.Tree getTree() -> c
    507:507:com.badlogic.gdx.scenes.scene2d.Actor getActor() -> d
    511:511:boolean isExpanded() -> e
    515:515:com.badlogic.gdx.utils.Array getChildren() -> f
    520:520:com.badlogic.gdx.scenes.scene2d.ui.Tree$Node getParent() -> g
    525:526:void setIcon(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> a
    529:529:java.lang.Object getObject() -> h
    534:535:void setObject(java.lang.Object) -> a
    538:538:com.badlogic.gdx.scenes.scene2d.utils.Drawable getIcon() -> i
    543:545:com.badlogic.gdx.scenes.scene2d.ui.Tree$Node findNode(java.lang.Object) -> b
    550:552:void collapseAll() -> j
    556:558:void expandAll() -> k
    562:567:void expandTo() -> l
    570:570:boolean isSelectable() -> m
    574:575:void setSelectable(boolean) -> b
com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle -> com.badlogic.gdx.g.a.b.bo:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable plus -> a
    com.badlogic.gdx.scenes.scene2d.utils.Drawable minus -> b
    com.badlogic.gdx.scenes.scene2d.utils.Drawable over -> c
    com.badlogic.gdx.scenes.scene2d.utils.Drawable selection -> d
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> e
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup -> com.badlogic.gdx.g.a.b.bp:
    float prefWidth -> a
    float prefHeight -> b
    boolean sizeInvalid -> c
    int alignment -> d
    boolean reverse -> e
    43:44:void setAlignment(int) -> a
    48:49:void setReverse(boolean) -> e
    52:54:void invalidate() -> c_
    57:72:void computeSize() -> D
    75:101:void layout() -> d_
    104:105:float getPrefWidth() -> F
    109:110:float getPrefHeight() -> G
com.badlogic.gdx.scenes.scene2d.ui.Widget -> com.badlogic.gdx.g.a.b.bq:
    boolean needsLayout -> a
    boolean fillParent -> b
    boolean layoutEnabled -> c
    41:41:float getMinWidth() -> H
    45:45:float getMinHeight() -> I
    49:49:float getPrefWidth() -> F
    53:53:float getPrefHeight() -> G
    57:57:float getMaxWidth() -> B
    61:61:float getMaxHeight() -> k_
    65:67:void setLayoutEnabled(boolean) -> a_
    70:93:void validate() -> e_
    97:97:boolean needsLayout() -> x
    101:102:void invalidate() -> c_
    105:109:void invalidateHierarchy() -> f_
    112:120:void pack() -> g_
    123:124:void setFillParent(boolean) -> d
    128:129:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    132:132:void layout() -> d_
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup -> com.badlogic.gdx.g.a.b.br:
    boolean needsLayout -> a
    boolean fillParent -> b
    boolean layoutEnabled -> c
    42:42:float getMinWidth() -> H
    46:46:float getMinHeight() -> I
    50:50:float getPrefWidth() -> F
    54:54:float getPrefHeight() -> G
    58:58:float getMaxWidth() -> B
    62:62:float getMaxHeight() -> k_
    66:69:void setLayoutEnabled(boolean) -> a_
    72:80:void setLayoutEnabled$4ec171ea(boolean) -> e
    83:106:void validate() -> e_
    110:110:boolean needsLayout() -> D
    114:115:void invalidate() -> c_
    118:121:void invalidateHierarchy() -> f_
    124:125:void childrenChanged() -> x
    128:136:void pack() -> g_
    139:140:void setFillParent(boolean) -> d
    143:143:void layout() -> d_
    148:150:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
com.badlogic.gdx.scenes.scene2d.ui.Window -> com.badlogic.gdx.g.a.b.bs:
    com.badlogic.gdx.math.Vector2 tmpPosition -> a
    com.badlogic.gdx.math.Vector2 tmpSize -> b
    com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle style -> c
    java.lang.String title -> d
    com.badlogic.gdx.graphics.g2d.BitmapFontCache titleCache -> e
    boolean isMovable -> i
    boolean isModal -> j
    com.badlogic.gdx.math.Vector2 dragOffset -> k
    boolean dragging -> l
    int titleAlignment -> f
    boolean keepWithinStage -> m
    114:121:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle) -> a
    126:126:com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle getStyle() -> D
    130:140:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    143:172:void drawBackground(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> c
    175:177:com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> a
    181:183:void setTitle(java.lang.String) -> a
    186:186:java.lang.String getTitle() -> E
    191:192:void setTitleAlignment(int) -> a
    195:196:void setMovable(boolean) -> e
    199:200:void setModal$1385ff() -> J
    203:204:void setKeepWithinStage(boolean) -> f
    207:207:boolean isDragging() -> R
    211:211:float getPrefWidth() -> F
com.badlogic.gdx.scenes.scene2d.ui.Window$1 -> com.badlogic.gdx.g.a.b.bt:
    com.badlogic.gdx.scenes.scene2d.ui.Window this$0 -> a
    73:74:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> a
com.badlogic.gdx.scenes.scene2d.ui.Window$2 -> com.badlogic.gdx.g.a.b.bu:
    com.badlogic.gdx.scenes.scene2d.ui.Window this$0 -> a
    79:83:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> a
    87:89:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> a
    92:92:boolean mouseMoved$43069385(com.badlogic.gdx.scenes.scene2d.InputEvent,float) -> a
    96:96:boolean scrolled$1dcb6a90(int) -> b
    100:100:boolean keyDown$3bf7ec50(int) -> c
    104:104:boolean keyUp$3bf7ec50() -> a
    108:108:boolean keyTyped$3bf802d6(char) -> a
com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle -> com.badlogic.gdx.g.a.b.bv:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> a
    com.badlogic.gdx.graphics.g2d.BitmapFont titleFont -> b
    com.badlogic.gdx.graphics.Color titleFontColor -> c
    com.badlogic.gdx.scenes.scene2d.utils.Drawable stageBackground -> d
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener -> com.badlogic.gdx.g.a.c.a:
    com.badlogic.gdx.math.Vector2 tmpCoords -> b
    com.badlogic.gdx.input.GestureDetector detector -> a
    com.badlogic.gdx.scenes.scene2d.InputEvent event -> c
    com.badlogic.gdx.scenes.scene2d.Actor actor -> d
    com.badlogic.gdx.scenes.scene2d.Actor touchDownTarget -> e
    89:113:boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> a
    117:117:void touchDown$645e8b17() -> f
    120:120:void touchUp$645e8b17() -> g
    123:123:void tap$645e8b17() -> a
    128:128:boolean longPress$12ecde08() -> b
    132:132:void fling$1dcb6a94$43069389(float,float) -> b
    136:136:void pan$645d22b7$43069389(float,float) -> a
    139:139:void zoom$43069389() -> c
    142:142:void pinch$31308d89() -> d
    145:145:com.badlogic.gdx.input.GestureDetector getGestureDetector() -> e
    149:149:com.badlogic.gdx.scenes.scene2d.Actor getTouchDownTarget() -> h
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$1 -> com.badlogic.gdx.g.a.c.b:
    com.badlogic.gdx.math.Vector2 initialPointer1 -> b
    com.badlogic.gdx.math.Vector2 initialPointer2 -> c
    com.badlogic.gdx.math.Vector2 pointer1 -> d
    com.badlogic.gdx.math.Vector2 pointer2 -> e
    com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener this$0 -> a
    50:52:boolean tap$4096cea7(float,float) -> a
    56:57:boolean longPress(float,float) -> b
    61:62:boolean fling$483d2f72(float,float) -> c
    66:68:boolean pan(float,float,float,float) -> a
    72:73:boolean zoom$2548a39() -> b
    78:83:boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> a
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$2 -> com.badlogic.gdx.g.a.c.c:
    int[] $SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type -> a
com.badlogic.gdx.scenes.scene2d.utils.Align -> com.badlogic.gdx.g.a.c.d:
    int center -> a
    int top -> b
    int bottom -> c
    int left -> d
    int right -> e
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable -> com.badlogic.gdx.g.a.c.e:
    float leftWidth -> a
    float rightWidth -> b
    float topHeight -> c
    float bottomHeight -> d
    float minWidth -> e
    float minHeight -> f
    40:40:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float) -> a
    43:43:float getLeftWidth() -> a
    47:48:void setLeftWidth(float) -> a
    51:51:float getRightWidth() -> b
    55:56:void setRightWidth(float) -> b
    59:59:float getTopHeight() -> c
    63:64:void setTopHeight(float) -> c
    67:67:float getBottomHeight() -> d
    71:72:void setBottomHeight(float) -> d
    75:75:float getMinWidth() -> e
    79:80:void setMinWidth(float) -> e
    83:83:float getMinHeight() -> f
    87:88:void setMinHeight(float) -> f
com.badlogic.gdx.scenes.scene2d.utils.ChangeListener -> com.badlogic.gdx.g.a.c.f:
    27:29:boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> a
    void changed$d8a80ea(com.badlogic.gdx.scenes.scene2d.Actor) -> a
com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent -> com.badlogic.gdx.g.a.c.g:
com.badlogic.gdx.scenes.scene2d.utils.ClickListener -> com.badlogic.gdx.g.a.c.h:
    float tapSquareSize -> a
    float touchDownX -> b
    float touchDownY -> c
    int pressedPointer -> d
    int button -> e
    boolean pressed -> f
    boolean over -> g
    boolean cancelled -> h
    long tapCountInterval -> i
    int tapCount -> j
    long lastTapTime -> k
    49:55:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> a
    59:66:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> a
    69:85:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> b
    88:89:void enter$6049651d(int) -> a
    92:93:void exit(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> a
    97:101:void cancel() -> f
    104:104:void clicked$43069389(float,float) -> a
    107:107:void dragStart$1dcb6a94() -> g
    110:110:void drag$1dcb6a94() -> h
    113:113:void dragStop$1dcb6a94() -> i
    117:119:boolean isOver(com.badlogic.gdx.scenes.scene2d.Actor,float,float) -> a
    123:124:boolean inTapSquare(float,float) -> b
    129:131:void invalidateTapSquare() -> j
    135:135:boolean isPressed() -> b
    140:140:boolean isOver() -> c
    144:145:void setTapSquareSize(float) -> a
    148:148:float getTapSquareSize() -> k
    153:154:void setTapCountInterval(float) -> b
    158:158:int getTapCount() -> d
    162:162:float getTouchDownX() -> l
    166:166:float getTouchDownY() -> e
    170:170:int getButton() -> m
    175:176:void setButton(int) -> d
com.badlogic.gdx.scenes.scene2d.utils.Cullable -> com.badlogic.gdx.g.a.c.i:
    void setCullingArea(com.badlogic.gdx.math.Rectangle) -> a
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop -> com.badlogic.gdx.g.a.c.j:
    com.badlogic.gdx.math.Vector2 tmpVector -> a
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source source -> b
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload payload -> c
    com.badlogic.gdx.scenes.scene2d.Actor dragActor -> d
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target target -> e
    boolean isValidTarget -> f
    com.badlogic.gdx.utils.Array targets -> g
    com.badlogic.gdx.utils.ObjectMap sourceListeners -> h
    float tapSquareSize -> n
    int button -> o
    float dragActorX -> i
    float dragActorY -> j
    long dragStartTime -> k
    int dragTime -> l
    int activePointer -> m
    48:140:void addSource(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source) -> a
    143:145:void removeSource(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source) -> b
    148:149:void addTarget(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target) -> a
    152:153:void removeTarget(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target) -> b
    157:158:void setTapSquareSize(float) -> a
    162:163:void setButton(int) -> a
    166:168:void setDragActorPosition(float,float) -> a
    171:171:boolean isDragging() -> a
    176:176:com.badlogic.gdx.scenes.scene2d.Actor getDragActor() -> b
    182:183:void setDragTime(int) -> b
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$1 -> com.badlogic.gdx.g.a.c.k:
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source val$source -> a
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop this$0 -> b
    50:60:void dragStart$1dcb6a94(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> a
    63:113:void drag(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> b
    116:134:void dragStop$1dcb6a94(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> b
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload -> com.badlogic.gdx.g.a.c.l:
    com.badlogic.gdx.scenes.scene2d.Actor dragActor -> a
    com.badlogic.gdx.scenes.scene2d.Actor validDragActor -> b
    com.badlogic.gdx.scenes.scene2d.Actor invalidDragActor -> c
    java.lang.Object object -> d
    242:243:void setDragActor(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    246:246:com.badlogic.gdx.scenes.scene2d.Actor getDragActor() -> a
    250:251:void setValidDragActor(com.badlogic.gdx.scenes.scene2d.Actor) -> b
    254:254:com.badlogic.gdx.scenes.scene2d.Actor getValidDragActor() -> b
    258:259:void setInvalidDragActor(com.badlogic.gdx.scenes.scene2d.Actor) -> c
    262:262:com.badlogic.gdx.scenes.scene2d.Actor getInvalidDragActor() -> c
    266:266:java.lang.Object getObject() -> d
    270:271:void setObject(java.lang.Object) -> a
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source -> com.badlogic.gdx.g.a.c.m:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> a
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload dragStart$4447ecbc() -> a
    200:200:void dragStop$75d53f5d() -> b
    203:203:com.badlogic.gdx.scenes.scene2d.Actor getActor() -> c
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target -> com.badlogic.gdx.g.a.c.n:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> a
    boolean drag$2b1368fd() -> a
    226:226:void reset$580fc584() -> c
    void drop$2b136901() -> b
    231:231:com.badlogic.gdx.scenes.scene2d.Actor getActor() -> d
com.badlogic.gdx.scenes.scene2d.utils.DragListener -> com.badlogic.gdx.g.a.c.o:
    float tapSquareSize -> a
    float touchDownX -> b
    float touchDownY -> c
    int pressedPointer -> d
    int button -> e
    boolean dragging -> f
    float deltaX -> g
    float deltaY -> h
    35:40:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> a
    44:58:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> a
    61:66:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> b
    69:69:void dragStart$1dcb6a94(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> a
    72:72:void drag(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> b
    75:75:void dragStop$1dcb6a94(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> b
    79:79:boolean isDragging() -> d
    83:84:void setTapSquareSize(float) -> a
    87:87:float getTapSquareSize() -> e
    91:91:float getTouchDownX() -> b
    95:95:float getTouchDownY() -> c
    100:100:float getDeltaX() -> f
    105:105:float getDeltaY() -> g
    109:109:int getButton() -> h
    114:115:void setButton(int) -> d
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener -> com.badlogic.gdx.g.a.c.p:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane scroll -> g
    com.badlogic.gdx.utils.Timer$Task scrollUp -> h
    com.badlogic.gdx.utils.Timer$Task scrollDown -> i
    com.badlogic.gdx.math.Interpolation interpolation -> a
    float minSpeed -> b
    float maxSpeed -> c
    float tickSecs -> d
    long startTime -> e
    long rampTime -> f
    50:54:void setup(float,float,float,float) -> a
    57:57:float getScrollPixels() -> d
    61:80:void drag(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> b
    83:85:void dragStop$1dcb6a94(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> b
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$1 -> com.badlogic.gdx.g.a.c.q:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane val$scroll -> a
    com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener this$0 -> b
    39:40:void run() -> run
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$2 -> com.badlogic.gdx.g.a.c.r:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane val$scroll -> a
    com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener this$0 -> b
    44:45:void run() -> run
com.badlogic.gdx.scenes.scene2d.utils.Drawable -> com.badlogic.gdx.g.a.c.s:
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float) -> a
    float getLeftWidth() -> a
    void setLeftWidth(float) -> a
    float getRightWidth() -> b
    void setRightWidth(float) -> b
    float getTopHeight() -> c
    void setTopHeight(float) -> c
    float getBottomHeight() -> d
    void setBottomHeight(float) -> d
    float getMinWidth() -> e
    void setMinWidth(float) -> e
    float getMinHeight() -> f
    void setMinHeight(float) -> f
com.badlogic.gdx.scenes.scene2d.utils.FocusListener -> com.badlogic.gdx.g.a.c.t:
    27:37:boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> a
    42:42:void keyboardFocusChanged$5cca10c6(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,boolean) -> a
    46:46:void scrollFocusChanged$5cca10c6(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,boolean) -> b
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$1 -> com.badlogic.gdx.g.a.c.u:
    int[] $SwitchMap$com$badlogic$gdx$scenes$scene2d$utils$FocusListener$FocusEvent$Type -> a
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent -> com.badlogic.gdx.g.a.c.v:
    boolean focused -> a
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type type -> b
    com.badlogic.gdx.scenes.scene2d.Actor relatedActor -> c
    56:58:void reset() -> b
    61:61:boolean isFocused() -> l
    65:66:void setFocused(boolean) -> b
    69:69:com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type getType() -> m
    73:74:void setType(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type) -> a
    79:79:com.badlogic.gdx.scenes.scene2d.Actor getRelatedActor() -> n
    84:85:void setRelatedActor(com.badlogic.gdx.scenes.scene2d.Actor) -> c
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type -> com.badlogic.gdx.g.a.c.w:
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type keyboard -> a
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type scroll -> b
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type[] $VALUES -> c
    88:88:com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type[] values() -> values
    88:88:com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.scenes.scene2d.utils.Layout -> com.badlogic.gdx.g.a.c.x:
    void layout() -> d_
    void invalidate() -> c_
    void invalidateHierarchy() -> f_
    void validate() -> e_
    void pack() -> g_
    void setFillParent(boolean) -> d
    void setLayoutEnabled(boolean) -> a_
    float getMinWidth() -> H
    float getMinHeight() -> I
    float getPrefWidth() -> F
    float getPrefHeight() -> G
    float getMaxWidth() -> B
    float getMaxHeight() -> k_
com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable -> com.badlogic.gdx.g.a.c.y:
    com.badlogic.gdx.graphics.g2d.NinePatch patch -> a
    48:49:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float) -> a
    52:59:void setPatch(com.badlogic.gdx.graphics.g2d.NinePatch) -> a
    62:62:com.badlogic.gdx.graphics.g2d.NinePatch getPatch() -> g
com.badlogic.gdx.scenes.scene2d.utils.ScissorStack -> com.badlogic.gdx.g.a.c.z:
    com.badlogic.gdx.utils.Array scissors -> c
    com.badlogic.gdx.math.Vector3 tmp -> a
    com.badlogic.gdx.math.Rectangle viewport -> b
    45:68:boolean pushScissors(com.badlogic.gdx.math.Rectangle) -> a
    74:81:com.badlogic.gdx.math.Rectangle popScissors() -> a
    85:97:void fix(com.badlogic.gdx.math.Rectangle) -> b
    109:120:void calculateScissors(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> a
    124:130:com.badlogic.gdx.math.Rectangle getViewport() -> b
    140:146:void toWindowCoordinates(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector2) -> a
com.badlogic.gdx.scenes.scene2d.utils.SpriteDrawable -> com.badlogic.gdx.g.a.c.aa:
    com.badlogic.gdx.graphics.g2d.Sprite sprite -> a
    42:47:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float) -> a
    50:53:void setSprite(com.badlogic.gdx.graphics.g2d.Sprite) -> a
    56:56:com.badlogic.gdx.graphics.g2d.Sprite getSprite() -> g
com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable -> com.badlogic.gdx.g.a.c.ab:
    com.badlogic.gdx.graphics.g2d.TextureRegion region -> a
    41:42:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float) -> a
    45:48:void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> a
    51:51:com.badlogic.gdx.graphics.g2d.TextureRegion getRegion() -> g
com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable -> com.badlogic.gdx.g.a.c.ac:
    38:79:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float) -> a
com.badlogic.gdx.utils.Array -> com.badlogic.gdx.utils.a:
    java.lang.Object[] items -> a
    int size -> b
    boolean ordered -> c
    com.badlogic.gdx.utils.Array$ArrayIterator iterator -> d
    com.badlogic.gdx.utils.Predicate$PredicateIterable predicateIterable -> e
    97:100:void add(java.lang.Object) -> a
    103:104:void addAll(com.badlogic.gdx.utils.Array) -> a
    107:110:void addAll(com.badlogic.gdx.utils.Array,int,int) -> a
    113:114:void addAll(java.lang.Object[]) -> a
    117:122:void addAll(java.lang.Object[],int,int) -> a
    125:126:java.lang.Object get(int) -> a
    130:132:void set(int,java.lang.Object) -> a
    135:143:void insert(int,java.lang.Object) -> b
    146:152:void swap(int,int) -> a
    158:164:boolean contains$4cfd3ce7(java.lang.Object) -> b
    174:182:int indexOf(java.lang.Object,boolean) -> a
    190:198:int lastIndexOf(java.lang.Object,boolean) -> c
    205:221:boolean removeValue(java.lang.Object,boolean) -> b
    226:235:java.lang.Object removeIndex(int) -> b
    242:257:boolean removeAll$48c4a18d(com.badlogic.gdx.utils.Array) -> b
    273:276:java.lang.Object pop() -> a
    281:281:java.lang.Object peek() -> b
    286:287:java.lang.Object first() -> c
    291:295:void clear() -> d
    300:301:void shrink() -> e
    307:309:java.lang.Object[] ensureCapacity(int) -> c
    314:318:java.lang.Object[] resize(int) -> d
    324:325:void sort() -> f
    329:330:void sort(java.util.Comparator) -> a
    333:339:void reverse() -> g
    342:348:void shuffle() -> h
    353:357:java.util.Iterator iterator() -> iterator
    364:368:java.lang.Iterable select(com.badlogic.gdx.utils.Predicate) -> a
    374:378:void truncate(int) -> e
    382:383:java.lang.Object random() -> i
    387:387:java.lang.Object[] toArray() -> j
    391:393:java.lang.Object[] toArray(java.lang.Class) -> a
    397:409:boolean equals(java.lang.Object) -> equals
    413:423:java.lang.String toString() -> toString
    427:435:java.lang.String toString(java.lang.String) -> a
com.badlogic.gdx.utils.Array$ArrayIterable -> com.badlogic.gdx.utils.b:
    com.badlogic.gdx.utils.Array$ArrayIterator iterator -> a
    474:475:java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.Array$ArrayIterator -> com.badlogic.gdx.utils.c:
    com.badlogic.gdx.utils.Array array -> b
    int index -> a
    447:447:boolean hasNext() -> hasNext
    451:452:java.lang.Object next() -> next
    456:458:void remove() -> remove
    461:462:void reset() -> a
com.badlogic.gdx.utils.ArrayMap -> com.badlogic.gdx.utils.d:
    java.lang.Object[] keys -> a
    java.lang.Object[] values -> b
    int size -> c
    boolean ordered -> d
    com.badlogic.gdx.utils.ArrayMap$Entries entries -> e
    com.badlogic.gdx.utils.ArrayMap$Values valuesIter -> f
    com.badlogic.gdx.utils.ArrayMap$Keys keysIter -> g
    86:91:void put(java.lang.Object,java.lang.Object) -> a
    94:102:void put(java.lang.Object,java.lang.Object,int) -> a
    105:106:void addAll(com.badlogic.gdx.utils.ArrayMap) -> a
    109:116:void addAll$c67354f(com.badlogic.gdx.utils.ArrayMap,int) -> a
    121:130:java.lang.Object get(java.lang.Object) -> a
    137:146:java.lang.Object getKey$7e8b2351(boolean) -> a
    150:151:java.lang.Object getKeyAt(int) -> b
    155:156:java.lang.Object getValueAt(int) -> c
    160:161:java.lang.Object firstKey() -> a
    165:166:java.lang.Object firstValue() -> b
    170:172:void setKey(int,java.lang.Object) -> a
    175:177:void setValue(int,java.lang.Object) -> b
    180:191:void insert(int,java.lang.Object,java.lang.Object) -> a
    194:203:boolean containsKey(java.lang.Object) -> b
    208:217:boolean containsValue(java.lang.Object,boolean) -> a
    221:229:int indexOfKey(java.lang.Object) -> c
    233:241:int indexOfValue(java.lang.Object,boolean) -> b
    245:263:java.lang.Object removeKey(java.lang.Object) -> d
    267:283:boolean removeValue(java.lang.Object,boolean) -> c
    288:300:void removeIndex(int) -> a
    304:304:java.lang.Object peekKey() -> c
    309:309:java.lang.Object peekValue() -> d
    313:320:void clear() -> e
    325:326:void shrink() -> f
    331:333:void ensureCapacity(int) -> d
    336:343:void resize(int) -> e
    346:356:void reverse() -> g
    359:369:void shuffle() -> h
    374:380:void truncate(int) -> f
    383:398:java.lang.String toString() -> toString
    404:408:com.badlogic.gdx.utils.ArrayMap$Entries entries() -> i
    414:418:com.badlogic.gdx.utils.ArrayMap$Values values() -> j
    424:428:com.badlogic.gdx.utils.ArrayMap$Keys keys() -> k
com.badlogic.gdx.utils.ArrayMap$Entries -> com.badlogic.gdx.utils.e:
    com.badlogic.gdx.utils.ArrayMap map -> c
    com.badlogic.gdx.utils.ObjectMap$Entry entry -> a
    int index -> b
    441:441:boolean hasNext() -> hasNext
    445:445:java.util.Iterator iterator() -> iterator
    449:452:com.badlogic.gdx.utils.ObjectMap$Entry next() -> b
    456:458:void remove() -> remove
    461:462:void reset() -> a
    431:431:java.lang.Object next() -> next
com.badlogic.gdx.utils.ArrayMap$Keys -> com.badlogic.gdx.utils.f:
    com.badlogic.gdx.utils.ArrayMap map -> b
    int index -> a
    505:505:boolean hasNext() -> hasNext
    509:509:java.util.Iterator iterator() -> iterator
    513:514:java.lang.Object next() -> next
    518:520:void remove() -> remove
    523:524:void reset() -> a
com.badlogic.gdx.utils.ArrayMap$Values -> com.badlogic.gdx.utils.g:
    com.badlogic.gdx.utils.ArrayMap map -> b
    int index -> a
    474:474:boolean hasNext() -> hasNext
    478:478:java.util.Iterator iterator() -> iterator
    482:483:java.lang.Object next() -> next
    487:489:void remove() -> remove
    492:493:void reset() -> a
com.badlogic.gdx.utils.AtomicQueue -> com.badlogic.gdx.utils.h:
    java.util.concurrent.atomic.AtomicInteger writeIndex -> a
    java.util.concurrent.atomic.AtomicInteger readIndex -> b
    java.util.concurrent.atomic.AtomicReferenceArray queue -> c
    41:41:int next(int) -> a
    45:51:boolean put(java.lang.Object) -> a
    55:60:java.lang.Object poll() -> a
com.badlogic.gdx.utils.Base64Coder -> com.badlogic.gdx.utils.i:
    java.lang.String systemLineSeparator -> a
    char[] map1 -> b
    byte[] map2 -> c
    63:63:java.lang.String encodeString(java.lang.String) -> b
    72:72:java.lang.String encodeLines(byte[]) -> a
    84:96:java.lang.String encodeLines$5263488f(byte[],int,java.lang.String) -> a
    104:104:char[] encode(byte[]) -> b
    113:113:char[] encode(byte[],int) -> a
    123:144:char[] encode(byte[],int,int) -> a
    153:153:java.lang.String decodeString(java.lang.String) -> c
    163:169:byte[] decodeLines(java.lang.String) -> d
    178:178:byte[] decode(java.lang.String) -> a
    187:187:byte[] decode(char[]) -> a
    198:226:byte[] decode$7f814ca0(char[],int) -> a
com.badlogic.gdx.utils.BinaryHeap -> com.badlogic.gdx.utils.j:
    int size -> a
    com.badlogic.gdx.utils.BinaryHeap$Node[] nodes -> b
    boolean isMaxHeap -> c
    37:46:com.badlogic.gdx.utils.BinaryHeap$Node add(com.badlogic.gdx.utils.BinaryHeap$Node) -> a
    50:51:com.badlogic.gdx.utils.BinaryHeap$Node peek() -> a
    55:60:com.badlogic.gdx.utils.BinaryHeap$Node pop() -> b
    64:70:void setValue(com.badlogic.gdx.utils.BinaryHeap$Node,float) -> a
    73:88:void up(int) -> a
    91:133:void down(int) -> b
    136:146:java.lang.String toString() -> toString
com.badlogic.gdx.utils.BinaryHeap$Node -> com.badlogic.gdx.utils.k:
    float value -> a
    int index -> b
    159:159:float getValue() -> a
com.badlogic.gdx.utils.Bits -> com.badlogic.gdx.utils.l:
    long[] bits -> a
    17:19:boolean get(int) -> a
    27:30:void set(int) -> b
    36:39:void flip(int) -> c
    42:47:void checkCapacity(int) -> d
    54:57:void clear(int) -> e
    63:67:void clear() -> a
    73:73:int numBits() -> b
com.badlogic.gdx.utils.BooleanArray -> com.badlogic.gdx.utils.m:
    boolean[] items -> a
    int size -> b
    boolean ordered -> c
    78:81:void add(boolean) -> a
    84:85:void addAll(com.badlogic.gdx.utils.BooleanArray) -> a
    88:91:void addAll$6b507241(com.badlogic.gdx.utils.BooleanArray,int) -> a
    94:95:void addAll(boolean[]) -> a
    98:103:void addAll$1ba7338c(boolean[],int) -> a
    106:107:boolean get(int) -> a
    111:113:void set(int,boolean) -> a
    116:124:void insert(int,boolean) -> b
    127:133:void swap(int,int) -> a
    137:145:boolean removeIndex(int) -> b
    151:164:boolean removeAll(com.badlogic.gdx.utils.BooleanArray) -> b
    169:169:boolean pop() -> a
    174:174:boolean peek() -> b
    179:180:boolean first() -> c
    184:185:void clear() -> d
    190:191:void shrink() -> e
    197:199:boolean[] ensureCapacity(int) -> c
    203:207:boolean[] resize(int) -> d
    211:217:void reverse() -> f
    220:226:void shuffle() -> g
    231:232:void truncate(int) -> e
    236:237:boolean random() -> h
    241:243:boolean[] toArray() -> i
    247:254:boolean equals(java.lang.Object) -> equals
    258:268:java.lang.String toString() -> toString
    272:280:java.lang.String toString(java.lang.String) -> a
com.badlogic.gdx.utils.BufferUtils -> com.badlogic.gdx.utils.BufferUtils:
    com.badlogic.gdx.utils.Array unsafeBuffers -> a
    int allocatedUnsafe -> b
    47:53:void copy(float[],java.nio.Buffer,int,int) -> a
    65:67:void copy(byte[],int,java.nio.Buffer,int) -> a
    79:81:void copy(short[],int,java.nio.Buffer,int) -> a
    93:95:void copy(char[],int,java.nio.Buffer,int) -> a
    107:109:void copy(int[],int,java.nio.Buffer,int) -> a
    121:123:void copy(long[],int,java.nio.Buffer,int) -> a
    135:137:void copy(float[],int,java.nio.Buffer,int) -> a
    149:151:void copy(double[],int,java.nio.Buffer,int) -> a
    163:166:void copy(java.nio.Buffer,java.nio.Buffer,int) -> a
    169:184:int positionInBytes(java.nio.Buffer) -> a
    188:203:int bytesToElements(java.nio.Buffer,int) -> a
    207:222:int elementsToBytes(java.nio.Buffer,int) -> b
    226:228:java.nio.FloatBuffer newFloatBuffer(int) -> a
    232:234:java.nio.DoubleBuffer newDoubleBuffer(int) -> d
    238:240:java.nio.ByteBuffer newByteBuffer(int) -> b
    244:246:java.nio.ShortBuffer newShortBuffer(int) -> e
    250:252:java.nio.CharBuffer newCharBuffer(int) -> f
    256:258:java.nio.IntBuffer newIntBuffer$ba72910() -> a
    262:264:java.nio.LongBuffer newLongBuffer(int) -> g
    275:282:void disposeUnsafeByteBuffer(java.nio.ByteBuffer) -> a
    288:294:java.nio.ByteBuffer newUnsafeByteBuffer(int) -> c
    303:303:long getUnsafeBufferAddress(java.nio.Buffer) -> b
    314:318:java.nio.ByteBuffer newUnsafeByteBuffer(java.nio.ByteBuffer) -> b
    325:325:int getAllocatedBytesUnsafe() -> b
    void freeMemory(java.nio.ByteBuffer) -> freeMemory
    java.nio.ByteBuffer newDisposableByteBuffer(int) -> newDisposableByteBuffer
    long getBufferAddress(java.nio.Buffer) -> getBufferAddress
    void clear(java.nio.ByteBuffer,int) -> clear
    void copyJni(float[],java.nio.Buffer,int,int) -> copyJni
    void copyJni(byte[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(char[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(short[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(int[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(long[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(float[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(double[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(java.nio.Buffer,int,java.nio.Buffer,int,int) -> copyJni
com.badlogic.gdx.utils.CharArray -> com.badlogic.gdx.utils.n:
    char[] items -> a
    int size -> b
    boolean ordered -> c
    76:79:void add(char) -> a
    82:83:void addAll(com.badlogic.gdx.utils.CharArray) -> a
    86:89:void addAll$792de6e5(com.badlogic.gdx.utils.CharArray,int) -> a
    92:93:void addAll(char[]) -> a
    96:101:void addAll$1ceb5023(char[],int) -> a
    104:105:char get(int) -> a
    109:111:void set(int,char) -> a
    114:122:void insert(int,char) -> b
    125:131:void swap(int,int) -> a
    134:138:boolean contains(char) -> b
    142:145:int indexOf(char) -> c
    149:152:int lastIndexOf(char) -> d
    156:163:boolean removeValue(char) -> e
    168:176:char removeIndex(int) -> b
    182:195:boolean removeAll(com.badlogic.gdx.utils.CharArray) -> b
    200:200:char pop() -> a
    205:205:char peek() -> b
    210:211:char first() -> c
    215:216:void clear() -> d
    221:222:void shrink() -> e
    228:230:char[] ensureCapacity(int) -> c
    234:238:char[] resize(int) -> d
    242:243:void sort() -> f
    246:252:void reverse() -> g
    255:261:void shuffle() -> h
    266:267:void truncate(int) -> e
    271:272:char random() -> i
    276:278:char[] toArray() -> j
    282:289:boolean equals(java.lang.Object) -> equals
    293:303:java.lang.String toString() -> toString
    307:315:java.lang.String toString(java.lang.String) -> a
com.badlogic.gdx.utils.Clipboard -> com.badlogic.gdx.utils.o:
    java.lang.String getContents() -> getContents
    void setContents(java.lang.String) -> setContents
com.badlogic.gdx.utils.ComparableTimSort -> com.badlogic.gdx.utils.p:
    int MIN_MERGE -> a
    java.lang.Object[] a -> b
    int MIN_GALLOP -> c
    int minGallop -> d
    int INITIAL_TMP_STORAGE_LENGTH -> e
    java.lang.Object[] tmp -> f
    int stackSize -> g
    int[] runBase -> h
    int[] runLen -> i
    boolean DEBUG -> j
    76:117:void doSort(java.lang.Object[],int,int) -> a
    148:149:void sort(java.lang.Object[]) -> a
    152:191:void sort(java.lang.Object[],int,int) -> b
    206:245:void binarySort(java.lang.Object[],int,int,int) -> a
    268:281:int countRunAndMakeAscending(java.lang.Object[],int,int) -> c
    290:296:void reverseRange(java.lang.Object[],int,int) -> d
    313:318:int minRunLength(int) -> a
    326:329:void pushRun(int,int) -> a
    338:349:void mergeCollapse() -> a
    353:358:void mergeForceCollapse() -> b
    370:411:void mergeAt(int) -> b
    428:476:int gallopLeft(java.lang.Comparable,java.lang.Object[],int,int,int) -> a
    492:540:int gallopRight(java.lang.Comparable,java.lang.Object[],int,int,int) -> b
    559:649:void mergeLo(int,int,int,int) -> a
    663:756:void mergeHi(int,int,int,int) -> b
    764:782:java.lang.Object[] ensureCapacity(int) -> c
    793:796:void rangeCheck$4868d30e(int,int) -> b
com.badlogic.gdx.utils.DataInput -> com.badlogic.gdx.utils.q:
    char[] chars -> a
    33:51:int readInt$1385f2() -> a
    57:77:java.lang.String readString() -> b
    81:105:void readUtf8_slow(int,int,int) -> a
com.badlogic.gdx.utils.DataOutput -> com.badlogic.gdx.utils.r:
    33:55:int writeInt$2563259(int) -> a
    61:79:void writeString(java.lang.String) -> a
    82:95:void writeString_slow(java.lang.String,int,int) -> a
com.badlogic.gdx.utils.DelayedRemovalArray -> com.badlogic.gdx.utils.s:
    boolean iterating -> d
    com.badlogic.gdx.utils.IntArray remove -> e
    65:66:void begin() -> i
    69:72:void end() -> j
    75:84:void remove(int) -> f
    87:93:boolean removeValue(java.lang.Object,boolean) -> b
    97:101:java.lang.Object removeIndex(int) -> b
    105:107:void set(int,java.lang.Object) -> a
    110:112:void insert(int,java.lang.Object) -> b
    115:117:void swap(int,int) -> a
    120:121:java.lang.Object pop() -> a
    125:127:void clear() -> d
    130:132:void sort() -> f
    135:137:void sort(java.util.Comparator) -> a
    140:142:void reverse() -> g
    145:147:void shuffle() -> h
    150:152:void truncate(int) -> e
com.badlogic.gdx.utils.Disposable -> com.badlogic.gdx.utils.t:
    void dispose() -> dispose
com.badlogic.gdx.utils.FloatArray -> com.badlogic.gdx.utils.u:
    float[] items -> a
    int size -> b
    boolean ordered -> c
    76:79:void add(float) -> a
    82:83:void addAll(com.badlogic.gdx.utils.FloatArray) -> a
    86:89:void addAll$4e402e0b(com.badlogic.gdx.utils.FloatArray,int) -> a
    92:93:void addAll(float[]) -> a
    96:101:void addAll$1cc109a0(float[],int) -> a
    104:105:float get(int) -> a
    109:111:void set(int,float) -> a
    114:122:void insert(int,float) -> b
    125:131:void swap(int,int) -> a
    134:138:boolean contains(float) -> b
    142:145:int indexOf(float) -> c
    149:152:int lastIndexOf(char) -> a
    156:163:boolean removeValue(float) -> d
    168:176:float removeIndex(int) -> b
    182:195:boolean removeAll(com.badlogic.gdx.utils.FloatArray) -> b
    200:200:float pop() -> a
    205:205:float peek() -> b
    210:211:float first() -> c
    215:216:void clear() -> d
    221:222:void shrink() -> e
    228:230:float[] ensureCapacity(int) -> c
    234:238:float[] resize(int) -> d
    242:243:void sort() -> f
    246:252:void reverse() -> g
    255:261:void shuffle() -> h
    266:267:void truncate(int) -> e
    271:272:float random() -> i
    276:278:float[] toArray() -> j
    282:289:boolean equals(java.lang.Object) -> equals
    293:303:java.lang.String toString() -> toString
    307:315:java.lang.String toString(java.lang.String) -> a
com.badlogic.gdx.utils.GdxBuild -> com.badlogic.gdx.utils.v:
    30:55:void main$3231c38a() -> a
com.badlogic.gdx.utils.GdxNativesLoader -> com.badlogic.gdx.utils.w:
    boolean disableNativesLoading -> a
    boolean nativesLoaded -> b
    26:35:void load() -> a
com.badlogic.gdx.utils.GdxRuntimeException -> com.badlogic.gdx.utils.x:
    long serialVersionUID -> a
com.badlogic.gdx.utils.GwtModuleGenerator -> com.badlogic.gdx.utils.y:
    34:48:void gatherJavaFiles(com.badlogic.gdx.files.FileHandle,java.util.Set,java.util.Map,boolean) -> a
    51:124:void main$3231c38a() -> a
com.badlogic.gdx.utils.IdentityMap -> com.badlogic.gdx.utils.z:
    int PRIME1 -> f
    int PRIME2 -> g
    int PRIME3 -> h
    int size -> a
    java.lang.Object[] keyTable -> b
    java.lang.Object[] valueTable -> c
    int capacity -> d
    int stashSize -> e
    float loadFactor -> i
    int hashShift -> j
    int mask -> k
    int threshold -> l
    int stashCapacity -> m
    int pushIterations -> n
    com.badlogic.gdx.utils.IdentityMap$Entries entries -> o
    com.badlogic.gdx.utils.IdentityMap$Values values -> p
    com.badlogic.gdx.utils.IdentityMap$Keys keys -> q
    85:146:java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    152:181:void putResize(java.lang.Object,java.lang.Object) -> b
    184:251:void push(java.lang.Object,java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> a
    254:266:void putStash(java.lang.Object,java.lang.Object) -> c
    269:278:java.lang.Object get(java.lang.Object) -> a
    282:291:java.lang.Object get(java.lang.Object,java.lang.Object) -> d
    295:298:java.lang.Object getStash(java.lang.Object,java.lang.Object) -> e
    302:330:java.lang.Object remove(java.lang.Object) -> b
    334:343:java.lang.Object removeStash(java.lang.Object) -> c
    348:356:void removeStashIndex(int) -> a
    359:367:void clear() -> a
    374:386:boolean containsValue(java.lang.Object,boolean) -> a
    390:399:boolean containsKey(java.lang.Object) -> d
    403:406:boolean containsKeyStash(java.lang.Object) -> e
    414:426:java.lang.Object findKey(java.lang.Object,boolean) -> b
    432:434:void ensureCapacity(int) -> b
    437:458:void resize(int) -> c
    461:462:int hash2(int) -> d
    466:467:int hash3(int) -> e
    471:494:java.lang.String toString() -> toString
    500:504:com.badlogic.gdx.utils.IdentityMap$Entries entries() -> b
    510:514:com.badlogic.gdx.utils.IdentityMap$Values values() -> c
    520:524:com.badlogic.gdx.utils.IdentityMap$Keys keys() -> d
com.badlogic.gdx.utils.IdentityMap$Entries -> com.badlogic.gdx.utils.aa:
    com.badlogic.gdx.utils.IdentityMap$Entry entry -> e
    586:592:com.badlogic.gdx.utils.IdentityMap$Entry next() -> c
    596:596:boolean hasNext() -> hasNext
    600:600:java.util.Iterator iterator() -> iterator
    577:577:void remove() -> remove
    577:577:void reset() -> a
    577:577:java.lang.Object next() -> next
com.badlogic.gdx.utils.IdentityMap$Entry -> com.badlogic.gdx.utils.ab:
    java.lang.Object key -> a
    java.lang.Object value -> b
    532:532:java.lang.String toString() -> toString
com.badlogic.gdx.utils.IdentityMap$Keys -> com.badlogic.gdx.utils.ac:
    645:645:boolean hasNext() -> hasNext
    649:652:java.lang.Object next() -> next
    656:656:java.util.Iterator iterator() -> iterator
    661:664:com.badlogic.gdx.utils.Array toArray() -> c
    639:639:void remove() -> remove
    639:639:void reset() -> a
com.badlogic.gdx.utils.IdentityMap$MapIterator -> com.badlogic.gdx.utils.ad:
    boolean hasNext -> a
    com.badlogic.gdx.utils.IdentityMap map -> b
    int nextIndex -> c
    int currentIndex -> d
    548:551:void reset() -> a
    554:559:void findNextIndex() -> b
    565:574:void remove() -> remove
com.badlogic.gdx.utils.IdentityMap$Values -> com.badlogic.gdx.utils.ae:
    610:610:boolean hasNext() -> hasNext
    614:617:java.lang.Object next() -> next
    621:621:java.util.Iterator iterator() -> iterator
    626:629:com.badlogic.gdx.utils.Array toArray() -> c
    634:636:void toArray(com.badlogic.gdx.utils.Array) -> a
    604:604:void remove() -> remove
    604:604:void reset() -> a
com.badlogic.gdx.utils.IntArray -> com.badlogic.gdx.utils.af:
    int[] items -> a
    int size -> b
    boolean ordered -> c
    76:79:void add(int) -> a
    82:83:void addAll(com.badlogic.gdx.utils.IntArray) -> a
    86:89:void addAll$75c2648(com.badlogic.gdx.utils.IntArray,int) -> a
    92:93:void addAll(int[]) -> a
    96:101:void addAll$1c96c31d(int[],int) -> a
    104:105:int get(int) -> b
    109:111:void set(int,int) -> b
    114:122:void insert(int,int) -> a
    125:131:void swap(int,int) -> c
    134:138:boolean contains(int) -> c
    142:145:int indexOf(int) -> d
    149:152:int lastIndexOf(int) -> e
    156:163:boolean removeValue(int) -> f
    168:176:int removeIndex(int) -> g
    182:195:boolean removeAll(com.badlogic.gdx.utils.IntArray) -> b
    200:200:int pop() -> a
    205:205:int peek() -> c
    210:211:int first() -> d
    215:216:void clear() -> e
    221:222:void shrink() -> b
    228:230:int[] ensureCapacity(int) -> h
    234:238:int[] resize(int) -> i
    242:243:void sort() -> f
    246:252:void reverse() -> g
    255:261:void shuffle() -> h
    266:267:void truncate(int) -> j
    271:272:int random() -> i
    276:278:int[] toArray() -> j
    282:289:boolean equals(java.lang.Object) -> equals
    293:303:java.lang.String toString() -> toString
    307:315:java.lang.String toString(java.lang.String) -> a
com.badlogic.gdx.utils.IntFloatMap -> com.badlogic.gdx.utils.ag:
    int PRIME1 -> h
    int PRIME2 -> i
    int PRIME3 -> j
    int EMPTY -> k
    int size -> a
    int[] keyTable -> b
    float[] valueTable -> c
    int capacity -> d
    int stashSize -> e
    float zeroValue -> f
    boolean hasZeroValue -> g
    float loadFactor -> l
    int hashShift -> m
    int mask -> n
    int threshold -> o
    int stashCapacity -> p
    int pushIterations -> q
    com.badlogic.gdx.utils.IntFloatMap$Entries entries -> r
    com.badlogic.gdx.utils.IntFloatMap$Values values -> s
    com.badlogic.gdx.utils.IntFloatMap$Keys keys -> t
    88:152:void put(int,float) -> a
    155:157:void putAll(com.badlogic.gdx.utils.IntFloatMap) -> a
    161:196:void putResize(int,float) -> b
    199:265:void push(int,float,int,int,int,int,int,int) -> a
    268:280:void putStash(int,float) -> c
    284:293:float get(int,float) -> d
    297:300:float getStash(int,float) -> e
    306:316:float getAndIncrement(int,float,float) -> a
    320:328:float getAndIncrementStash(int,float,float) -> b
    332:363:float remove(int,float) -> f
    367:376:float removeStash(int,float) -> g
    381:387:void removeStashIndex(int) -> a
    390:395:void clear() -> a
    400:404:boolean containsValue(float) -> a
    410:414:boolean containsValue(float,float) -> a
    418:427:boolean containsKey(int) -> b
    431:434:boolean containsKeyStash(int) -> c
    440:444:int findKey(float,int) -> a
    450:452:void ensureCapacity(int) -> d
    455:476:void resize(int) -> e
    479:480:int hash2(int) -> f
    484:485:int hash3(int) -> g
    489:517:java.lang.String toString() -> toString
    523:527:com.badlogic.gdx.utils.IntFloatMap$Entries entries() -> b
    533:537:com.badlogic.gdx.utils.IntFloatMap$Values values() -> c
    543:547:com.badlogic.gdx.utils.IntFloatMap$Keys keys() -> d
com.badlogic.gdx.utils.IntFloatMap$Entries -> com.badlogic.gdx.utils.ah:
    com.badlogic.gdx.utils.IntFloatMap$Entry entry -> g
    617:628:com.badlogic.gdx.utils.IntFloatMap$Entry next() -> c
    632:632:boolean hasNext() -> hasNext
    636:636:java.util.Iterator iterator() -> iterator
    608:608:void remove() -> remove
    608:608:void reset() -> a
    608:608:java.lang.Object next() -> next
com.badlogic.gdx.utils.IntFloatMap$Entry -> com.badlogic.gdx.utils.ai:
    int key -> a
    float value -> b
    555:555:java.lang.String toString() -> toString
com.badlogic.gdx.utils.IntFloatMap$Keys -> com.badlogic.gdx.utils.aj:
    675:675:boolean hasNext() -> c
    679:682:int next() -> d
    687:690:com.badlogic.gdx.utils.IntArray toArray() -> e
    669:669:void remove() -> remove
    669:669:void reset() -> a
com.badlogic.gdx.utils.IntFloatMap$MapIterator -> com.badlogic.gdx.utils.ak:
    int INDEX_ILLEGAL -> a
    int INDEX_ZERO -> b
    boolean hasNext -> c
    com.badlogic.gdx.utils.IntFloatMap map -> d
    int nextIndex -> e
    int currentIndex -> f
    574:580:void reset() -> a
    583:588:void findNextIndex() -> b
    594:605:void remove() -> remove
com.badlogic.gdx.utils.IntFloatMap$Values -> com.badlogic.gdx.utils.al:
    646:646:boolean hasNext() -> c
    651:657:float next() -> d
    662:665:com.badlogic.gdx.utils.FloatArray toArray() -> e
    640:640:void remove() -> remove
    640:640:void reset() -> a
com.badlogic.gdx.utils.IntIntMap -> com.badlogic.gdx.utils.am:
    int PRIME1 -> h
    int PRIME2 -> i
    int PRIME3 -> j
    int EMPTY -> k
    int size -> a
    int[] keyTable -> b
    int[] valueTable -> c
    int capacity -> d
    int stashSize -> e
    int zeroValue -> f
    boolean hasZeroValue -> g
    float loadFactor -> l
    int hashShift -> m
    int mask -> n
    int threshold -> o
    int stashCapacity -> p
    int pushIterations -> q
    com.badlogic.gdx.utils.IntIntMap$Entries entries -> r
    com.badlogic.gdx.utils.IntIntMap$Values values -> s
    com.badlogic.gdx.utils.IntIntMap$Keys keys -> t
    89:153:void put(int,int) -> a
    156:158:void putAll(com.badlogic.gdx.utils.IntIntMap) -> a
    162:197:void putResize(int,int) -> b
    200:266:void push(int,int,int,int,int,int,int,int) -> a
    269:281:void putStash(int,int) -> c
    285:294:int get(int,int) -> d
    298:301:int getStash(int,int) -> e
    307:317:int getAndIncrement(int,int,int) -> a
    321:329:int getAndIncrementStash(int,int,int) -> b
    333:364:int remove(int,int) -> f
    368:377:int removeStash(int,int) -> g
    382:388:void removeStashIndex(int) -> a
    391:396:void clear() -> a
    401:405:boolean containsValue(int) -> b
    409:418:boolean containsKey(int) -> c
    422:425:boolean containsKeyStash(int) -> d
    431:435:int findKey(int,int) -> h
    441:443:void ensureCapacity(int) -> e
    446:467:void resize(int) -> f
    470:471:int hash2(int) -> g
    475:476:int hash3(int) -> h
    480:508:java.lang.String toString() -> toString
    514:518:com.badlogic.gdx.utils.IntIntMap$Entries entries() -> b
    524:528:com.badlogic.gdx.utils.IntIntMap$Values values() -> c
    534:538:com.badlogic.gdx.utils.IntIntMap$Keys keys() -> d
com.badlogic.gdx.utils.IntIntMap$Entries -> com.badlogic.gdx.utils.an:
    com.badlogic.gdx.utils.IntIntMap$Entry entry -> g
    608:619:com.badlogic.gdx.utils.IntIntMap$Entry next() -> c
    623:623:boolean hasNext() -> hasNext
    627:627:java.util.Iterator iterator() -> iterator
    599:599:void remove() -> remove
    599:599:void reset() -> a
    599:599:java.lang.Object next() -> next
com.badlogic.gdx.utils.IntIntMap$Entry -> com.badlogic.gdx.utils.ao:
    int key -> a
    int value -> b
    546:546:java.lang.String toString() -> toString
com.badlogic.gdx.utils.IntIntMap$Keys -> com.badlogic.gdx.utils.ap:
    666:666:boolean hasNext() -> c
    670:673:int next() -> d
    678:681:com.badlogic.gdx.utils.IntArray toArray() -> e
    660:660:void remove() -> remove
    660:660:void reset() -> a
com.badlogic.gdx.utils.IntIntMap$MapIterator -> com.badlogic.gdx.utils.aq:
    int INDEX_ILLEGAL -> a
    int INDEX_ZERO -> b
    boolean hasNext -> c
    com.badlogic.gdx.utils.IntIntMap map -> d
    int nextIndex -> e
    int currentIndex -> f
    565:571:void reset() -> a
    574:579:void findNextIndex() -> b
    585:596:void remove() -> remove
com.badlogic.gdx.utils.IntIntMap$Values -> com.badlogic.gdx.utils.ar:
    637:637:boolean hasNext() -> c
    642:648:int next() -> d
    653:656:com.badlogic.gdx.utils.IntArray toArray() -> e
    631:631:void remove() -> remove
    631:631:void reset() -> a
com.badlogic.gdx.utils.IntMap -> com.badlogic.gdx.utils.as:
    int PRIME1 -> h
    int PRIME2 -> i
    int PRIME3 -> j
    int EMPTY -> k
    int size -> a
    int[] keyTable -> b
    java.lang.Object[] valueTable -> c
    int capacity -> d
    int stashSize -> e
    java.lang.Object zeroValue -> f
    boolean hasZeroValue -> g
    float loadFactor -> l
    int hashShift -> m
    int mask -> n
    int threshold -> o
    int stashCapacity -> p
    int pushIterations -> q
    com.badlogic.gdx.utils.IntMap$Entries entries -> r
    com.badlogic.gdx.utils.IntMap$Values values -> s
    com.badlogic.gdx.utils.IntMap$Keys keys -> t
    87:156:java.lang.Object put(int,java.lang.Object) -> a
    160:162:void putAll(com.badlogic.gdx.utils.IntMap) -> a
    166:201:void putResize(int,java.lang.Object) -> b
    204:271:void push(int,java.lang.Object,int,int,int,int,int,int) -> a
    274:286:void putStash(int,java.lang.Object) -> c
    289:298:java.lang.Object get(int) -> a
    302:311:java.lang.Object get(int,java.lang.Object) -> d
    315:318:java.lang.Object getStash(int,java.lang.Object) -> e
    322:358:java.lang.Object remove(int) -> b
    362:371:java.lang.Object removeStash(int) -> e
    376:384:void removeStashIndex(int) -> c
    387:397:void clear() -> a
    404:419:boolean containsValue(java.lang.Object,boolean) -> a
    423:432:boolean containsKey(int) -> d
    436:439:boolean containsKeyStash(int) -> f
    447:462:int findKey(java.lang.Object,boolean,int) -> a
    468:470:void ensureCapacity(int) -> g
    473:494:void resize(int) -> h
    497:498:int hash2(int) -> i
    502:503:int hash3(int) -> j
    507:535:java.lang.String toString() -> toString
    541:545:com.badlogic.gdx.utils.IntMap$Entries entries() -> b
    551:555:com.badlogic.gdx.utils.IntMap$Values values() -> c
    561:565:com.badlogic.gdx.utils.IntMap$Keys keys() -> d
com.badlogic.gdx.utils.IntMap$Entries -> com.badlogic.gdx.utils.at:
    com.badlogic.gdx.utils.IntMap$Entry entry -> g
    637:648:com.badlogic.gdx.utils.IntMap$Entry next() -> c
    652:652:boolean hasNext() -> hasNext
    656:656:java.util.Iterator iterator() -> iterator
    628:628:void remove() -> remove
    628:628:void reset() -> a
    628:628:java.lang.Object next() -> next
com.badlogic.gdx.utils.IntMap$Entry -> com.badlogic.gdx.utils.au:
    int key -> a
    java.lang.Object value -> b
    573:573:java.lang.String toString() -> toString
com.badlogic.gdx.utils.IntMap$Keys -> com.badlogic.gdx.utils.av:
    699:702:int next() -> c
    707:710:com.badlogic.gdx.utils.IntArray toArray() -> d
    693:693:void remove() -> remove
    693:693:void reset() -> a
com.badlogic.gdx.utils.IntMap$MapIterator -> com.badlogic.gdx.utils.aw:
    int INDEX_ILLEGAL -> a
    int INDEX_ZERO -> b
    boolean hasNext -> c
    com.badlogic.gdx.utils.IntMap map -> d
    int nextIndex -> e
    int currentIndex -> f
    592:598:void reset() -> a
    601:606:void findNextIndex() -> b
    612:625:void remove() -> remove
com.badlogic.gdx.utils.IntMap$Values -> com.badlogic.gdx.utils.ax:
    666:666:boolean hasNext() -> hasNext
    671:677:java.lang.Object next() -> next
    681:681:java.util.Iterator iterator() -> iterator
    686:689:com.badlogic.gdx.utils.Array toArray() -> c
    660:660:void remove() -> remove
    660:660:void reset() -> a
com.badlogic.gdx.utils.Json -> com.badlogic.gdx.utils.ay:
    boolean debug -> a
    com.badlogic.gdx.utils.JsonWriter writer -> b
    java.lang.String typeName -> c
    boolean usePrototypes -> d
    com.badlogic.gdx.utils.JsonWriter$OutputType outputType -> e
    com.badlogic.gdx.utils.ObjectMap typeToFields -> f
    com.badlogic.gdx.utils.ObjectMap tagToClass -> g
    com.badlogic.gdx.utils.ObjectMap classToTag -> h
    com.badlogic.gdx.utils.ObjectMap classToSerializer -> i
    com.badlogic.gdx.utils.ObjectMap classToDefaultValues -> j
    boolean ignoreUnknownFields -> k
    66:67:void setIgnoreUnknownFields(boolean) -> a
    70:71:void setOutputType(com.badlogic.gdx.utils.JsonWriter$OutputType) -> a
    74:76:void addClassTag(java.lang.String,java.lang.Class) -> a
    79:84:java.lang.Class getClass(java.lang.String) -> a
    89:91:java.lang.String getTag(java.lang.Class) -> a
    97:98:void setTypeName$552c4e01() -> a
    101:102:void setSerializer(java.lang.Class,com.badlogic.gdx.utils.Json$Serializer) -> a
    105:105:com.badlogic.gdx.utils.Json$Serializer getSerializer(java.lang.Class) -> b
    109:110:void setUsePrototypes$1385ff() -> b
    113:118:void setElementType(java.lang.Class,java.lang.String,java.lang.Class) -> a
    121:148:com.badlogic.gdx.utils.ObjectMap cacheFields(java.lang.Class) -> c
    152:152:java.lang.String toJson(java.lang.Object) -> a
    156:156:java.lang.String toJson(java.lang.Object,java.lang.Class) -> a
    162:164:java.lang.String toJson$45cd90b1(java.lang.Object,java.lang.Class) -> b
    168:169:void toJson(java.lang.Object,com.badlogic.gdx.files.FileHandle) -> a
    173:174:void toJson(java.lang.Object,java.lang.Class,com.badlogic.gdx.files.FileHandle) -> a
    179:189:void toJson$154a2828(java.lang.Object,java.lang.Class,com.badlogic.gdx.files.FileHandle) -> b
    194:195:void toJson(java.lang.Object,java.io.Writer) -> a
    199:200:void toJson(java.lang.Object,java.lang.Class,java.io.Writer) -> a
    205:213:void toJson$5454e82f(java.lang.Object,java.lang.Class,java.io.Writer) -> b
    218:249:void writeFields(java.lang.Object) -> b
    253:284:java.lang.Object[] getDefaultValues(java.lang.Class) -> d
    289:290:void writeField(java.lang.Object,java.lang.String) -> a
    294:295:void writeField(java.lang.Object,java.lang.String,java.lang.Class) -> a
    298:299:void writeField(java.lang.Object,java.lang.String,java.lang.String) -> a
    303:322:void writeField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class) -> a
    329:337:void writeValue(java.lang.String,java.lang.Object) -> a
    343:348:void writeValue(java.lang.String,java.lang.Object,java.lang.Class) -> a
    355:360:void writeValue(java.lang.String,java.lang.Object,java.lang.Class,java.lang.Class) -> a
    364:368:void writeValue(java.lang.Object) -> c
    373:374:void writeValue(java.lang.Object,java.lang.Class) -> c
    381:496:void writeValue(java.lang.Object,java.lang.Class,java.lang.Class) -> a
    502:506:void writeObjectStart(java.lang.String) -> b
    512:517:void writeObjectStart(java.lang.String,java.lang.Class,java.lang.Class) -> a
    521:523:void writeObjectStart() -> c
    530:535:void writeObjectStart(java.lang.Class,java.lang.Class) -> a
    539:541:void writeObjectEnd() -> d
    547:550:void writeArrayStart(java.lang.String) -> c
    556:558:void writeArrayStart() -> e
    564:566:void writeArrayEnd() -> f
    571:577:void writeType(java.lang.Class) -> e
    585:585:java.lang.Object fromJson(java.lang.Class,java.io.Reader) -> a
    592:592:java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.io.Reader) -> a
    598:598:java.lang.Object fromJson(java.lang.Class,java.io.InputStream) -> a
    605:605:java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.io.InputStream) -> a
    612:614:java.lang.Object fromJson(java.lang.Class,com.badlogic.gdx.files.FileHandle) -> a
    623:625:java.lang.Object fromJson(java.lang.Class,java.lang.Class,com.badlogic.gdx.files.FileHandle) -> a
    632:632:java.lang.Object fromJson(java.lang.Class,char[],int,int) -> a
    639:639:java.lang.Object fromJson(java.lang.Class,java.lang.Class,char[],int,int) -> a
    645:645:java.lang.Object fromJson(java.lang.Class,java.lang.String) -> a
    651:651:java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.lang.String) -> a
    655:656:void readField(java.lang.Object,java.lang.String,java.lang.Object) -> a
    659:660:void readField(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Object) -> a
    663:664:void readField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Object) -> a
    668:688:void readField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class,java.lang.Object) -> a
    693:720:void readFields(java.lang.Object,java.lang.Object) -> a
    726:727:java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Object) -> a
    733:736:java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Object) -> a
    743:744:java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> a
    751:754:java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object,java.lang.Object) -> a
    761:761:java.lang.Object readValue$505c073b(java.lang.Class,java.lang.Class,java.lang.Object) -> b
    767:767:java.lang.Object readValue(java.lang.Class,java.lang.Object) -> a
    774:891:java.lang.Object readValue(java.lang.Class,java.lang.Class,java.lang.Object) -> a
    895:896:java.lang.String convertToString(java.lang.Object) -> d
    901:919:java.lang.Object newInstance(java.lang.Class) -> f
    924:924:java.lang.String prettyPrint(java.lang.Object) -> e
    928:928:java.lang.String prettyPrint(java.lang.String) -> d
    932:932:java.lang.String prettyPrint$12787dce(java.lang.Object) -> f
    936:938:java.lang.String prettyPrint$7a1ba7c4(java.lang.String) -> e
    942:1008:void prettyPrint(java.lang.Object,com.badlogic.gdx.utils.StringBuilder,int,int) -> a
    1012:1016:boolean isFlat(com.badlogic.gdx.utils.ObjectMap) -> a
    1020:1025:boolean isFlat(com.badlogic.gdx.utils.Array) -> a
    1029:1031:void indent(int,com.badlogic.gdx.utils.StringBuilder) -> a
com.badlogic.gdx.utils.Json$FieldMetadata -> com.badlogic.gdx.utils.az:
    java.lang.reflect.Field field -> a
    java.lang.Class elementType -> b
com.badlogic.gdx.utils.Json$ReadOnlySerializer -> com.badlogic.gdx.utils.ba:
    1062:1062:void write$327583b7() -> a
    java.lang.Object read$185f67a5(com.badlogic.gdx.utils.Json,java.lang.Object) -> a
com.badlogic.gdx.utils.Json$Serializable -> com.badlogic.gdx.utils.bb:
    void write$2f352116() -> a
    void read$303071ae() -> b
com.badlogic.gdx.utils.Json$Serializer -> com.badlogic.gdx.utils.bc:
    void write$327583b7() -> a
    java.lang.Object read$185f67a5(com.badlogic.gdx.utils.Json,java.lang.Object) -> a
com.badlogic.gdx.utils.JsonReader -> com.badlogic.gdx.utils.bd:
    byte[] _json_actions -> g
    short[] _json_key_offsets -> h
    char[] _json_trans_keys -> i
    byte[] _json_single_lengths -> j
    byte[] _json_range_lengths -> k
    short[] _json_index_offsets -> l
    byte[] _json_trans_targs -> m
    byte[] _json_trans_actions -> n
    byte[] _json_eof_actions -> o
    int json_start -> a
    int json_first_final -> b
    int json_error -> c
    int json_en_object -> d
    int json_en_array -> e
    int json_en_main -> f
    com.badlogic.gdx.utils.Array elements -> p
    java.lang.Object root -> q
    java.lang.Object current -> r
    37:38:java.lang.Object parse(java.lang.String) -> a
    43:62:java.lang.Object parse(java.io.Reader) -> a
    68:70:java.lang.Object parse(java.io.InputStream) -> a
    76:78:java.lang.Object parse(com.badlogic.gdx.files.FileHandle) -> a
    83:423:java.lang.Object parse(char[],int,int) -> a
    428:428:byte[] init__json_actions_0() -> a
    435:435:short[] init__json_key_offsets_0() -> b
    444:444:char[] init__json_trans_keys_0() -> c
    472:472:byte[] init__json_single_lengths_0() -> d
    480:480:byte[] init__json_range_lengths_0() -> e
    488:488:short[] init__json_index_offsets_0() -> f
    497:497:byte[] init__json_trans_targs_0() -> g
    522:522:byte[] init__json_trans_actions_0() -> h
    544:544:byte[] init__json_eof_actions_0() -> i
    565:571:void set(java.lang.String,java.lang.Object) -> a
    574:578:void startObject(java.lang.String) -> b
    581:585:void startArray(java.lang.String) -> c
    588:590:void pop() -> j
    593:594:void string(java.lang.String,java.lang.String) -> a
    597:598:void number(java.lang.String,float) -> a
    601:602:void bool(java.lang.String,boolean) -> a
    605:645:java.lang.String unescape(java.lang.String) -> d
com.badlogic.gdx.utils.JsonWriter -> com.badlogic.gdx.utils.be:
    java.io.Writer writer -> a
    com.badlogic.gdx.utils.Array stack -> b
    com.badlogic.gdx.utils.JsonWriter$JsonObject current -> c
    boolean named -> d
    com.badlogic.gdx.utils.JsonWriter$OutputType outputType -> e
    37:38:void setOutputType(com.badlogic.gdx.utils.JsonWriter$OutputType) -> a
    41:49:com.badlogic.gdx.utils.JsonWriter name(java.lang.String) -> a
    53:65:com.badlogic.gdx.utils.JsonWriter object() -> a
    69:81:com.badlogic.gdx.utils.JsonWriter array() -> b
    85:97:com.badlogic.gdx.utils.JsonWriter value(java.lang.Object) -> a
    101:101:com.badlogic.gdx.utils.JsonWriter object(java.lang.String) -> b
    105:105:com.badlogic.gdx.utils.JsonWriter array(java.lang.String) -> c
    109:109:com.badlogic.gdx.utils.JsonWriter set(java.lang.String,java.lang.Object) -> a
    113:116:com.badlogic.gdx.utils.JsonWriter pop() -> c
    120:121:void write(char[],int,int) -> write
    124:125:void flush() -> flush
    128:131:void close() -> close
com.badlogic.gdx.utils.JsonWriter$1 -> com.badlogic.gdx.utils.bf:
    int[] $SwitchMap$com$badlogic$gdx$utils$JsonWriter$OutputType -> a
com.badlogic.gdx.utils.JsonWriter$JsonObject -> com.badlogic.gdx.utils.bg:
    boolean array -> a
    boolean needsComma -> b
    com.badlogic.gdx.utils.JsonWriter this$0 -> c
    143:144:void close() -> a
com.badlogic.gdx.utils.JsonWriter$OutputType -> com.badlogic.gdx.utils.bh:
    com.badlogic.gdx.utils.JsonWriter$OutputType json -> a
    com.badlogic.gdx.utils.JsonWriter$OutputType javascript -> b
    com.badlogic.gdx.utils.JsonWriter$OutputType minimal -> c
    java.util.regex.Pattern javascriptPattern -> d
    java.util.regex.Pattern minimalValuePattern -> e
    java.util.regex.Pattern minimalNamePattern -> f
    com.badlogic.gdx.utils.JsonWriter$OutputType[] $VALUES -> g
    147:147:com.badlogic.gdx.utils.JsonWriter$OutputType[] values() -> values
    147:147:com.badlogic.gdx.utils.JsonWriter$OutputType valueOf(java.lang.String) -> valueOf
    160:164:java.lang.String quoteValue(java.lang.Object) -> a
    168:177:java.lang.String quoteName(java.lang.String) -> a
com.badlogic.gdx.utils.LittleEndianInputStream -> com.badlogic.gdx.utils.bi:
    java.io.DataInputStream din -> a
    37:38:void readFully(byte[]) -> readFully
    41:42:void readFully(byte[],int,int) -> readFully
    45:45:int skipBytes(int) -> skipBytes
    49:49:boolean readBoolean() -> readBoolean
    53:53:byte readByte() -> readByte
    57:57:int readUnsignedByte() -> readUnsignedByte
    61:63:short readShort() -> readShort
    67:69:int readUnsignedShort() -> readUnsignedShort
    73:73:char readChar() -> readChar
    77:81:int readInt() -> readInt
    85:89:long readLong() -> readLong
    95:95:float readFloat() -> readFloat
    99:99:double readDouble() -> readDouble
    103:103:java.lang.String readLine() -> readLine
    107:107:java.lang.String readUTF() -> readUTF
com.badlogic.gdx.utils.Logger -> com.badlogic.gdx.utils.bj:
    int NONE -> a
    int ERROR -> b
    int INFO -> c
    int DEBUG -> d
    java.lang.String tag -> e
    int level -> f
    45:46:void debug(java.lang.String) -> a
    49:50:void debug(java.lang.String,java.lang.Exception) -> a
    53:54:void info(java.lang.String) -> b
    57:58:void info(java.lang.String,java.lang.Exception) -> b
    61:62:void error(java.lang.String) -> c
    65:66:void error(java.lang.String,java.lang.Throwable) -> a
    72:73:void setLevel(int) -> a
    76:76:int getLevel() -> a
com.badlogic.gdx.utils.LongArray -> com.badlogic.gdx.utils.bk:
    long[] items -> a
    int size -> b
    boolean ordered -> c
    76:79:void add(long) -> a
    82:83:void addAll(com.badlogic.gdx.utils.LongArray) -> a
    86:89:void addAll$49aeb3f(com.badlogic.gdx.utils.LongArray,int) -> a
    92:93:void addAll(long[]) -> a
    96:101:void addAll$1c88ab9c(long[],int) -> a
    104:105:long get(int) -> a
    109:111:void set(int,long) -> a
    114:122:void insert(int,long) -> b
    125:131:void swap(int,int) -> a
    134:138:boolean contains(long) -> b
    142:145:int indexOf(long) -> c
    149:152:int lastIndexOf(char) -> a
    156:163:boolean removeValue(long) -> d
    168:176:long removeIndex(int) -> b
    182:195:boolean removeAll(com.badlogic.gdx.utils.LongArray) -> b
    200:200:long pop() -> a
    205:205:long peek() -> b
    210:211:long first() -> c
    215:216:void clear() -> d
    221:222:void shrink() -> e
    228:230:long[] ensureCapacity(int) -> c
    234:238:long[] resize(int) -> d
    242:243:void sort() -> f
    246:252:void reverse() -> g
    255:261:void shuffle() -> h
    266:267:void truncate(int) -> e
    271:272:long random() -> i
    276:278:long[] toArray() -> j
    282:289:boolean equals(java.lang.Object) -> equals
    293:303:java.lang.String toString() -> toString
    307:315:java.lang.String toString(java.lang.String) -> a
com.badlogic.gdx.utils.LongMap -> com.badlogic.gdx.utils.bl:
    int PRIME1 -> h
    int PRIME2 -> i
    int PRIME3 -> j
    int EMPTY -> k
    int size -> a
    long[] keyTable -> b
    java.lang.Object[] valueTable -> c
    int capacity -> d
    int stashSize -> e
    java.lang.Object zeroValue -> f
    boolean hasZeroValue -> g
    float loadFactor -> l
    int hashShift -> m
    int mask -> n
    int threshold -> o
    int stashCapacity -> p
    int pushIterations -> q
    com.badlogic.gdx.utils.LongMap$Entries entries -> r
    com.badlogic.gdx.utils.LongMap$Values values -> s
    com.badlogic.gdx.utils.LongMap$Keys keys -> t
    87:156:java.lang.Object put(long,java.lang.Object) -> a
    160:162:void putAll(com.badlogic.gdx.utils.LongMap) -> a
    166:201:void putResize(long,java.lang.Object) -> b
    204:270:void push(long,java.lang.Object,int,long,int,long,int,long) -> a
    273:285:void putStash(long,java.lang.Object) -> c
    288:297:java.lang.Object get(long) -> a
    301:310:java.lang.Object get(long,java.lang.Object) -> d
    314:317:java.lang.Object getStash(long,java.lang.Object) -> e
    321:357:java.lang.Object remove(long) -> b
    361:370:java.lang.Object removeStash(long) -> c
    375:383:void removeStashIndex(int) -> a
    386:396:void clear() -> b
    401:416:boolean containsValue(java.lang.Object,boolean) -> a
    420:429:boolean containsKey(long) -> d
    433:436:boolean containsKeyStash(long) -> e
    444:459:long findKey(java.lang.Object,boolean,long) -> a
    465:467:void ensureCapacity(int) -> b
    470:491:void resize(int) -> c
    494:495:int hash2(long) -> f
    499:500:int hash3(long) -> g
    504:527:java.lang.String toString() -> toString
    533:537:com.badlogic.gdx.utils.LongMap$Entries entries() -> c
    543:547:com.badlogic.gdx.utils.LongMap$Values values() -> a
    553:557:com.badlogic.gdx.utils.LongMap$Keys keys() -> d
com.badlogic.gdx.utils.LongMap$Entries -> com.badlogic.gdx.utils.bm:
    com.badlogic.gdx.utils.LongMap$Entry entry -> g
    629:640:com.badlogic.gdx.utils.LongMap$Entry next() -> c
    644:644:boolean hasNext() -> hasNext
    648:648:java.util.Iterator iterator() -> iterator
    620:620:void remove() -> remove
    620:620:void reset() -> a
    620:620:java.lang.Object next() -> next
com.badlogic.gdx.utils.LongMap$Entry -> com.badlogic.gdx.utils.bn:
    long key -> a
    java.lang.Object value -> b
    565:565:java.lang.String toString() -> toString
com.badlogic.gdx.utils.LongMap$Keys -> com.badlogic.gdx.utils.bo:
    691:694:long next() -> c
    699:702:com.badlogic.gdx.utils.LongArray toArray() -> d
    685:685:void remove() -> remove
    685:685:void reset() -> a
com.badlogic.gdx.utils.LongMap$MapIterator -> com.badlogic.gdx.utils.bp:
    int INDEX_ILLEGAL -> a
    int INDEX_ZERO -> b
    boolean hasNext -> c
    com.badlogic.gdx.utils.LongMap map -> d
    int nextIndex -> e
    int currentIndex -> f
    584:590:void reset() -> a
    593:598:void findNextIndex() -> b
    604:617:void remove() -> remove
com.badlogic.gdx.utils.LongMap$Values -> com.badlogic.gdx.utils.bq:
    658:658:boolean hasNext() -> hasNext
    663:669:java.lang.Object next() -> next
    673:673:java.util.Iterator iterator() -> iterator
    678:681:com.badlogic.gdx.utils.Array toArray() -> c
    652:652:void remove() -> remove
    652:652:void reset() -> a
com.badlogic.gdx.utils.NumberUtils -> com.badlogic.gdx.utils.br:
    21:21:int floatToIntBits(float) -> a
    25:25:int floatToRawIntBits(float) -> b
    29:29:int floatToIntColor(float) -> c
    35:35:float intToFloatColor(int) -> a
    39:39:float intBitsToFloat(int) -> b
    43:43:long doubleToLongBits(double) -> a
    47:47:double longBitsToDouble(long) -> a
com.badlogic.gdx.utils.ObjectIntMap -> com.badlogic.gdx.utils.bs:
    int PRIME1 -> f
    int PRIME2 -> g
    int PRIME3 -> h
    int size -> a
    java.lang.Object[] keyTable -> b
    int[] valueTable -> c
    int capacity -> d
    int stashSize -> e
    float loadFactor -> i
    int hashShift -> j
    int mask -> k
    int threshold -> l
    int stashCapacity -> m
    int pushIterations -> n
    com.badlogic.gdx.utils.ObjectIntMap$Entries entries -> o
    com.badlogic.gdx.utils.ObjectIntMap$Values values -> p
    com.badlogic.gdx.utils.ObjectIntMap$Keys keys -> q
    84:141:void put(java.lang.Object,int) -> a
    144:146:void putAll(com.badlogic.gdx.utils.ObjectIntMap) -> a
    151:180:void putResize(java.lang.Object,int) -> c
    183:250:void push(java.lang.Object,int,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> a
    253:265:void putStash(java.lang.Object,int) -> d
    269:278:int get(java.lang.Object,int) -> b
    282:285:int getStash(java.lang.Object,int) -> e
    291:302:int getAndIncrement(java.lang.Object,int,int) -> a
    306:314:int getAndIncrementStash(java.lang.Object,int,int) -> b
    318:343:int remove(java.lang.Object,int) -> f
    347:356:int removeStash(java.lang.Object,int) -> g
    361:367:void removeStashIndex(int) -> a
    370:375:void clear() -> a
    380:383:boolean containsValue(int) -> b
    387:396:boolean containsKey(java.lang.Object) -> a
    400:403:boolean containsKeyStash(java.lang.Object) -> b
    409:412:java.lang.Object findKey(int) -> c
    418:420:void ensureCapacity(int) -> d
    423:444:void resize(int) -> e
    447:448:int hash2(int) -> f
    452:453:int hash3(int) -> g
    457:480:java.lang.String toString() -> toString
    486:490:com.badlogic.gdx.utils.ObjectIntMap$Entries entries() -> b
    496:500:com.badlogic.gdx.utils.ObjectIntMap$Values values() -> c
    506:510:com.badlogic.gdx.utils.ObjectIntMap$Keys keys() -> d
com.badlogic.gdx.utils.ObjectIntMap$Entries -> com.badlogic.gdx.utils.bt:
    com.badlogic.gdx.utils.ObjectIntMap$Entry entry -> e
    571:577:com.badlogic.gdx.utils.ObjectIntMap$Entry next() -> c
    581:581:boolean hasNext() -> hasNext
    585:585:java.util.Iterator iterator() -> iterator
    562:562:void remove() -> remove
    562:562:void reset() -> a
    562:562:java.lang.Object next() -> next
com.badlogic.gdx.utils.ObjectIntMap$Entry -> com.badlogic.gdx.utils.bu:
    java.lang.Object key -> a
    int value -> b
    518:518:java.lang.String toString() -> toString
com.badlogic.gdx.utils.ObjectIntMap$Keys -> com.badlogic.gdx.utils.bv:
    620:620:boolean hasNext() -> hasNext
    624:627:java.lang.Object next() -> next
    631:631:java.util.Iterator iterator() -> iterator
    636:639:com.badlogic.gdx.utils.Array toArray() -> c
    614:614:void remove() -> remove
    614:614:void reset() -> a
com.badlogic.gdx.utils.ObjectIntMap$MapIterator -> com.badlogic.gdx.utils.bw:
    boolean hasNext -> a
    com.badlogic.gdx.utils.ObjectIntMap map -> b
    int nextIndex -> c
    int currentIndex -> d
    534:537:void reset() -> a
    540:545:void findNextIndex() -> b
    551:559:void remove() -> remove
com.badlogic.gdx.utils.ObjectIntMap$Values -> com.badlogic.gdx.utils.bx:
    595:595:boolean hasNext() -> c
    599:602:int next() -> d
    607:610:com.badlogic.gdx.utils.IntArray toArray() -> e
    589:589:void remove() -> remove
    589:589:void reset() -> a
com.badlogic.gdx.utils.ObjectMap -> com.badlogic.gdx.utils.by:
    int PRIME1 -> f
    int PRIME2 -> g
    int PRIME3 -> h
    int size -> a
    java.lang.Object[] keyTable -> b
    java.lang.Object[] valueTable -> c
    int capacity -> d
    int stashSize -> e
    float loadFactor -> i
    int hashShift -> j
    int mask -> k
    int threshold -> l
    int stashCapacity -> m
    int pushIterations -> n
    com.badlogic.gdx.utils.ObjectMap$Entries entries -> o
    com.badlogic.gdx.utils.ObjectMap$Values values -> p
    com.badlogic.gdx.utils.ObjectMap$Keys keys -> q
    85:86:java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    90:150:java.lang.Object put_internal(java.lang.Object,java.lang.Object) -> b
    154:156:void putAll(com.badlogic.gdx.utils.ObjectMap) -> a
    161:190:void putResize(java.lang.Object,java.lang.Object) -> c
    193:260:void push(java.lang.Object,java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> a
    263:275:void putStash(java.lang.Object,java.lang.Object) -> d
    278:287:java.lang.Object get(java.lang.Object) -> a
    291:294:java.lang.Object getStash(java.lang.Object) -> e
    299:308:java.lang.Object get(java.lang.Object,java.lang.Object) -> e
    312:315:java.lang.Object getStash(java.lang.Object,java.lang.Object) -> f
    319:347:java.lang.Object remove(java.lang.Object) -> b
    351:360:java.lang.Object removeStash(java.lang.Object) -> f
    365:373:void removeStashIndex(int) -> a
    376:384:void clear() -> a
    391:403:boolean containsValue(java.lang.Object,boolean) -> a
    407:416:boolean containsKey(java.lang.Object) -> c
    420:423:boolean containsKeyStash(java.lang.Object) -> g
    431:440:java.lang.Object findKey$7e8b2351(java.lang.Object) -> d
    449:451:void ensureCapacity(int) -> b
    454:475:void resize(int) -> c
    478:479:int hash2(int) -> d
    483:484:int hash3(int) -> e
    488:511:java.lang.String toString() -> toString
    517:521:com.badlogic.gdx.utils.ObjectMap$Entries entries() -> b
    527:531:com.badlogic.gdx.utils.ObjectMap$Values values() -> c
    537:541:com.badlogic.gdx.utils.ObjectMap$Keys keys() -> d
com.badlogic.gdx.utils.ObjectMap$Entries -> com.badlogic.gdx.utils.bz:
    com.badlogic.gdx.utils.ObjectMap$Entry entry -> a
    603:609:com.badlogic.gdx.utils.ObjectMap$Entry next() -> a
    613:613:boolean hasNext() -> hasNext
    617:617:java.util.Iterator iterator() -> iterator
    594:594:void remove() -> remove
    594:594:void reset() -> b
    594:594:java.lang.Object next() -> next
com.badlogic.gdx.utils.ObjectMap$Entry -> com.badlogic.gdx.utils.ca:
    java.lang.Object key -> a
    java.lang.Object value -> b
    549:549:java.lang.String toString() -> toString
com.badlogic.gdx.utils.ObjectMap$Keys -> com.badlogic.gdx.utils.cb:
    662:662:boolean hasNext() -> hasNext
    666:669:java.lang.Object next() -> next
    673:673:java.util.Iterator iterator() -> iterator
    678:681:com.badlogic.gdx.utils.Array toArray() -> a
    656:656:void remove() -> remove
    656:656:void reset() -> b
com.badlogic.gdx.utils.ObjectMap$MapIterator -> com.badlogic.gdx.utils.cc:
    boolean hasNext -> b
    com.badlogic.gdx.utils.ObjectMap map -> c
    int nextIndex -> d
    int currentIndex -> e
    565:568:void reset() -> b
    571:576:void advance() -> c
    582:591:void remove() -> remove
com.badlogic.gdx.utils.ObjectMap$Values -> com.badlogic.gdx.utils.cd:
    627:627:boolean hasNext() -> hasNext
    631:634:java.lang.Object next() -> next
    638:638:java.util.Iterator iterator() -> iterator
    643:646:com.badlogic.gdx.utils.Array toArray() -> a
    651:653:void toArray(com.badlogic.gdx.utils.Array) -> a
    621:621:void remove() -> remove
    621:621:void reset() -> b
com.badlogic.gdx.utils.OrderedMap -> com.badlogic.gdx.utils.ce:
    com.badlogic.gdx.utils.Array keys -> f
    42:43:java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    47:48:java.lang.Object remove(java.lang.Object) -> b
    52:54:void clear() -> a
    57:57:com.badlogic.gdx.utils.Array orderedKeys() -> e
    61:61:com.badlogic.gdx.utils.ObjectMap$Entries entries() -> b
    81:81:com.badlogic.gdx.utils.ObjectMap$Keys keys() -> d
    100:100:com.badlogic.gdx.utils.ObjectMap$Values values() -> c
    119:131:java.lang.String toString() -> toString
com.badlogic.gdx.utils.OrderedMap$1 -> com.badlogic.gdx.utils.cf:
    com.badlogic.gdx.utils.OrderedMap this$0 -> f
    63:65:void advance() -> c
    68:71:com.badlogic.gdx.utils.ObjectMap$Entry next() -> a
    75:76:void remove() -> remove
    61:61:java.lang.Object next() -> next
com.badlogic.gdx.utils.OrderedMap$2 -> com.badlogic.gdx.utils.cg:
    com.badlogic.gdx.utils.OrderedMap this$0 -> a
    83:85:void advance() -> c
    88:90:java.lang.Object next() -> next
    94:95:void remove() -> remove
com.badlogic.gdx.utils.OrderedMap$3 -> com.badlogic.gdx.utils.ch:
    com.badlogic.gdx.utils.OrderedMap this$0 -> a
    102:104:void advance() -> c
    107:109:java.lang.Object next() -> next
    113:114:void remove() -> remove
com.badlogic.gdx.utils.PauseableThread -> com.badlogic.gdx.utils.ci:
    java.lang.Runnable runnable -> a
    boolean paused -> b
    boolean exit -> c
    37:48:void run() -> run
    54:55:void onPause() -> a
    59:62:void onResume() -> b
    67:67:boolean isPaused() -> c
    72:74:void stopThread() -> d
com.badlogic.gdx.utils.PerformanceCounter -> com.badlogic.gdx.utils.cj:
    float nano2seconds -> f
    long startTime -> g
    long lastTick -> h
    com.badlogic.gdx.math.FloatCounter time -> a
    com.badlogic.gdx.math.FloatCounter load -> b
    java.lang.String name -> c
    float current -> d
    boolean valid -> e
    65:69:void tick() -> a
    76:88:void tick(float) -> a
    95:97:void start() -> b
    104:109:void stop() -> c
    115:121:void reset() -> d
    126:127:java.lang.String toString() -> toString
    132:133:com.badlogic.gdx.utils.StringBuilder toString(com.badlogic.gdx.utils.StringBuilder) -> a
com.badlogic.gdx.utils.PerformanceCounters -> com.badlogic.gdx.utils.ck:
    float nano2seconds -> b
    long lastTick -> c
    com.badlogic.gdx.utils.Array counters -> a
    29:31:com.badlogic.gdx.utils.PerformanceCounter add(java.lang.String,int) -> a
    35:37:com.badlogic.gdx.utils.PerformanceCounter add(java.lang.String) -> a
    41:45:void tick() -> a
    48:50:void tick(float) -> a
    53:59:com.badlogic.gdx.utils.StringBuilder toString(com.badlogic.gdx.utils.StringBuilder) -> a
com.badlogic.gdx.utils.Pool -> com.badlogic.gdx.utils.cl:
    int max -> max
    com.badlogic.gdx.utils.Array freeObjects -> freeObjects
    java.lang.Object newObject() -> newObject
    47:47:java.lang.Object obtain() -> obtain
    53:56:void free(java.lang.Object) -> free
    61:68:void freeAll(com.badlogic.gdx.utils.Array) -> freeAll
    72:73:void clear() -> clear
com.badlogic.gdx.utils.Pool$Poolable -> com.badlogic.gdx.utils.cm:
    void reset() -> b
com.badlogic.gdx.utils.PooledLinkedList -> com.badlogic.gdx.utils.cn:
    com.badlogic.gdx.utils.PooledLinkedList$Item head -> a
    com.badlogic.gdx.utils.PooledLinkedList$Item tail -> b
    com.badlogic.gdx.utils.PooledLinkedList$Item iter -> c
    com.badlogic.gdx.utils.PooledLinkedList$Item curr -> d
    int size -> e
    com.badlogic.gdx.utils.Pool pool -> f
    45:61:void add(java.lang.Object) -> a
    65:66:void iter() -> a
    72:77:java.lang.Object next() -> b
    82:112:void remove() -> c
    145:150:void clear() -> d
com.badlogic.gdx.utils.PooledLinkedList$1 -> com.badlogic.gdx.utils.co:
    com.badlogic.gdx.utils.PooledLinkedList this$0 -> a
    39:39:com.badlogic.gdx.utils.PooledLinkedList$Item newObject() -> a
    37:37:java.lang.Object newObject() -> newObject
com.badlogic.gdx.utils.PooledLinkedList$Item -> com.badlogic.gdx.utils.cp:
    java.lang.Object payload -> a
    com.badlogic.gdx.utils.PooledLinkedList$Item next -> b
    com.badlogic.gdx.utils.PooledLinkedList$Item prev -> c
com.badlogic.gdx.utils.Pools -> com.badlogic.gdx.utils.cq:
    com.badlogic.gdx.utils.ObjectMap typePools -> a
    27:32:com.badlogic.gdx.utils.Pool get(java.lang.Class) -> a
    37:37:java.lang.Object obtain(java.lang.Class) -> b
    42:47:void free(java.lang.Object) -> a
    51:59:void freeAll(com.badlogic.gdx.utils.Array) -> a
com.badlogic.gdx.utils.Predicate -> com.badlogic.gdx.utils.cr:
    boolean evaluate$5d527815() -> a
com.badlogic.gdx.utils.Predicate$PredicateIterable -> com.badlogic.gdx.utils.cs:
    java.lang.Iterable iterable -> a
    com.badlogic.gdx.utils.Predicate predicate -> b
    com.badlogic.gdx.utils.Predicate$PredicateIterator iterator -> c
    99:101:void set(java.lang.Iterable,com.badlogic.gdx.utils.Predicate) -> a
    107:111:java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.Predicate$PredicateIterator -> com.badlogic.gdx.utils.ct:
    java.util.Iterator iterator -> a
    com.badlogic.gdx.utils.Predicate predicate -> b
    boolean end -> c
    boolean peeked -> d
    java.lang.Object next -> e
    45:46:void set(java.lang.Iterable,com.badlogic.gdx.utils.Predicate) -> a
    49:53:void set(java.util.Iterator,com.badlogic.gdx.utils.Predicate) -> a
    57:68:boolean hasNext() -> hasNext
    73:78:java.lang.Object next() -> next
    83:86:void remove() -> remove
com.badlogic.gdx.utils.ReflectionPool -> com.badlogic.gdx.utils.cu:
    java.lang.Class type -> a
    43:59:java.lang.Object newObject() -> newObject
com.badlogic.gdx.utils.Scaling -> com.badlogic.gdx.utils.cv:
    com.badlogic.gdx.utils.Scaling fit -> a
    com.badlogic.gdx.utils.Scaling fill -> b
    com.badlogic.gdx.utils.Scaling fillX -> c
    com.badlogic.gdx.utils.Scaling fillY -> d
    com.badlogic.gdx.utils.Scaling stretch -> e
    com.badlogic.gdx.utils.Scaling stretchX -> f
    com.badlogic.gdx.utils.Scaling stretchY -> g
    com.badlogic.gdx.utils.Scaling none -> h
    com.badlogic.gdx.math.Vector2 temp -> i
    com.badlogic.gdx.utils.Scaling[] $VALUES -> j
    23:23:com.badlogic.gdx.utils.Scaling[] values() -> values
    23:23:com.badlogic.gdx.utils.Scaling valueOf(java.lang.String) -> valueOf
    52:102:com.badlogic.gdx.math.Vector2 apply(float,float,float,float) -> a
com.badlogic.gdx.utils.Scaling$1 -> com.badlogic.gdx.utils.cw:
    int[] $SwitchMap$com$badlogic$gdx$utils$Scaling -> a
com.badlogic.gdx.utils.ScreenUtils -> com.badlogic.gdx.utils.cx:
    40:42:com.badlogic.gdx.graphics.g2d.TextureRegion getFrameBufferTexture() -> a
    56:68:com.badlogic.gdx.graphics.g2d.TextureRegion getFrameBufferTexture$78401e6b(int,int) -> a
    78:80:byte[] getFrameBufferPixels(boolean) -> a
    92:107:byte[] getFrameBufferPixels$604e10fe(int,int,boolean) -> a
com.badlogic.gdx.utils.SerializationException -> com.badlogic.gdx.utils.cy:
    java.lang.StringBuffer trace -> a
    42:42:boolean causedBy(java.lang.Class) -> a
    46:49:boolean causedBy(java.lang.Throwable,java.lang.Class) -> a
    53:59:java.lang.String getMessage() -> getMessage
    65:69:void addTrace(java.lang.String) -> a
com.badlogic.gdx.utils.SharedLibraryLoader -> com.badlogic.gdx.utils.cz:
    boolean isWindows -> a
    boolean isLinux -> b
    boolean isMac -> c
    boolean isIos -> d
    boolean isAndroid -> e
    boolean is64Bit -> f
    java.util.HashSet loadedLibraries -> g
    java.lang.String nativesJar -> h
    72:87:java.lang.String crc(java.io.InputStream) -> a
    92:95:java.lang.String mapLibraryName(java.lang.String) -> b
    102:126:void load(java.lang.String) -> a
    129:142:java.io.InputStream readFile(java.lang.String) -> c
    151:185:java.io.File extractFile$7a2fde5c(java.lang.String) -> d
com.badlogic.gdx.utils.ShortArray -> com.badlogic.gdx.utils.da:
    short[] items -> a
    int size -> b
    boolean ordered -> c
    76:79:void add(short) -> a
    82:83:void addAll(com.badlogic.gdx.utils.ShortArray) -> a
    86:89:void addAll$3d390c15(com.badlogic.gdx.utils.ShortArray,int) -> a
    92:93:void addAll(short[]) -> a
    96:101:void addAll$1c09d813(short[],int) -> a
    104:105:short get(int) -> a
    109:111:void set(int,short) -> a
    114:122:void insert(int,short) -> b
    125:131:void swap(int,int) -> a
    134:138:boolean contains(short) -> b
    142:145:int indexOf(short) -> c
    149:152:int lastIndexOf(char) -> a
    156:163:boolean removeValue(short) -> d
    168:176:short removeIndex(int) -> b
    182:195:boolean removeAll(com.badlogic.gdx.utils.ShortArray) -> b
    200:200:short pop() -> a
    205:205:short peek() -> b
    210:211:short first() -> c
    215:216:void clear() -> d
    221:222:void shrink() -> e
    228:230:short[] ensureCapacity(int) -> c
    234:238:short[] resize(int) -> d
    242:243:void sort() -> f
    246:252:void reverse() -> g
    255:261:void shuffle() -> h
    266:267:void truncate(int) -> e
    271:272:short random() -> i
    276:278:short[] toArray() -> j
    282:289:boolean equals(java.lang.Object) -> equals
    293:303:java.lang.String toString() -> toString
    307:315:java.lang.String toString(java.lang.String) -> a
com.badlogic.gdx.utils.SnapshotArray -> com.badlogic.gdx.utils.db:
    java.lang.Object[] snapshot -> d
    java.lang.Object[] recycled -> e
    int snapshots -> f
    77:79:java.lang.Object[] begin() -> i
    84:93:void end() -> j
    96:104:void modified() -> k
    107:109:void set(int,java.lang.Object) -> a
    112:114:void insert(int,java.lang.Object) -> b
    117:119:void swap(int,int) -> a
    122:123:boolean removeValue(java.lang.Object,boolean) -> b
    127:128:java.lang.Object removeIndex(int) -> b
    132:133:java.lang.Object pop() -> a
    137:139:void clear() -> d
    142:144:void sort() -> f
    147:149:void sort(java.util.Comparator) -> a
    152:154:void reverse() -> g
    157:159:void shuffle() -> h
    162:164:void truncate(int) -> e
com.badlogic.gdx.utils.Sort -> com.badlogic.gdx.utils.dc:
    com.badlogic.gdx.utils.Sort instance -> a
    com.badlogic.gdx.utils.TimSort timSort -> b
    com.badlogic.gdx.utils.ComparableTimSort comparableTimSort -> c
    31:33:void sort(com.badlogic.gdx.utils.Array) -> a
    36:38:void sort(java.lang.Object[]) -> a
    41:43:void sort$7ac2f2fc(java.lang.Object[],int) -> a
    46:48:void sort(com.badlogic.gdx.utils.Array,java.util.Comparator) -> a
    51:53:void sort(java.lang.Object[],java.util.Comparator) -> a
    56:58:void sort$6fa18035(java.lang.Object[],java.util.Comparator,int) -> a
    62:63:com.badlogic.gdx.utils.Sort instance() -> a
com.badlogic.gdx.utils.SortedIntList -> com.badlogic.gdx.utils.dd:
    com.badlogic.gdx.utils.SortedIntList$NodePool nodePool -> c
    com.badlogic.gdx.utils.SortedIntList$Iterator iterator -> d
    int size -> a
    com.badlogic.gdx.utils.SortedIntList$Node first -> b
    39:68:java.lang.Object insert(int,java.lang.Object) -> a
    76:86:java.lang.Object get(int) -> a
    91:95:void clear() -> a
    99:99:int size() -> b
    107:110:java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.SortedIntList$Iterator -> com.badlogic.gdx.utils.de:
    com.badlogic.gdx.utils.SortedIntList$Node position -> b
    com.badlogic.gdx.utils.SortedIntList$Node previousPosition -> c
    com.badlogic.gdx.utils.SortedIntList this$0 -> a
    119:119:boolean hasNext() -> hasNext
    124:126:com.badlogic.gdx.utils.SortedIntList$Node next() -> b
    132:146:void remove() -> remove
    149:151:com.badlogic.gdx.utils.SortedIntList$Iterator reset() -> a
    113:113:java.lang.Object next() -> next
com.badlogic.gdx.utils.SortedIntList$Node -> com.badlogic.gdx.utils.df:
    com.badlogic.gdx.utils.SortedIntList$Node p -> a
    com.badlogic.gdx.utils.SortedIntList$Node n -> b
    java.lang.Object value -> c
    int index -> d
com.badlogic.gdx.utils.SortedIntList$NodePool -> com.badlogic.gdx.utils.dg:
    169:169:com.badlogic.gdx.utils.SortedIntList$Node newObject() -> a
    173:178:com.badlogic.gdx.utils.SortedIntList$Node obtain(com.badlogic.gdx.utils.SortedIntList$Node,com.badlogic.gdx.utils.SortedIntList$Node,java.lang.Object,int) -> a
    166:166:java.lang.Object newObject() -> newObject
com.badlogic.gdx.utils.StringBuilder -> com.badlogic.gdx.utils.dh:
    int INITIAL_CAPACITY -> a
    char[] chars -> b
    int length -> c
    char[] digits -> d
    39:39:char[] getValue() -> a
    88:92:void enlargeBuffer(int) -> c
    95:103:void appendNull() -> b
    106:112:void append0(char[]) -> b
    116:129:void append0(char[],int,int) -> b
    132:136:void append0(char) -> b
    139:150:void append0(java.lang.String) -> b
    153:161:void append0(java.lang.CharSequence,int,int) -> a
    169:169:int capacity() -> c
    178:181:char charAt(int) -> charAt
    185:199:void delete0(int,int) -> a
    203:211:void deleteCharAt0(int) -> d
    220:224:void ensureCapacity(int) -> e
    236:240:void getChars(int,int,char[],int) -> a
    243:251:void insert0(int,char[]) -> a
    254:266:void insert0(int,char[],int,int) -> a
    270:277:void insert0(int,char) -> a
    280:291:void insert0(int,java.lang.String) -> a
    296:303:void insert0(int,java.lang.CharSequence,int,int) -> a
    309:309:int length() -> length
    313:324:void move(int,int) -> b
    327:353:void replace0(int,int,java.lang.String) -> a
    357:411:void reverse0() -> d
    419:423:void setCharAt(int,char) -> b
    432:443:void setLength(int) -> a
    451:459:java.lang.String substring(int) -> f
    470:478:java.lang.String substring(int,int) -> c
    486:487:java.lang.String toString() -> toString
    499:499:java.lang.CharSequence subSequence(int,int) -> subSequence
    510:510:int indexOf(java.lang.String) -> c
    522:553:int indexOf(java.lang.String,int) -> a
    565:565:int lastIndexOf(java.lang.String) -> d
    578:610:int lastIndexOf(java.lang.String,int) -> b
    618:623:void trimToSize() -> e
    634:637:int codePointAt(int) -> g
    649:652:int codePointBefore(int) -> h
    666:669:int codePointCount(int,int) -> d
    683:683:int offsetByCodePoints(int,int) -> e
    693:694:com.badlogic.gdx.utils.StringBuilder append(boolean) -> a
    704:705:com.badlogic.gdx.utils.StringBuilder append(char) -> a
    715:735:com.badlogic.gdx.utils.StringBuilder append(int) -> b
    744:773:com.badlogic.gdx.utils.StringBuilder append(long) -> a
    782:783:com.badlogic.gdx.utils.StringBuilder append(float) -> a
    793:794:com.badlogic.gdx.utils.StringBuilder append(double) -> a
    804:809:com.badlogic.gdx.utils.StringBuilder append(java.lang.Object) -> a
    817:818:com.badlogic.gdx.utils.StringBuilder append(java.lang.String) -> a
    828:829:com.badlogic.gdx.utils.StringBuilder append(char[]) -> a
    842:843:com.badlogic.gdx.utils.StringBuilder append(char[],int,int) -> a
    852:857:com.badlogic.gdx.utils.StringBuilder append(java.lang.CharSequence) -> a
    861:865:com.badlogic.gdx.utils.StringBuilder append(com.badlogic.gdx.utils.StringBuilder) -> a
    878:879:com.badlogic.gdx.utils.StringBuilder append(java.lang.CharSequence,int,int) -> b
    883:887:com.badlogic.gdx.utils.StringBuilder append(com.badlogic.gdx.utils.StringBuilder,int,int) -> a
    897:898:com.badlogic.gdx.utils.StringBuilder appendCodePoint(int) -> i
    909:910:com.badlogic.gdx.utils.StringBuilder delete(int,int) -> f
    920:921:com.badlogic.gdx.utils.StringBuilder deleteCharAt(int) -> j
    933:934:com.badlogic.gdx.utils.StringBuilder insert(int,boolean) -> a
    946:947:com.badlogic.gdx.utils.StringBuilder insert(int,char) -> c
    959:960:com.badlogic.gdx.utils.StringBuilder insert(int,int) -> g
    972:973:com.badlogic.gdx.utils.StringBuilder insert(int,long) -> a
    985:986:com.badlogic.gdx.utils.StringBuilder insert(int,float) -> a
    998:999:com.badlogic.gdx.utils.StringBuilder insert(int,double) -> a
    1011:1012:com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.Object) -> a
    1023:1024:com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.String) -> b
    1036:1037:com.badlogic.gdx.utils.StringBuilder insert(int,char[]) -> b
    1052:1053:com.badlogic.gdx.utils.StringBuilder insert(int,char[],int,int) -> b
    1066:1067:com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.CharSequence) -> a
    1083:1084:com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.CharSequence,int,int) -> b
    1097:1098:com.badlogic.gdx.utils.StringBuilder replace(int,int,java.lang.String) -> b
    1105:1106:com.badlogic.gdx.utils.StringBuilder reverse() -> f
    1110:1114:int hashCode() -> hashCode
    1118:1130:boolean equals(java.lang.Object) -> equals
    27:27:java.lang.Appendable append(char) -> append
    27:27:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    27:27:java.lang.Appendable append(java.lang.CharSequence) -> append
com.badlogic.gdx.utils.TimSort -> com.badlogic.gdx.utils.di:
    int MIN_MERGE -> a
    java.lang.Object[] a -> b
    java.util.Comparator c -> c
    int MIN_GALLOP -> d
    int minGallop -> e
    int INITIAL_TMP_STORAGE_LENGTH -> f
    java.lang.Object[] tmp -> g
    int tmpCount -> h
    int stackSize -> i
    int[] runBase -> j
    int[] runLen -> k
    boolean DEBUG -> l
    97:146:void doSort(java.lang.Object[],java.util.Comparator,int,int) -> a
    179:180:void sort(java.lang.Object[],java.util.Comparator) -> a
    183:227:void sort(java.lang.Object[],int,int,java.util.Comparator) -> a
    243:281:void binarySort(java.lang.Object[],int,int,int,java.util.Comparator) -> a
    304:317:int countRunAndMakeAscending(java.lang.Object[],int,int,java.util.Comparator) -> b
    326:332:void reverseRange(java.lang.Object[],int,int) -> a
    349:354:int minRunLength(int) -> a
    362:365:void pushRun(int,int) -> a
    374:385:void mergeCollapse() -> a
    389:394:void mergeForceCollapse() -> b
    405:446:void mergeAt(int) -> b
    463:511:int gallopLeft(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator) -> a
    528:576:int gallopRight(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator) -> b
    594:685:void mergeLo(int,int,int,int) -> a
    698:793:void mergeHi(int,int,int,int) -> b
    801:820:java.lang.Object[] ensureCapacity(int) -> c
    831:834:void rangeCheck$4868d30e(int,int) -> b
com.badlogic.gdx.utils.TimeUtils -> com.badlogic.gdx.utils.dj:
    24:24:long nanoTime() -> a
    29:29:long millis() -> b
com.badlogic.gdx.utils.Timer -> com.badlogic.gdx.utils.dk:
    com.badlogic.gdx.utils.Array instances -> a
    com.badlogic.gdx.utils.Timer instance -> b
    int CANCELLED -> c
    int FOREVER -> d
    com.badlogic.gdx.utils.Array tasks -> e
    66:67:void postTask(com.badlogic.gdx.utils.Timer$Task) -> a
    71:72:void scheduleTask(com.badlogic.gdx.utils.Timer$Task,float) -> b
    76:77:void scheduleTask(com.badlogic.gdx.utils.Timer$Task,float,float) -> b
    81:89:void scheduleTask(com.badlogic.gdx.utils.Timer$Task,float,float,int) -> a
    93:95:void stop() -> a
    100:104:void start() -> b
    109:113:void clear() -> c
    117:142:long update(long,long) -> a
    146:148:void wake() -> d
    154:155:void post(com.badlogic.gdx.utils.Timer$Task) -> b
    160:161:void schedule(com.badlogic.gdx.utils.Timer$Task,float) -> a
    166:167:void schedule(com.badlogic.gdx.utils.Timer$Task,float,float) -> a
    172:173:void schedule(com.badlogic.gdx.utils.Timer$Task,float,float,int) -> b
com.badlogic.gdx.utils.Timer$1 -> com.badlogic.gdx.utils.dl:
    30:44:void run() -> run
com.badlogic.gdx.utils.Timer$Task -> com.badlogic.gdx.utils.dm:
    long executeTimeMillis -> c
    long intervalMillis -> d
    int repeatCount -> e
    void run() -> run
    188:190:void cancel() -> a
    194:194:boolean isScheduled() -> b
com.badlogic.gdx.utils.XmlReader -> com.badlogic.gdx.utils.dn:
    com.badlogic.gdx.utils.Array elements -> f
    com.badlogic.gdx.utils.XmlReader$Element root -> g
    com.badlogic.gdx.utils.XmlReader$Element current -> h
    com.badlogic.gdx.utils.StringBuilder textBuffer -> i
    byte[] _xml_actions -> j
    byte[] _xml_key_offsets -> k
    char[] _xml_trans_keys -> l
    byte[] _xml_single_lengths -> m
    byte[] _xml_range_lengths -> n
    short[] _xml_index_offsets -> o
    byte[] _xml_indicies -> p
    byte[] _xml_trans_targs -> q
    byte[] _xml_trans_actions -> r
    int xml_start -> a
    int xml_first_final -> b
    int xml_error -> c
    int xml_en_elementBody -> d
    int xml_en_main -> e
    43:44:com.badlogic.gdx.utils.XmlReader$Element parse(java.lang.String) -> a
    48:60:com.badlogic.gdx.utils.XmlReader$Element parse(java.io.Reader) -> a
    64:64:com.badlogic.gdx.utils.XmlReader$Element parse(java.io.InputStream) -> a
    69:71:com.badlogic.gdx.utils.XmlReader$Element parse(com.badlogic.gdx.files.FileHandle) -> a
    76:321:com.badlogic.gdx.utils.XmlReader$Element parse$17989470(char[],int) -> a
    326:326:byte[] init__xml_actions_0() -> a
    332:332:byte[] init__xml_key_offsets_0() -> b
    339:339:char[] init__xml_trans_keys_0() -> c
    348:348:byte[] init__xml_single_lengths_0() -> d
    355:355:byte[] init__xml_range_lengths_0() -> e
    362:362:short[] init__xml_index_offsets_0() -> f
    369:369:byte[] init__xml_indicies_0() -> g
    379:379:byte[] init__xml_trans_targs_0() -> h
    387:387:byte[] init__xml_trans_actions_0() -> i
    403:408:void open(java.lang.String) -> b
    411:412:void attribute(java.lang.String,java.lang.String) -> a
    415:420:java.lang.String entity(java.lang.String) -> c
    424:426:void text(java.lang.String) -> d
    429:431:void close() -> j
com.badlogic.gdx.utils.XmlReader$Element -> com.badlogic.gdx.utils.do:
    java.lang.String name -> a
    com.badlogic.gdx.utils.ObjectMap attributes -> b
    com.badlogic.gdx.utils.Array children -> c
    java.lang.String text -> d
    com.badlogic.gdx.utils.XmlReader$Element parent -> e
    446:446:java.lang.String getName() -> a
    450:450:com.badlogic.gdx.utils.ObjectMap getAttributes() -> e
    455:458:java.lang.String getAttribute(java.lang.String) -> a
    462:465:java.lang.String getAttribute$7157d249(java.lang.String) -> b
    469:471:void setAttribute(java.lang.String,java.lang.String) -> a
    474:475:int getChildCount() -> b
    480:481:com.badlogic.gdx.utils.XmlReader$Element getChild(int) -> a
    485:487:void addChild(com.badlogic.gdx.utils.XmlReader$Element) -> a
    490:490:java.lang.String getText() -> c
    494:495:void setText(java.lang.String) -> c
    498:499:void removeChild(int) -> b
    502:503:void removeChild(com.badlogic.gdx.utils.XmlReader$Element) -> b
    506:507:void remove() -> f
    510:510:com.badlogic.gdx.utils.XmlReader$Element getParent() -> d
    514:514:java.lang.String toString() -> toString
    518:552:java.lang.String toString(java.lang.String) -> i
    558:563:com.badlogic.gdx.utils.XmlReader$Element getChildByName(java.lang.String) -> d
    569:576:com.badlogic.gdx.utils.XmlReader$Element getChildByNameRecursive(java.lang.String) -> j
    582:588:com.badlogic.gdx.utils.Array getChildrenByName(java.lang.String) -> e
    594:596:com.badlogic.gdx.utils.Array getChildrenByNameRecursively(java.lang.String) -> k
    600:606:void getChildrenByNameRecursively(java.lang.String,com.badlogic.gdx.utils.Array) -> a
    610:610:float getFloatAttribute(java.lang.String) -> l
    614:616:float getFloatAttribute$505d0a6f(java.lang.String) -> m
    621:621:int getIntAttribute(java.lang.String) -> f
    625:627:int getIntAttribute(java.lang.String,int) -> a
    632:632:boolean getBooleanAttribute(java.lang.String) -> n
    636:638:boolean getBooleanAttribute(java.lang.String,boolean) -> a
    644:646:java.lang.String get(java.lang.String) -> o
    652:660:java.lang.String get$7157d249(java.lang.String) -> g
    666:668:int getInt(java.lang.String) -> h
    674:676:int getInt(java.lang.String,int) -> b
    682:684:float getFloat(java.lang.String) -> p
    690:692:float getFloat(java.lang.String,float) -> a
    698:700:boolean getBoolean(java.lang.String) -> q
    706:708:boolean getBoolean(java.lang.String,boolean) -> b
com.badlogic.gdx.utils.XmlWriter -> com.badlogic.gdx.utils.dp:
    java.io.Writer writer -> b
    com.badlogic.gdx.utils.Array stack -> c
    java.lang.String currentElement -> d
    boolean indentNextClose -> e
    int indent -> a
    55:59:void indent() -> b
    62:67:com.badlogic.gdx.utils.XmlWriter element(java.lang.String) -> a
    71:71:com.badlogic.gdx.utils.XmlWriter element(java.lang.String,java.lang.Object) -> b
    75:80:boolean startElementContent() -> c
    84:90:com.badlogic.gdx.utils.XmlWriter attribute(java.lang.String,java.lang.Object) -> a
    94:103:com.badlogic.gdx.utils.XmlWriter text(java.lang.Object) -> a
    107:118:com.badlogic.gdx.utils.XmlWriter pop() -> a
    123:126:void close() -> close
    129:131:void write(char[],int,int) -> write
    134:135:void flush() -> flush
com.badlogic.gdx.utils.compression.CRC -> com.badlogic.gdx.utils.a.a:
    int[] Table -> a
    int _value -> b
    23:24:void Init() -> a
    27:29:void Update(byte[],int,int) -> a
    32:35:void Update(byte[]) -> a
    38:39:void UpdateByte(int) -> a
    42:42:int GetDigest() -> b
com.badlogic.gdx.utils.compression.ICodeProgress -> com.badlogic.gdx.utils.a.b:
    void SetProgress$2566ab5() -> a
com.badlogic.gdx.utils.compression.Lzma -> com.badlogic.gdx.utils.a.c:
    62:85:void compress(java.io.InputStream,java.io.OutputStream) -> a
    93:109:void decompress(java.io.InputStream,java.io.OutputStream) -> b
com.badlogic.gdx.utils.compression.Lzma$CommandLine -> com.badlogic.gdx.utils.a.d:
    int kEncode -> a
    int kDecode -> b
    int kBenchmak -> c
    int Command -> d
    int NumBenchmarkPasses -> e
    int DictionarySize -> f
    boolean DictionarySizeIsDefined -> g
    int Lc -> h
    int Lp -> i
    int Pb -> j
    int Fb -> k
    boolean FbIsDefined -> l
    boolean Eos -> m
    int Algorithm -> n
    int MatchFinder -> o
    java.lang.String InFile -> p
    java.lang.String OutFile -> q
com.badlogic.gdx.utils.compression.lz.BinTree -> com.badlogic.gdx.utils.a.a.a:
    int _cyclicBufferPos -> a
    int _cyclicBufferSize -> b
    int _matchMaxLen -> c
    int[] _son -> d
    int[] _hash -> e
    int _cutValue -> f
    int _hashMask -> g
    int _hashSizeSum -> h
    boolean HASH_ARRAY -> i
    int kHash2Size -> j
    int kHash3Size -> k
    int kBT2HashSize -> l
    int kStartMaxLen -> m
    int kHash3Offset -> n
    int kEmptyHashValue -> o
    int kMaxValForNormalize -> p
    int kNumHashDirectBytes -> q
    int kMinMatchCheck -> r
    int kFixHashSize -> s
    int[] CrcTable -> E
    34:44:void SetType(int) -> a
    47:52:void Init() -> a
    55:58:void MovePos() -> b
    61:89:boolean Create$3b4dfe47(int,int) -> a
    94:197:int GetMatches(int[]) -> a
    203:274:void Skip(int) -> b
    277:285:void NormalizeLinks(int[],int,int) -> a
    288:292:void Normalize() -> e
    295:296:void SetCutValue(int) -> e
com.badlogic.gdx.utils.compression.lz.InWindow -> com.badlogic.gdx.utils.a.a.b:
    byte[] _bufferBase -> t
    java.io.InputStream _stream -> u
    int _posLimit -> v
    boolean _streamEndWasReached -> w
    int _pointerToLastSafePosition -> x
    int _bufferOffset -> y
    int _blockSize -> z
    int _pos -> A
    int _keepSizeBefore -> B
    int _keepSizeAfter -> C
    int _streamPos -> D
    24:34:void MoveBlock() -> e
    37:52:void ReadBlock() -> f
    56:57:void Free() -> g
    60:69:void Create(int,int,int) -> b
    72:73:void SetStream(java.io.InputStream) -> a
    76:77:void ReleaseStream() -> c
    80:85:void Init() -> a
    88:94:void MovePos() -> b
    97:97:byte GetIndexByte(int) -> c
    102:110:int GetMatchLen(int,int,int) -> a
    114:114:int GetNumAvailableBytes() -> d
    118:122:void ReduceOffsets(int) -> d
com.badlogic.gdx.utils.compression.lz.OutWindow -> com.badlogic.gdx.utils.a.a.c:
    byte[] _buffer -> a
    int _pos -> b
    int _windowSize -> c
    int _streamPos -> d
    java.io.OutputStream _stream -> e
    15:19:void Create(int) -> a
    22:24:void SetStream(java.io.OutputStream) -> a
    27:29:void ReleaseStream() -> a
    32:36:void Init$1385ff() -> b
    39:44:void Flush() -> c
    47:54:void CopyBlock(int,int) -> a
    57:59:void PutByte(byte) -> a
    62:64:byte GetByte(int) -> b
com.badlogic.gdx.utils.compression.lzma.Base -> com.badlogic.gdx.utils.a.b.a:
    int kNumRepDistances -> a
    int kNumStates -> b
    int kNumPosSlotBits -> c
    int kDicLogSizeMin -> d
    int kNumLenToPosStatesBits -> e
    int kNumLenToPosStates -> f
    int kMatchMinLen -> g
    int kNumAlignBits -> h
    int kAlignTableSize -> i
    int kAlignMask -> j
    int kStartPosModelIndex -> k
    int kEndPosModelIndex -> l
    int kNumPosModels -> m
    int kNumFullDistances -> n
    int kNumLitPosStatesBitsEncodingMax -> o
    int kNumLitContextBitsMax -> p
    int kNumPosStatesBitsMax -> q
    int kNumPosStatesMax -> r
    int kNumPosStatesBitsEncodingMax -> s
    int kNumPosStatesEncodingMax -> t
    int kNumLowLenBits -> u
    int kNumMidLenBits -> v
    int kNumHighLenBits -> w
    int kNumLowLenSymbols -> x
    int kNumMidLenSymbols -> y
    int kNumLenSymbols -> z
    int kMatchMaxLen -> A
    10:10:int StateInit() -> a
    14:16:int StateUpdateChar(int) -> a
    20:20:int StateUpdateMatch(int) -> b
    24:24:int StateUpdateRep(int) -> c
    28:28:int StateUpdateShortRep(int) -> d
    32:32:boolean StateIsCharState(int) -> e
    46:48:int GetLenToPosState(int) -> f
com.badlogic.gdx.utils.compression.lzma.Decoder -> com.badlogic.gdx.utils.a.b.b:
    com.badlogic.gdx.utils.compression.lz.OutWindow m_OutWindow -> a
    com.badlogic.gdx.utils.compression.rangecoder.Decoder m_RangeDecoder -> b
    short[] m_IsMatchDecoders -> c
    short[] m_IsRepDecoders -> d
    short[] m_IsRepG0Decoders -> e
    short[] m_IsRepG1Decoders -> f
    short[] m_IsRepG2Decoders -> g
    short[] m_IsRep0LongDecoders -> h
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder[] m_PosSlotDecoder -> i
    short[] m_PosDecoders -> j
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder m_PosAlignDecoder -> k
    com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder m_LenDecoder -> l
    com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder m_RepLenDecoder -> m
    com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder m_LiteralDecoder -> n
    int m_DictionarySize -> o
    int m_DictionarySizeCheck -> p
    int m_PosStateMask -> q
    151:157:boolean SetDictionarySize(int) -> a
    161:167:boolean SetLcLpPb(int,int,int) -> a
    171:189:void Init() -> a
    192:276:boolean Code(java.io.InputStream,java.io.OutputStream,long) -> a
    280:290:boolean SetDecoderProperties(byte[]) -> a
com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder -> com.badlogic.gdx.utils.a.b.c:
    short[] m_Choice -> a
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder[] m_LowCoder -> b
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder[] m_MidCoder -> c
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder m_HighCoder -> d
    int m_NumPosStates -> e
    com.badlogic.gdx.utils.compression.lzma.Decoder this$0 -> f
    33:37:void Create(int) -> a
    40:46:void Init() -> a
    49:55:int Decode(com.badlogic.gdx.utils.compression.rangecoder.Decoder,int) -> a
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder -> com.badlogic.gdx.utils.a.b.d:
    com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2[] m_Coders -> a
    int m_NumPrevBits -> b
    int m_NumPosBits -> c
    int m_PosMask -> d
    com.badlogic.gdx.utils.compression.lzma.Decoder this$0 -> e
    99:107:void Create(int,int) -> a
    110:113:void Init() -> a
    116:116:com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2 GetDecoder(int,byte) -> a
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2 -> com.badlogic.gdx.utils.a.b.e:
    short[] m_Decoders -> a
    com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder this$1 -> b
    64:65:void Init() -> a
    68:72:byte DecodeNormal(com.badlogic.gdx.utils.compression.rangecoder.Decoder) -> a
    77:89:byte DecodeWithMatchByte(com.badlogic.gdx.utils.compression.rangecoder.Decoder,byte) -> a
com.badlogic.gdx.utils.compression.lzma.Encoder -> com.badlogic.gdx.utils.a.b.f:
    int EMatchFinderTypeBT2 -> a
    int EMatchFinderTypeBT4 -> b
    int kIfinityPrice -> c
    byte[] g_FastPos -> d
    int _state -> e
    byte _previousByte -> f
    int[] _repDistances -> g
    int kDefaultDictionaryLogSize -> h
    int kNumFastBytesDefault -> i
    int kNumLenSpecSymbols -> j
    int kNumOpts -> k
    com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal[] _optimum -> l
    com.badlogic.gdx.utils.compression.lz.BinTree _matchFinder -> m
    com.badlogic.gdx.utils.compression.rangecoder.Encoder _rangeEncoder -> n
    short[] _isMatch -> o
    short[] _isRep -> p
    short[] _isRepG0 -> q
    short[] _isRepG1 -> r
    short[] _isRepG2 -> s
    short[] _isRep0Long -> t
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder[] _posSlotEncoder -> u
    short[] _posEncoders -> v
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder _posAlignEncoder -> w
    com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder _lenEncoder -> x
    com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder _repMatchLenEncoder -> y
    com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder _literalEncoder -> z
    int[] _matchDistances -> A
    int _numFastBytes -> B
    int _longestMatchLength -> C
    int _numDistancePairs -> D
    int _additionalOffset -> E
    int _optimumEndIndex -> F
    int _optimumCurrentIndex -> G
    boolean _longestMatchWasFound -> H
    int[] _posSlotPrices -> I
    int[] _distancesPrices -> J
    int[] _alignPrices -> K
    int _alignPriceCount -> L
    int _distTableSize -> M
    int _posStateBits -> N
    int _posStateMask -> O
    int _numLiteralPosStateBits -> P
    int _numLiteralContextBits -> Q
    int _dictionarySize -> R
    int _dictionarySizePrev -> S
    int _numFastBytesPrev -> T
    long nowPos64 -> U
    boolean _finished -> V
    java.io.InputStream _inStream -> W
    int _matchFinderType -> X
    boolean _writeEndMark -> Y
    boolean _needReleaseMFStream -> Z
    int[] reps -> aa
    int[] repLens -> ab
    int backRes -> ac
    long[] processedInSize -> ad
    long[] processedOutSize -> ae
    boolean[] finished -> af
    int kPropSize -> ag
    byte[] properties -> ah
    int[] tempPrices -> ai
    int _matchPriceCount -> aj
    45:47:int GetPosSlot(int) -> d
    51:53:int GetPosSlot2(int) -> e
    61:65:void BaseInit() -> b
    345:358:void Create() -> c
    368:369:void SetWriteEndMarkerMode(boolean) -> b
    372:396:void Init() -> d
    399:408:int ReadMatchDistances() -> e
    412:416:void MovePos(int) -> f
    419:419:int GetRepLen1Price(int,int) -> a
    426:439:int GetPureRepPrice(int,int,int) -> b
    443:444:int GetRepPrice(int,int,int,int) -> a
    449:454:int GetPosLenPrice(int,int,int) -> c
    458:483:int Backward(int) -> g
    491:913:int GetOptimum(int) -> h
    917:917:boolean ChangePair(int,int) -> b
    922:936:void WriteEndMarker(int) -> i
    939:943:void Flush(int) -> j
    946:1078:void CodeOneBlock(long[],long[],boolean[]) -> a
    1082:1086:void ReleaseMFStream() -> f
    1089:1090:void SetOutStream(java.io.OutputStream) -> b
    1093:1094:void ReleaseOutStream() -> g
    1097:1099:void ReleaseStreams() -> h
    1102:1120:void SetStreams$40e92230(java.io.InputStream,java.io.OutputStream) -> b
    1128:1136:void Code$1a48d2a1(java.io.InputStream,java.io.OutputStream) -> a
    1148:1152:void WriteCoderProperties(java.io.OutputStream) -> a
    1158:1183:void FillDistancesPrices() -> i
    1186:1189:void FillAlignPrices() -> j
    1195:1195:boolean SetAlgorithm$134632() -> a
    1199:1206:boolean SetDictionarySize(int) -> a
    1210:1212:boolean SetNumFastBytes(int) -> b
    1216:1223:boolean SetMatchFinder(int) -> c
    1227:1233:boolean SetLcLpPb(int,int,int) -> a
    1237:1238:void SetEndMarkerMode(boolean) -> a
com.badlogic.gdx.utils.compression.lzma.Encoder$LenEncoder -> com.badlogic.gdx.utils.a.b.g:
    short[] _choice -> a
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder[] _lowCoder -> b
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder[] _midCoder -> c
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder _highCoder -> d
    com.badlogic.gdx.utils.compression.lzma.Encoder this$0 -> e
    171:178:void Init(int) -> a
    182:196:void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int,int) -> a
    199:214:void SetPrices(int,int,int[],int) -> a
com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder -> com.badlogic.gdx.utils.a.b.h:
    int[] _prices -> f
    int _tableSize -> g
    int[] _counters -> h
    com.badlogic.gdx.utils.compression.lzma.Encoder this$0 -> i
    225:226:void SetTableSize(int) -> c
    229:229:int GetPrice(int,int) -> a
    233:235:void UpdateTable(int) -> d
    238:240:void UpdateTables(int) -> b
    244:246:void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int,int) -> a
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder -> com.badlogic.gdx.utils.a.b.i:
    com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2[] m_Coders -> a
    int m_NumPrevBits -> b
    int m_NumPosBits -> c
    int m_PosMask -> d
    com.badlogic.gdx.utils.compression.lzma.Encoder this$0 -> e
    136:144:void Create(int,int) -> a
    147:150:void Init() -> a
    153:153:com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2 GetSubCoder(int,byte) -> a
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2 -> com.badlogic.gdx.utils.a.b.j:
    short[] m_Encoders -> a
    com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder this$1 -> b
    75:76:void Init() -> a
    79:85:void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,byte) -> a
    89:102:void EncodeMatched(com.badlogic.gdx.utils.compression.rangecoder.Encoder,byte,byte) -> a
    105:126:int GetPrice(boolean,byte,byte) -> a
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal -> com.badlogic.gdx.utils.a.b.k:
    int State -> a
    boolean Prev1IsChar -> b
    boolean Prev2 -> c
    int PosPrev2 -> d
    int BackPrev2 -> e
    int Price -> f
    int PosPrev -> g
    int BackPrev -> h
    int Backs0 -> i
    int Backs1 -> j
    int Backs2 -> k
    int Backs3 -> l
    com.badlogic.gdx.utils.compression.lzma.Encoder this$0 -> m
    270:272:void MakeAsChar() -> a
    275:278:void MakeAsShortRep() -> b
    281:281:boolean IsShortRep() -> c
com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder -> com.badlogic.gdx.utils.a.c.a:
    short[] Models -> a
    int NumBitLevels -> b
    29:30:void Init() -> a
    33:36:int Decode(com.badlogic.gdx.utils.compression.rangecoder.Decoder) -> a
    40:48:int ReverseDecode(com.badlogic.gdx.utils.compression.rangecoder.Decoder) -> b
    53:61:int ReverseDecode(short[],int,com.badlogic.gdx.utils.compression.rangecoder.Decoder,int) -> a
com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder -> com.badlogic.gdx.utils.a.c.b:
    short[] Models -> a
    int NumBitLevels -> b
    31:32:void Init() -> a
    35:42:void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int) -> a
    45:52:void ReverseEncode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int) -> b
    55:63:int GetPrice(int) -> a
    67:75:int ReverseGetPrice(int) -> b
    79:87:int ReverseGetPrice(short[],int,int,int) -> a
    92:99:void ReverseEncode(short[],int,com.badlogic.gdx.utils.compression.rangecoder.Encoder,int,int) -> a
com.badlogic.gdx.utils.compression.rangecoder.Decoder -> com.badlogic.gdx.utils.a.c.c:
    int kTopMask -> a
    int kNumBitModelTotalBits -> b
    int kBitModelTotal -> c
    int kNumMoveBits -> d
    int Range -> e
    int Code -> f
    java.io.InputStream Stream -> g
    34:35:void SetStream(java.io.InputStream) -> a
    38:39:void ReleaseStream() -> a
    42:46:void Init() -> b
    49:61:int DecodeDirectBits(int) -> a
    65:83:int DecodeBit(short[],int) -> a
    88:90:void InitBitModels(short[]) -> a
com.badlogic.gdx.utils.compression.rangecoder.Encoder -> com.badlogic.gdx.utils.a.c.d:
    int kTopMask -> a
    int kNumBitModelTotalBits -> b
    int kBitModelTotal -> c
    int kNumMoveBits -> d
    java.io.OutputStream Stream -> e
    long Low -> f
    int Range -> g
    int _cacheSize -> h
    int _cache -> i
    long _position -> j
    int kNumMoveReducingBits -> k
    int kNumBitPriceShiftBits -> l
    int[] ProbPrices -> m
    38:39:void SetStream(java.io.OutputStream) -> a
    42:43:void ReleaseStream() -> a
    46:51:void Init() -> b
    54:56:void FlushData() -> c
    59:60:void FlushStream() -> d
    63:75:void ShiftLow() -> f
    78:86:void EncodeDirectBits(int,int) -> a
    89:89:long GetProcessedSizeAdd() -> e
    96:98:void InitBitModels(short[]) -> a
    101:115:void Encode(short[],int,int) -> a
    130:130:int GetPrice(int,int) -> b
    134:134:int GetPrice0(int) -> a
    138:138:int GetPrice1(int) -> b
com.esotericsoftware.tablelayout.BaseTableLayout -> com.a.a.a:
    int CENTER -> c
    int TOP -> d
    int BOTTOM -> e
    int LEFT -> f
    int RIGHT -> g
    com.esotericsoftware.tablelayout.Toolkit toolkit -> h
    java.lang.Object table -> i
    int columns -> a
    int rows -> b
    java.util.ArrayList cells -> p
    com.esotericsoftware.tablelayout.Cell cellDefaults -> q
    java.util.ArrayList columnDefaults -> r
    com.esotericsoftware.tablelayout.Cell rowDefaults -> s
    boolean sizeInvalid -> t
    float[] columnMinWidth -> u
    float[] rowMinHeight -> v
    float[] columnPrefWidth -> w
    float[] rowPrefHeight -> x
    float tableMinWidth -> y
    float tableMinHeight -> z
    float tablePrefWidth -> A
    float tablePrefHeight -> B
    float[] columnWidth -> C
    float[] rowHeight -> D
    float[] expandWidth -> E
    float[] expandHeight -> F
    float[] columnWeightedWidth -> G
    float[] rowWeightedHeight -> H
    com.esotericsoftware.tablelayout.Value padTop -> j
    com.esotericsoftware.tablelayout.Value padLeft -> k
    com.esotericsoftware.tablelayout.Value padBottom -> l
    com.esotericsoftware.tablelayout.Value padRight -> m
    int align -> n
    com.esotericsoftware.tablelayout.BaseTableLayout$Debug debug -> o
    79:80:void invalidate() -> c
    void invalidateHierarchy() -> b
    87:123:com.esotericsoftware.tablelayout.Cell add(java.lang.Object) -> a
    129:131:com.esotericsoftware.tablelayout.Cell row() -> d
    135:145:void endRow() -> a
    150:160:com.esotericsoftware.tablelayout.Cell columnDefaults(int) -> a
    166:176:void reset() -> e
    180:189:void clear() -> f
    193:197:com.esotericsoftware.tablelayout.Cell getCell(java.lang.Object) -> b
    202:202:java.util.List getCells() -> g
    206:207:void setToolkit(com.esotericsoftware.tablelayout.Toolkit) -> a
    211:211:java.lang.Object getTable() -> h
    216:217:void setTable(java.lang.Object) -> c
    221:222:float getMinWidth() -> i
    227:228:float getMinHeight() -> j
    233:234:float getPrefWidth() -> k
    239:240:float getPrefHeight() -> l
    245:245:com.esotericsoftware.tablelayout.Cell defaults() -> m
    250:255:com.esotericsoftware.tablelayout.BaseTableLayout pad$7ec84e0b() -> n
    259:264:com.esotericsoftware.tablelayout.BaseTableLayout pad(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value) -> a
    269:271:com.esotericsoftware.tablelayout.BaseTableLayout padTop(com.esotericsoftware.tablelayout.Value) -> a
    276:278:com.esotericsoftware.tablelayout.BaseTableLayout padLeft(com.esotericsoftware.tablelayout.Value) -> b
    283:285:com.esotericsoftware.tablelayout.BaseTableLayout padBottom(com.esotericsoftware.tablelayout.Value) -> c
    290:292:com.esotericsoftware.tablelayout.BaseTableLayout padRight(com.esotericsoftware.tablelayout.Value) -> d
    297:302:com.esotericsoftware.tablelayout.BaseTableLayout pad(float) -> a
    306:311:com.esotericsoftware.tablelayout.BaseTableLayout pad(float,float,float,float) -> a
    316:318:com.esotericsoftware.tablelayout.BaseTableLayout padTop(float) -> b
    323:325:com.esotericsoftware.tablelayout.BaseTableLayout padLeft(float) -> c
    330:332:com.esotericsoftware.tablelayout.BaseTableLayout padBottom(float) -> d
    337:339:com.esotericsoftware.tablelayout.BaseTableLayout padRight(float) -> e
    345:346:com.esotericsoftware.tablelayout.BaseTableLayout align(int) -> b
    351:352:com.esotericsoftware.tablelayout.BaseTableLayout center() -> o
    357:359:com.esotericsoftware.tablelayout.BaseTableLayout top() -> p
    364:366:com.esotericsoftware.tablelayout.BaseTableLayout left() -> q
    371:373:com.esotericsoftware.tablelayout.BaseTableLayout bottom() -> r
    378:380:com.esotericsoftware.tablelayout.BaseTableLayout right() -> s
    385:387:com.esotericsoftware.tablelayout.BaseTableLayout debug() -> t
    392:394:com.esotericsoftware.tablelayout.BaseTableLayout debugTable() -> u
    399:401:com.esotericsoftware.tablelayout.BaseTableLayout debugCell() -> v
    406:408:com.esotericsoftware.tablelayout.BaseTableLayout debugWidget() -> w
    413:418:com.esotericsoftware.tablelayout.BaseTableLayout debug(com.esotericsoftware.tablelayout.BaseTableLayout$Debug) -> a
    422:422:com.esotericsoftware.tablelayout.BaseTableLayout$Debug getDebug() -> x
    426:426:com.esotericsoftware.tablelayout.Value getPadTopValue() -> y
    430:430:float getPadTop() -> z
    434:434:com.esotericsoftware.tablelayout.Value getPadLeftValue() -> A
    438:438:float getPadLeft() -> B
    442:442:com.esotericsoftware.tablelayout.Value getPadBottomValue() -> C
    446:446:float getPadBottom() -> D
    450:450:com.esotericsoftware.tablelayout.Value getPadRightValue() -> E
    454:454:float getPadRight() -> F
    458:458:int getAlign() -> G
    463:476:int getRow(float) -> f
    480:483:float[] ensureSize(float[],int) -> a
    487:487:float w(com.esotericsoftware.tablelayout.Value) -> e
    491:491:float h(com.esotericsoftware.tablelayout.Value) -> f
    495:495:float w(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Cell) -> a
    499:499:float h(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Cell) -> b
    503:662:void computeSize() -> H
    667:893:void layout$4098370b(float,float) -> a
com.esotericsoftware.tablelayout.BaseTableLayout$Debug -> com.a.a.b:
    com.esotericsoftware.tablelayout.BaseTableLayout$Debug none -> a
    com.esotericsoftware.tablelayout.BaseTableLayout$Debug all -> b
    com.esotericsoftware.tablelayout.BaseTableLayout$Debug table -> c
    com.esotericsoftware.tablelayout.BaseTableLayout$Debug cell -> d
    com.esotericsoftware.tablelayout.BaseTableLayout$Debug widget -> e
    com.esotericsoftware.tablelayout.BaseTableLayout$Debug[] $VALUES -> f
    46:46:com.esotericsoftware.tablelayout.BaseTableLayout$Debug[] values() -> values
    46:46:com.esotericsoftware.tablelayout.BaseTableLayout$Debug valueOf(java.lang.String) -> valueOf
com.esotericsoftware.tablelayout.Cell -> com.a.a.c:
    com.esotericsoftware.tablelayout.Value minWidth -> a
    com.esotericsoftware.tablelayout.Value minHeight -> b
    com.esotericsoftware.tablelayout.Value prefWidth -> c
    com.esotericsoftware.tablelayout.Value prefHeight -> d
    com.esotericsoftware.tablelayout.Value maxWidth -> e
    com.esotericsoftware.tablelayout.Value maxHeight -> f
    com.esotericsoftware.tablelayout.Value spaceTop -> g
    com.esotericsoftware.tablelayout.Value spaceLeft -> h
    com.esotericsoftware.tablelayout.Value spaceBottom -> i
    com.esotericsoftware.tablelayout.Value spaceRight -> j
    com.esotericsoftware.tablelayout.Value padTop -> k
    com.esotericsoftware.tablelayout.Value padLeft -> l
    com.esotericsoftware.tablelayout.Value padBottom -> m
    com.esotericsoftware.tablelayout.Value padRight -> n
    java.lang.Float fillX -> o
    java.lang.Float fillY -> p
    java.lang.Integer align -> q
    java.lang.Integer expandX -> r
    java.lang.Integer expandY -> s
    java.lang.Boolean ignore -> t
    java.lang.Integer colspan -> u
    java.lang.Boolean uniformX -> v
    java.lang.Boolean uniformY -> w
    java.lang.Object widget -> x
    float widgetX -> y
    float widgetY -> z
    float widgetWidth -> A
    float widgetHeight -> B
    com.esotericsoftware.tablelayout.BaseTableLayout layout -> K
    boolean endRow -> C
    int column -> D
    int row -> E
    int cellAboveIndex -> F
    float computedPadTop -> G
    float computedPadLeft -> H
    float computedPadBottom -> I
    float computedPadRight -> J
    64:87:void set(com.esotericsoftware.tablelayout.Cell) -> a
    90:114:void merge(com.esotericsoftware.tablelayout.Cell) -> b
    118:119:com.esotericsoftware.tablelayout.Cell setWidget(java.lang.Object) -> a
    124:124:java.lang.Object getWidget() -> a
    129:129:boolean hasWidget() -> j
    134:140:com.esotericsoftware.tablelayout.Cell size(com.esotericsoftware.tablelayout.Value) -> a
    145:151:com.esotericsoftware.tablelayout.Cell size(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value) -> a
    156:157:com.esotericsoftware.tablelayout.Cell size(float) -> f
    162:163:com.esotericsoftware.tablelayout.Cell size(float,float) -> a
    168:171:com.esotericsoftware.tablelayout.Cell width(com.esotericsoftware.tablelayout.Value) -> b
    176:177:com.esotericsoftware.tablelayout.Cell width(float) -> g
    182:185:com.esotericsoftware.tablelayout.Cell height(com.esotericsoftware.tablelayout.Value) -> c
    190:191:com.esotericsoftware.tablelayout.Cell height(float) -> h
    196:198:com.esotericsoftware.tablelayout.Cell minSize(com.esotericsoftware.tablelayout.Value) -> d
    203:205:com.esotericsoftware.tablelayout.Cell minSize(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value) -> b
    209:210:com.esotericsoftware.tablelayout.Cell minWidth(com.esotericsoftware.tablelayout.Value) -> e
    214:215:com.esotericsoftware.tablelayout.Cell minHeight(com.esotericsoftware.tablelayout.Value) -> f
    220:222:com.esotericsoftware.tablelayout.Cell minSize(float) -> i
    227:229:com.esotericsoftware.tablelayout.Cell minSize(float,float) -> b
    233:234:com.esotericsoftware.tablelayout.Cell minWidth(float) -> j
    238:239:com.esotericsoftware.tablelayout.Cell minHeight(float) -> k
    244:246:com.esotericsoftware.tablelayout.Cell prefSize(com.esotericsoftware.tablelayout.Value) -> g
    251:253:com.esotericsoftware.tablelayout.Cell prefSize(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value) -> c
    257:258:com.esotericsoftware.tablelayout.Cell prefWidth(com.esotericsoftware.tablelayout.Value) -> h
    262:263:com.esotericsoftware.tablelayout.Cell prefHeight(com.esotericsoftware.tablelayout.Value) -> i
    268:270:com.esotericsoftware.tablelayout.Cell prefSize(float,float) -> c
    275:277:com.esotericsoftware.tablelayout.Cell prefSize(float) -> l
    281:282:com.esotericsoftware.tablelayout.Cell prefWidth(float) -> m
    286:287:com.esotericsoftware.tablelayout.Cell prefHeight(float) -> n
    292:294:com.esotericsoftware.tablelayout.Cell maxSize(com.esotericsoftware.tablelayout.Value) -> j
    299:301:com.esotericsoftware.tablelayout.Cell maxSize(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value) -> d
    305:306:com.esotericsoftware.tablelayout.Cell maxWidth(com.esotericsoftware.tablelayout.Value) -> k
    310:311:com.esotericsoftware.tablelayout.Cell maxHeight(com.esotericsoftware.tablelayout.Value) -> l
    316:318:com.esotericsoftware.tablelayout.Cell maxSize(float) -> o
    323:325:com.esotericsoftware.tablelayout.Cell maxSize(float,float) -> d
    329:330:com.esotericsoftware.tablelayout.Cell maxWidth(float) -> p
    334:335:com.esotericsoftware.tablelayout.Cell maxHeight(float) -> q
    340:344:com.esotericsoftware.tablelayout.Cell space(com.esotericsoftware.tablelayout.Value) -> m
    348:352:com.esotericsoftware.tablelayout.Cell space(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value) -> a
    356:357:com.esotericsoftware.tablelayout.Cell spaceTop(com.esotericsoftware.tablelayout.Value) -> n
    361:362:com.esotericsoftware.tablelayout.Cell spaceLeft(com.esotericsoftware.tablelayout.Value) -> o
    366:367:com.esotericsoftware.tablelayout.Cell spaceBottom(com.esotericsoftware.tablelayout.Value) -> p
    371:372:com.esotericsoftware.tablelayout.Cell spaceRight(com.esotericsoftware.tablelayout.Value) -> q
    377:383:com.esotericsoftware.tablelayout.Cell space(float) -> a
    387:395:com.esotericsoftware.tablelayout.Cell space(float,float,float,float) -> a
    399:401:com.esotericsoftware.tablelayout.Cell spaceTop(float) -> r
    405:407:com.esotericsoftware.tablelayout.Cell spaceLeft(float) -> s
    411:413:com.esotericsoftware.tablelayout.Cell spaceBottom(float) -> t
    417:419:com.esotericsoftware.tablelayout.Cell spaceRight(float) -> u
    424:428:com.esotericsoftware.tablelayout.Cell pad(com.esotericsoftware.tablelayout.Value) -> r
    432:436:com.esotericsoftware.tablelayout.Cell pad(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value) -> b
    440:441:com.esotericsoftware.tablelayout.Cell padTop(com.esotericsoftware.tablelayout.Value) -> s
    445:446:com.esotericsoftware.tablelayout.Cell padLeft(com.esotericsoftware.tablelayout.Value) -> t
    450:451:com.esotericsoftware.tablelayout.Cell padBottom(com.esotericsoftware.tablelayout.Value) -> u
    455:456:com.esotericsoftware.tablelayout.Cell padRight(com.esotericsoftware.tablelayout.Value) -> v
    461:466:com.esotericsoftware.tablelayout.Cell pad(float) -> v
    470:474:com.esotericsoftware.tablelayout.Cell pad(float,float,float,float) -> b
    478:479:com.esotericsoftware.tablelayout.Cell padTop(float) -> w
    483:484:com.esotericsoftware.tablelayout.Cell padLeft(float) -> x
    488:489:com.esotericsoftware.tablelayout.Cell padBottom(float) -> y
    493:494:com.esotericsoftware.tablelayout.Cell padRight(float) -> z
    499:501:com.esotericsoftware.tablelayout.Cell fill() -> b
    506:507:com.esotericsoftware.tablelayout.Cell fillX() -> k
    512:513:com.esotericsoftware.tablelayout.Cell fillY() -> l
    517:519:com.esotericsoftware.tablelayout.Cell fill(java.lang.Float,java.lang.Float) -> a
    524:526:com.esotericsoftware.tablelayout.Cell fill(boolean,boolean) -> a
    531:533:com.esotericsoftware.tablelayout.Cell fill(boolean) -> a
    539:540:com.esotericsoftware.tablelayout.Cell align(java.lang.Integer) -> a
    545:546:com.esotericsoftware.tablelayout.Cell center() -> m
    551:557:com.esotericsoftware.tablelayout.Cell top() -> n
    562:568:com.esotericsoftware.tablelayout.Cell left() -> o
    573:579:com.esotericsoftware.tablelayout.Cell bottom() -> p
    584:590:com.esotericsoftware.tablelayout.Cell right() -> q
    595:597:com.esotericsoftware.tablelayout.Cell expand() -> c
    602:603:com.esotericsoftware.tablelayout.Cell expandX() -> r
    608:609:com.esotericsoftware.tablelayout.Cell expandY() -> s
    613:615:com.esotericsoftware.tablelayout.Cell expand(java.lang.Integer,java.lang.Integer) -> a
    620:622:com.esotericsoftware.tablelayout.Cell expand(boolean,boolean) -> b
    626:627:com.esotericsoftware.tablelayout.Cell ignore(java.lang.Boolean) -> a
    632:633:com.esotericsoftware.tablelayout.Cell ignore() -> t
    637:637:boolean getIgnore() -> d
    641:642:com.esotericsoftware.tablelayout.Cell colspan(java.lang.Integer) -> b
    647:649:com.esotericsoftware.tablelayout.Cell uniform() -> u
    654:655:com.esotericsoftware.tablelayout.Cell uniformX() -> v
    660:661:com.esotericsoftware.tablelayout.Cell uniformY() -> w
    665:667:com.esotericsoftware.tablelayout.Cell uniform(java.lang.Boolean,java.lang.Boolean) -> a
    671:671:float getWidgetX() -> e
    675:676:void setWidgetX(float) -> b
    679:679:float getWidgetY() -> f
    683:684:void setWidgetY(float) -> c
    687:687:float getWidgetWidth() -> g
    691:692:void setWidgetWidth(float) -> d
    695:695:float getWidgetHeight() -> h
    699:700:void setWidgetHeight(float) -> e
    703:703:int getColumn() -> x
    707:707:int getRow() -> y
    712:712:com.esotericsoftware.tablelayout.Value getMinWidthValue() -> z
    716:716:float getMinWidth() -> A
    721:721:com.esotericsoftware.tablelayout.Value getMinHeightValue() -> B
    725:725:float getMinHeight() -> C
    730:730:com.esotericsoftware.tablelayout.Value getPrefWidthValue() -> D
    734:734:float getPrefWidth() -> E
    739:739:com.esotericsoftware.tablelayout.Value getPrefHeightValue() -> F
    743:743:float getPrefHeight() -> G
    748:748:com.esotericsoftware.tablelayout.Value getMaxWidthValue() -> H
    752:752:float getMaxWidth() -> I
    757:757:com.esotericsoftware.tablelayout.Value getMaxHeightValue() -> J
    761:761:float getMaxHeight() -> K
    766:766:com.esotericsoftware.tablelayout.Value getSpaceTopValue() -> L
    770:770:float getSpaceTop() -> M
    775:775:com.esotericsoftware.tablelayout.Value getSpaceLeftValue() -> N
    779:779:float getSpaceLeft() -> O
    784:784:com.esotericsoftware.tablelayout.Value getSpaceBottomValue() -> P
    788:788:float getSpaceBottom() -> Q
    793:793:com.esotericsoftware.tablelayout.Value getSpaceRightValue() -> R
    797:797:float getSpaceRight() -> S
    802:802:com.esotericsoftware.tablelayout.Value getPadTopValue() -> T
    806:806:float getPadTop() -> U
    811:811:com.esotericsoftware.tablelayout.Value getPadLeftValue() -> V
    815:815:float getPadLeft() -> W
    820:820:com.esotericsoftware.tablelayout.Value getPadBottomValue() -> X
    824:824:float getPadBottom() -> Y
    829:829:com.esotericsoftware.tablelayout.Value getPadRightValue() -> Z
    833:833:float getPadRight() -> aa
    838:838:java.lang.Float getFillX() -> ab
    843:843:java.lang.Float getFillY() -> ac
    848:848:java.lang.Integer getAlign() -> ad
    853:853:java.lang.Integer getExpandX() -> ae
    858:858:java.lang.Integer getExpandY() -> af
    863:863:java.lang.Integer getColspan() -> ag
    868:868:java.lang.Boolean getUniformX() -> ah
    873:873:java.lang.Boolean getUniformY() -> ai
    878:878:boolean isEndRow() -> aj
    883:883:float getComputedPadTop() -> ak
    888:888:float getComputedPadLeft() -> al
    893:893:float getComputedPadBottom() -> am
    898:898:float getComputedPadRight() -> an
    902:902:com.esotericsoftware.tablelayout.Cell row() -> ao
    906:906:com.esotericsoftware.tablelayout.BaseTableLayout getLayout() -> i
    910:932:com.esotericsoftware.tablelayout.Cell defaults(com.esotericsoftware.tablelayout.BaseTableLayout) -> a
com.esotericsoftware.tablelayout.Toolkit -> com.a.a.d:
    com.esotericsoftware.tablelayout.Toolkit instance -> b
    void addChild(java.lang.Object,java.lang.Object) -> b
    void removeChild(java.lang.Object,java.lang.Object) -> a
    float getMinWidth(java.lang.Object) -> h
    float getMinHeight(java.lang.Object) -> g
    float getPrefWidth(java.lang.Object) -> f
    float getPrefHeight(java.lang.Object) -> e
    float getMaxWidth(java.lang.Object) -> d
    float getMaxHeight(java.lang.Object) -> c
    float getWidth(java.lang.Object) -> b
    float getHeight(java.lang.Object) -> a
    void clearDebugRectangles(com.esotericsoftware.tablelayout.BaseTableLayout) -> a
    void addDebugRectangle(com.esotericsoftware.tablelayout.BaseTableLayout,com.esotericsoftware.tablelayout.BaseTableLayout$Debug,float,float,float,float) -> a
    65:69:void setWidget(com.esotericsoftware.tablelayout.BaseTableLayout,com.esotericsoftware.tablelayout.Cell,java.lang.Object) -> a
    76:76:float width(float) -> a
    84:84:float height(float) -> b
com.esotericsoftware.tablelayout.Value -> com.a.a.e:
    com.esotericsoftware.tablelayout.Value zero -> a
    com.esotericsoftware.tablelayout.Value minWidth -> b
    com.esotericsoftware.tablelayout.Value minHeight -> c
    com.esotericsoftware.tablelayout.Value prefWidth -> d
    com.esotericsoftware.tablelayout.Value prefHeight -> e
    com.esotericsoftware.tablelayout.Value maxWidth -> f
    com.esotericsoftware.tablelayout.Value maxHeight -> g
    float get(java.lang.Object) -> a
    float get(com.esotericsoftware.tablelayout.Cell) -> a
    43:43:float width(java.lang.Object) -> b
    48:48:float height(java.lang.Object) -> c
    53:53:float width(com.esotericsoftware.tablelayout.Cell) -> b
    58:58:float height(com.esotericsoftware.tablelayout.Cell) -> c
    172:172:com.esotericsoftware.tablelayout.Value percentWidth(float) -> a
    181:181:com.esotericsoftware.tablelayout.Value percentHeight(float) -> b
    190:190:com.esotericsoftware.tablelayout.Value percentWidth(float,java.lang.Object) -> a
    203:203:com.esotericsoftware.tablelayout.Value percentHeight(float,java.lang.Object) -> b
com.esotericsoftware.tablelayout.Value$1 -> com.a.a.f:
    64:64:float get(com.esotericsoftware.tablelayout.Cell) -> a
    68:68:float get(java.lang.Object) -> a
com.esotericsoftware.tablelayout.Value$10 -> com.a.a.g:
    java.lang.Object val$widget -> h
    float val$percent -> i
    192:192:float get(com.esotericsoftware.tablelayout.Cell) -> a
    196:196:float get(java.lang.Object) -> a
com.esotericsoftware.tablelayout.Value$11 -> com.a.a.h:
    java.lang.Object val$widget -> h
    float val$percent -> i
    205:205:float get(java.lang.Object) -> a
com.esotericsoftware.tablelayout.Value$2 -> com.a.a.i:
    113:116:float get(com.esotericsoftware.tablelayout.Cell) -> a
com.esotericsoftware.tablelayout.Value$3 -> com.a.a.j:
    123:126:float get(com.esotericsoftware.tablelayout.Cell) -> a
com.esotericsoftware.tablelayout.Value$4 -> com.a.a.k:
    133:136:float get(com.esotericsoftware.tablelayout.Cell) -> a
com.esotericsoftware.tablelayout.Value$5 -> com.a.a.l:
    143:146:float get(com.esotericsoftware.tablelayout.Cell) -> a
com.esotericsoftware.tablelayout.Value$6 -> com.a.a.m:
    153:156:float get(com.esotericsoftware.tablelayout.Cell) -> a
com.esotericsoftware.tablelayout.Value$7 -> com.a.a.n:
    163:166:float get(com.esotericsoftware.tablelayout.Cell) -> a
com.esotericsoftware.tablelayout.Value$8 -> com.a.a.o:
    float val$percent -> h
    174:174:float get(java.lang.Object) -> a
com.esotericsoftware.tablelayout.Value$9 -> com.a.a.p:
    float val$percent -> h
    183:183:float get(java.lang.Object) -> a
com.esotericsoftware.tablelayout.Value$CellValue -> com.a.a.q:
    76:76:float get(java.lang.Object) -> a
com.esotericsoftware.tablelayout.Value$FixedValue -> com.a.a.r:
    float value -> h
    98:99:void set(float) -> a
    102:102:float get(java.lang.Object) -> a
    106:106:float get(com.esotericsoftware.tablelayout.Cell) -> a
com.esotericsoftware.tablelayout.Value$TableValue -> com.a.a.s:
    84:84:float get(com.esotericsoftware.tablelayout.Cell) -> a
com.jamiltron.homunculus.Animation -> com.jamiltron.homunculus.a:
    com.badlogic.gdx.graphics.g2d.TextureRegion[] frames -> a
    float duration -> b
    15:22:com.badlogic.gdx.graphics.g2d.TextureRegion getFrame(float,boolean) -> a
com.jamiltron.homunculus.Assets -> com.jamiltron.homunculus.b:
    java.lang.String path -> br
    java.lang.String highScoresPath -> bs
    java.lang.String settingsPath -> bt
    int TOUCH_BOX -> a
    com.badlogic.gdx.graphics.g2d.TextureAtlas menuAtlas -> bu
    com.badlogic.gdx.graphics.g2d.TextureAtlas gameAtlas -> bv
    int wizardFrames -> b
    float wizardTime -> c
    com.badlogic.gdx.audio.Music titleMusic -> d
    com.badlogic.gdx.audio.Music levelMusic -> e
    com.badlogic.gdx.audio.Sound drop -> f
    com.badlogic.gdx.audio.Sound match -> g
    com.badlogic.gdx.audio.Sound selectMove -> h
    com.badlogic.gdx.audio.Sound selectEnter -> i
    com.badlogic.gdx.audio.Sound rotate -> j
    com.badlogic.gdx.graphics.g2d.TextureRegion startScreenBackground -> k
    com.badlogic.gdx.graphics.g2d.TextureRegion startScreenStretch -> l
    com.badlogic.gdx.graphics.g2d.TextureRegion startScreenTop -> m
    com.badlogic.gdx.graphics.g2d.TextureRegion pressAnyKeyGame -> n
    com.badlogic.gdx.graphics.g2d.TextureRegion tapScreenGame -> o
    com.badlogic.gdx.graphics.g2d.TextureRegion toContinueGame -> p
    com.badlogic.gdx.graphics.g2d.TextureRegion leftArrowMenu -> q
    com.badlogic.gdx.graphics.g2d.TextureRegion leftArrowGame -> r
    com.badlogic.gdx.graphics.g2d.TextureRegion rightArrowMenu -> s
    com.badlogic.gdx.graphics.g2d.TextureRegion rightArrowGame -> t
    com.badlogic.gdx.graphics.g2d.TextureRegion rotrArrowGame -> u
    com.badlogic.gdx.graphics.g2d.TextureRegion downArrowGame -> v
    com.badlogic.gdx.graphics.g2d.TextureRegion playGameBackground -> w
    com.badlogic.gdx.graphics.g2d.TextureRegion wallScreenStretch -> x
    com.badlogic.gdx.graphics.g2d.TextureRegion gameScreenStretch -> y
    com.badlogic.gdx.graphics.g2d.TextureRegion pauseBackground -> z
    com.badlogic.gdx.graphics.g2d.TextureRegion gameOverBackground -> A
    com.badlogic.gdx.graphics.g2d.TextureRegion gameOver -> B
    com.badlogic.gdx.graphics.g2d.TextureRegion enterYour -> C
    com.badlogic.gdx.graphics.g2d.TextureRegion name -> D
    com.badlogic.gdx.graphics.g2d.TextureRegion highScore -> E
    com.badlogic.gdx.graphics.g2d.TextureRegion complete -> F
    com.badlogic.gdx.graphics.g2d.TextureRegion justinHamilton -> G
    com.badlogic.gdx.graphics.g2d.TextureRegion donnaAlmendrala -> H
    com.badlogic.gdx.graphics.g2d.TextureRegion luckyLion -> I
    com.badlogic.gdx.graphics.g2d.TextureRegion programming -> J
    com.badlogic.gdx.graphics.g2d.TextureRegion art -> K
    com.badlogic.gdx.graphics.g2d.TextureRegion paused -> L
    com.badlogic.gdx.graphics.g2d.TextureRegion startW -> M
    com.badlogic.gdx.graphics.g2d.TextureRegion startB -> N
    com.badlogic.gdx.graphics.g2d.TextureRegion highScoresW -> O
    com.badlogic.gdx.graphics.g2d.TextureRegion highScoresB -> P
    com.badlogic.gdx.graphics.g2d.TextureRegion creditsW -> Q
    com.badlogic.gdx.graphics.g2d.TextureRegion creditsB -> R
    com.badlogic.gdx.graphics.g2d.TextureRegion quitW -> S
    com.badlogic.gdx.graphics.g2d.TextureRegion quitB -> T
    com.badlogic.gdx.graphics.g2d.TextureRegion settingsText -> U
    com.badlogic.gdx.graphics.g2d.TextureRegion instructionsW -> V
    com.badlogic.gdx.graphics.g2d.TextureRegion instructionsB -> W
    com.badlogic.gdx.graphics.g2d.TextureRegion slowW -> X
    com.badlogic.gdx.graphics.g2d.TextureRegion slowB -> Y
    com.badlogic.gdx.graphics.g2d.TextureRegion medW -> Z
    com.badlogic.gdx.graphics.g2d.TextureRegion medB -> aa
    com.badlogic.gdx.graphics.g2d.TextureRegion fastW -> ab
    com.badlogic.gdx.graphics.g2d.TextureRegion fastB -> ac
    com.badlogic.gdx.graphics.g2d.TextureRegion onW -> ad
    com.badlogic.gdx.graphics.g2d.TextureRegion onB -> ae
    com.badlogic.gdx.graphics.g2d.TextureRegion offW -> af
    com.badlogic.gdx.graphics.g2d.TextureRegion offB -> ag
    com.badlogic.gdx.graphics.g2d.TextureRegion music -> ah
    com.badlogic.gdx.graphics.g2d.TextureRegion speed -> ai
    com.badlogic.gdx.graphics.g2d.TextureRegion level -> aj
    com.badlogic.gdx.graphics.g2d.TextureRegion sounds -> ak
    com.badlogic.gdx.graphics.g2d.TextureRegion textCursor -> al
    com.badlogic.gdx.graphics.g2d.TextureRegion overlay -> am
    com.badlogic.gdx.graphics.g2d.TextureRegion selector -> an
    com.badlogic.gdx.graphics.g2d.TextureRegion wizard0 -> ao
    com.badlogic.gdx.graphics.g2d.TextureRegion wizard1 -> ap
    com.badlogic.gdx.graphics.g2d.TextureRegion wizard2 -> aq
    com.badlogic.gdx.graphics.g2d.TextureRegion blueHomAlive0 -> ar
    com.badlogic.gdx.graphics.g2d.TextureRegion blueHomAlive1 -> as
    com.badlogic.gdx.graphics.g2d.TextureRegion blueHomAlive2 -> at
    com.badlogic.gdx.graphics.g2d.TextureRegion redHomAlive0 -> au
    com.badlogic.gdx.graphics.g2d.TextureRegion redHomAlive1 -> av
    com.badlogic.gdx.graphics.g2d.TextureRegion redHomAlive2 -> aw
    com.badlogic.gdx.graphics.g2d.TextureRegion yellowHomAlive0 -> ax
    com.badlogic.gdx.graphics.g2d.TextureRegion yellowHomAlive1 -> ay
    com.badlogic.gdx.graphics.g2d.TextureRegion yellowHomAlive2 -> az
    com.badlogic.gdx.graphics.g2d.TextureRegion blueHomDead0 -> aA
    com.badlogic.gdx.graphics.g2d.TextureRegion blueHomDead1 -> aB
    com.badlogic.gdx.graphics.g2d.TextureRegion blueHomDead2 -> aC
    com.badlogic.gdx.graphics.g2d.TextureRegion redHomDead0 -> aD
    com.badlogic.gdx.graphics.g2d.TextureRegion redHomDead1 -> aE
    com.badlogic.gdx.graphics.g2d.TextureRegion redHomDead2 -> aF
    com.badlogic.gdx.graphics.g2d.TextureRegion yellowHomDead0 -> aG
    com.badlogic.gdx.graphics.g2d.TextureRegion yellowHomDead1 -> aH
    com.badlogic.gdx.graphics.g2d.TextureRegion yellowHomDead2 -> aI
    com.badlogic.gdx.graphics.g2d.TextureRegion blueSpellAlive0 -> aJ
    com.badlogic.gdx.graphics.g2d.TextureRegion blueSpellAlive1 -> aK
    com.badlogic.gdx.graphics.g2d.TextureRegion blueSpellAlive2 -> aL
    com.badlogic.gdx.graphics.g2d.TextureRegion redSpellAlive0 -> aM
    com.badlogic.gdx.graphics.g2d.TextureRegion redSpellAlive1 -> aN
    com.badlogic.gdx.graphics.g2d.TextureRegion redSpellAlive2 -> aO
    com.badlogic.gdx.graphics.g2d.TextureRegion yellowSpellAlive0 -> aP
    com.badlogic.gdx.graphics.g2d.TextureRegion yellowSpellAlive1 -> aQ
    com.badlogic.gdx.graphics.g2d.TextureRegion yellowSpellAlive2 -> aR
    com.badlogic.gdx.graphics.g2d.TextureRegion blueSpellDead0 -> aS
    com.badlogic.gdx.graphics.g2d.TextureRegion blueSpellDead1 -> aT
    com.badlogic.gdx.graphics.g2d.TextureRegion blueSpellDead2 -> aU
    com.badlogic.gdx.graphics.g2d.TextureRegion redSpellDead0 -> aV
    com.badlogic.gdx.graphics.g2d.TextureRegion redSpellDead1 -> aW
    com.badlogic.gdx.graphics.g2d.TextureRegion redSpellDead2 -> aX
    com.badlogic.gdx.graphics.g2d.TextureRegion yellowSpellDead0 -> aY
    com.badlogic.gdx.graphics.g2d.TextureRegion yellowSpellDead1 -> aZ
    com.badlogic.gdx.graphics.g2d.TextureRegion yellowSpellDead2 -> ba
    com.badlogic.gdx.graphics.g2d.TextureRegion logo -> bb
    com.jamiltron.homunculus.Animation wizardAnim -> bc
    com.jamiltron.homunculus.Animation blueHomLiveAnim -> bd
    com.jamiltron.homunculus.Animation redHomLiveAnim -> be
    com.jamiltron.homunculus.Animation yellowHomLiveAnim -> bf
    com.jamiltron.homunculus.Animation blueHomDeadAnim -> bg
    com.jamiltron.homunculus.Animation redHomDeadAnim -> bh
    com.jamiltron.homunculus.Animation yellowHomDeadAnim -> bi
    com.jamiltron.homunculus.Animation blueSpellLiveAnim -> bj
    com.jamiltron.homunculus.Animation redSpellLiveAnim -> bk
    com.jamiltron.homunculus.Animation yellowSpellLiveAnim -> bl
    com.jamiltron.homunculus.Animation blueSpellDeadAnim -> bm
    com.jamiltron.homunculus.Animation redSpellDeadAnim -> bn
    com.jamiltron.homunculus.Animation yellowSpellDeadAnim -> bo
    float lastFontScaleX -> bw
    float lastFontScaleY -> bx
    java.util.Random random -> bp
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> bq
    java.lang.String settingsString -> by
    156:174:void loadScores(com.badlogic.gdx.files.FileHandle,java.util.List) -> a
    177:201:java.util.List getHighScores(boolean) -> a
    205:208:void scaleFont(float,float) -> a
    212:246:void writeHighScores(java.util.List,boolean) -> a
    249:283:com.jamiltron.homunculus.Settings getSettings() -> a
    288:303:void loadSettingsString(boolean) -> b
    307:331:void writeSettings(com.jamiltron.homunculus.Settings,boolean) -> a
    334:336:void loadMusic() -> b
    339:344:void loadSounds() -> c
    347:349:void loadFonts() -> d
    352:485:void loadImages() -> e
    488:489:void playSound(com.badlogic.gdx.audio.Sound) -> a
com.jamiltron.homunculus.BuildConfig -> com.jamiltron.homunculus.c:
    boolean DEBUG -> a
com.jamiltron.homunculus.HomunculusGame -> com.jamiltron.homunculus.d:
    com.jamiltron.homunculus.Settings settings -> a
    boolean desktopGame -> b
    java.util.List scores -> c
    com.jamiltron.homunculus.screen.MainMenu mainMenu -> d
    com.jamiltron.homunculus.screen.CreditsScreen creditsScreen -> e
    com.jamiltron.homunculus.screen.GameScreen gameScreen -> f
    com.jamiltron.homunculus.screen.HighScoreScreen highscoreScreen -> g
    com.jamiltron.homunculus.screen.InstructionScreen instructionScreen -> h
    com.jamiltron.homunculus.screen.SettingsScreen settingsScreen -> i
    32:33:void goToMainMenu() -> f
    36:38:void goToSettings() -> g
    41:42:void goToInstructions() -> h
    45:46:void goToHighScores() -> i
    49:50:void goToGame() -> j
    53:54:void goToCredits() -> k
    62:83:void create() -> a
com.jamiltron.homunculus.MainActivity -> com.jamiltron.homunculus.MainActivity:
    11:16:void onCreate(android.os.Bundle) -> onCreate
com.jamiltron.homunculus.R -> com.jamiltron.homunculus.e:
com.jamiltron.homunculus.R$attr -> com.jamiltron.homunculus.f:
com.jamiltron.homunculus.R$drawable -> com.jamiltron.homunculus.g:
    int ic_launcher -> a
com.jamiltron.homunculus.R$layout -> com.jamiltron.homunculus.h:
    int main -> a
com.jamiltron.homunculus.R$string -> com.jamiltron.homunculus.i:
    int app_name -> a
com.jamiltron.homunculus.Settings -> com.jamiltron.homunculus.j:
    int numHomunculi -> a
    com.jamiltron.homunculus.Settings$Speed speed -> b
    boolean musicOn -> c
    boolean soundOn -> d
    14:19:void setHomunculiNum(int) -> a
    22:29:void setSpeed(int) -> b
    34:35:void setMusicOn(boolean) -> a
    38:39:void setSoundOn(boolean) -> b
    42:42:int getHomunculiNum() -> a
    47:52:int getScoreModifier() -> b
    56:56:com.jamiltron.homunculus.Settings$Speed getSpeed() -> c
    60:60:boolean getMusicOn() -> d
    64:64:boolean getSoundOn() -> e
com.jamiltron.homunculus.Settings$Speed -> com.jamiltron.homunculus.k:
    com.jamiltron.homunculus.Settings$Speed SLOW -> a
    com.jamiltron.homunculus.Settings$Speed MED -> b
    com.jamiltron.homunculus.Settings$Speed FAST -> c
    com.jamiltron.homunculus.Settings$Speed[] ENUM$VALUES -> d
    1:1:com.jamiltron.homunculus.Settings$Speed[] values() -> values
    1:1:com.jamiltron.homunculus.Settings$Speed valueOf(java.lang.String) -> valueOf
com.jamiltron.homunculus.controller.WorldController -> com.jamiltron.homunculus.a.a:
    boolean nextLevel -> a
    com.jamiltron.homunculus.HomunculusGame game -> l
    com.jamiltron.homunculus.model.World world -> m
    com.jamiltron.homunculus.model.Spell activeSpell -> n
    com.jamiltron.homunculus.Settings settings -> o
    boolean unpausable -> b
    boolean destroying -> p
    boolean playSound -> q
    boolean check1 -> r
    boolean check2 -> s
    boolean keepChecking -> t
    float currentTime -> c
    float dropTime -> d
    float fastTime -> e
    float normalTime -> f
    float pauseTime -> g
    float rotateDelay -> h
    int drops -> i
    float SLOW_NORMAL -> u
    float SLOW_FAST -> v
    float MED_NORMAL -> w
    float MED_FAST -> x
    float FAST_NORMAL -> y
    float FAST_FAST -> z
    com.jamiltron.homunculus.util.JArray toDestroy -> j
    java.util.Map keys -> k
    62:71:void resetKeys() -> q
    74:75:void continuePress() -> r
    78:79:void continueRelease() -> s
    82:83:void leftPress() -> a
    86:87:void rightPress() -> b
    90:91:void rotrPress() -> c
    94:95:void rotlPress() -> d
    98:99:void dropPress() -> e
    102:103:void pausePress() -> f
    106:107:void quitPress() -> g
    110:111:void quitRelease() -> h
    114:115:void anyPress() -> i
    118:119:void leftRelease() -> j
    122:123:void rightRelease() -> k
    126:127:void rotrRelease() -> l
    130:131:void rotlRelease() -> m
    134:135:void dropRelease() -> n
    138:139:void pauseRelease() -> o
    142:143:void anyRelease() -> p
    147:157:void setSpeed() -> t
    162:179:void resetController(com.jamiltron.homunculus.model.World) -> a
    206:226:void updateOver() -> u
    229:246:void updatePaused() -> v
    249:258:void updateWon() -> w
    261:341:void update(float) -> a
    344:401:boolean updateDrops(float) -> b
    405:476:void updateMatches() -> x
    479:482:void playDrop() -> y
    485:488:void playMatch() -> z
    491:494:void playRotate() -> A
    497:502:void scoreUp() -> B
    504:696:void updateSpell(float) -> c
com.jamiltron.homunculus.controller.WorldController$Keys -> com.jamiltron.homunculus.a.b:
    com.jamiltron.homunculus.controller.WorldController$Keys LEFT -> a
    com.jamiltron.homunculus.controller.WorldController$Keys RIGHT -> b
    com.jamiltron.homunculus.controller.WorldController$Keys ROTR -> c
    com.jamiltron.homunculus.controller.WorldController$Keys ROTL -> d
    com.jamiltron.homunculus.controller.WorldController$Keys DROP -> e
    com.jamiltron.homunculus.controller.WorldController$Keys PAUSE -> f
    com.jamiltron.homunculus.controller.WorldController$Keys QUIT -> g
    com.jamiltron.homunculus.controller.WorldController$Keys ANY -> h
    com.jamiltron.homunculus.controller.WorldController$Keys CONTINUE -> i
    com.jamiltron.homunculus.controller.WorldController$Keys[] ENUM$VALUES -> j
    1:1:com.jamiltron.homunculus.controller.WorldController$Keys[] values() -> values
    1:1:com.jamiltron.homunculus.controller.WorldController$Keys valueOf(java.lang.String) -> valueOf
com.jamiltron.homunculus.model.Color -> com.jamiltron.homunculus.b.a:
    com.jamiltron.homunculus.model.Color BLUE -> a
    com.jamiltron.homunculus.model.Color RED -> b
    com.jamiltron.homunculus.model.Color YELLOW -> c
    com.jamiltron.homunculus.model.Color[] ENUM$VALUES -> d
    1:1:com.jamiltron.homunculus.model.Color[] values() -> values
    1:1:com.jamiltron.homunculus.model.Color valueOf(java.lang.String) -> valueOf
com.jamiltron.homunculus.model.Component -> com.jamiltron.homunculus.b.b:
    java.lang.Float WIDTH -> a
    java.lang.Float HEIGHT -> b
    java.lang.Float SPEED -> c
    float stateTime -> d
    float DYING_TIME -> e
    com.jamiltron.homunculus.model.Color color -> f
    boolean isDying -> g
    boolean isFalling -> h
    boolean isDead -> i
    32:39:void setProps(float,float,com.jamiltron.homunculus.model.Color) -> a
com.jamiltron.homunculus.model.Entity -> com.jamiltron.homunculus.b.c:
    com.badlogic.gdx.math.Vector2 pos -> j
com.jamiltron.homunculus.model.Homunculus -> com.jamiltron.homunculus.b.d:
    java.lang.Float WIDTH -> a
    java.lang.Float HEIGHT -> b
    float stateTime -> c
    float DYING_TIME -> d
    boolean isDying -> e
    com.jamiltron.homunculus.model.Color color -> f
    26:31:void setProps(java.lang.Float,java.lang.Float,com.jamiltron.homunculus.model.Color) -> a
com.jamiltron.homunculus.model.Mob -> com.jamiltron.homunculus.b.e:
    com.badlogic.gdx.math.Vector2 vel -> k
    com.badlogic.gdx.math.Vector2 acc -> l
    16:17:void update$133aeb() -> a
com.jamiltron.homunculus.model.Spell -> com.jamiltron.homunculus.b.f:
    com.jamiltron.homunculus.model.Component component1 -> a
    com.jamiltron.homunculus.model.Component component2 -> b
    float pauseTime -> d
    float rotateTime -> e
    boolean isFalling -> c
    13:13:float getRotateTime() -> a
    17:18:void setRotateTime(float) -> a
    26:30:void setProps(com.jamiltron.homunculus.model.Component,com.jamiltron.homunculus.model.Component) -> a
    40:40:boolean isFlat() -> b
    44:44:boolean isStanding() -> c
    48:48:float top() -> k
    52:52:float bottom() -> d
    56:56:float left() -> l
    60:60:float right() -> m
    64:67:com.jamiltron.homunculus.model.Component bottomComponent() -> e
    72:75:com.jamiltron.homunculus.model.Component topComponent() -> f
    80:83:com.jamiltron.homunculus.model.Component leftComponent() -> g
    88:91:com.jamiltron.homunculus.model.Component rightComponent() -> h
    96:96:float getPauseTime() -> i
    100:118:void update(java.lang.Float) -> a
    121:127:void updateAnimation(float) -> b
    130:131:void setPauseTime(float) -> c
    134:139:com.badlogic.gdx.math.Vector2 getVel() -> j
    145:154:void setVel(java.lang.Float,java.lang.Float) -> a
com.jamiltron.homunculus.model.World -> com.jamiltron.homunculus.b.g:
    float BOX_X -> a
    float BOX_Y -> b
    float BOTTOM -> c
    float ENTRY_X -> d
    float ENTRY_Y -> e
    float COLS -> f
    float ROWS -> g
    float ROW_RAND_MIN -> h
    float X_MIN -> i
    float X_MAX -> j
    float Y_MIN -> k
    float Y_MAX -> l
    int highScore -> m
    boolean scoreBroken -> n
    com.jamiltron.homunculus.model.Color[] colors -> C
    int numHomunculi -> o
    com.badlogic.gdx.utils.Array homunculi -> p
    com.badlogic.gdx.utils.Array setSpells -> q
    com.badlogic.gdx.utils.Array deadHomunculi -> r
    com.badlogic.gdx.utils.Array deadSpells -> s
    com.jamiltron.homunculus.util.JArray colorGrid -> t
    com.badlogic.gdx.utils.Pool componentPool -> D
    com.badlogic.gdx.utils.Pool spellPool -> E
    com.badlogic.gdx.utils.Pool homunculusPool -> F
    com.jamiltron.homunculus.model.Homunculus tmpHomunculus -> G
    boolean paused -> u
    boolean won -> v
    boolean lost -> w
    boolean switchingSpells -> x
    boolean activeEntering -> y
    float activeEnteringTime -> z
    float switchingTime -> A
    int score -> B
    com.jamiltron.homunculus.model.Spell activeSpell -> H
    com.jamiltron.homunculus.model.Spell nextSpell -> I
    java.util.Random random -> J
    50:82:void update(float) -> a
    85:88:void updateHighScore() -> e
    91:95:void setSwitching() -> a
    98:98:com.jamiltron.homunculus.model.Color getGrid(float,float) -> a
    102:102:com.jamiltron.homunculus.model.Color getGrid(com.jamiltron.homunculus.model.Component) -> a
    106:107:void putGrid(float,float,com.jamiltron.homunculus.model.Color) -> a
    118:137:void setProps(int,int) -> a
    163:163:com.jamiltron.homunculus.model.Spell getNextSpell() -> b
    167:167:com.jamiltron.homunculus.model.Spell getActiveSpell() -> c
    171:183:void cleanUp() -> d
    186:196:com.jamiltron.homunculus.model.Spell generateSpell() -> f
    200:207:com.jamiltron.homunculus.model.Spell copySpell(com.jamiltron.homunculus.model.Spell) -> a
    211:218:void restSpell() -> g
    221:226:void activateSpell(com.jamiltron.homunculus.model.Spell) -> b
    229:267:void createWorld(int) -> a
    271:293:boolean insertCausesMatches() -> h
com.jamiltron.homunculus.model.World$1 -> com.jamiltron.homunculus.b.h:
    com.jamiltron.homunculus.model.World this$0 -> a
    143:143:com.jamiltron.homunculus.model.Component newObject() -> a
    1:1:java.lang.Object newObject() -> newObject
com.jamiltron.homunculus.model.World$2 -> com.jamiltron.homunculus.b.i:
    com.jamiltron.homunculus.model.World this$0 -> a
    149:149:com.jamiltron.homunculus.model.Spell newObject() -> a
    1:1:java.lang.Object newObject() -> newObject
com.jamiltron.homunculus.model.World$3 -> com.jamiltron.homunculus.b.j:
    com.jamiltron.homunculus.model.World this$0 -> a
    155:155:com.jamiltron.homunculus.model.Homunculus newObject() -> a
    1:1:java.lang.Object newObject() -> newObject
com.jamiltron.homunculus.screen.CreditsScreen -> com.jamiltron.homunculus.c.a:
    com.jamiltron.homunculus.HomunculusGame game -> a
    com.badlogic.gdx.graphics.g2d.SpriteBatch spriteBatch -> b
    com.badlogic.gdx.graphics.OrthographicCamera cam -> c
    int width -> d
    int height -> e
    float ppuX -> f
    float ppuY -> g
    float yDiff -> h
    float xDiff -> i
    float CAMERA_W -> j
    float CAMERA_H -> k
    float SCALE -> l
    float SMALL -> m
    float SMALLER -> n
    float CREDITS_W -> o
    float CREDITS_H -> p
    float CREDITS_Y -> q
    float CREDITS_X -> r
    float JUSTIN_W -> s
    float JUSTIN_H -> t
    float JUSTIN_X -> u
    float JUSTIN_Y -> v
    float PROGRAMMING_W -> w
    float PROGRAMMING_H -> x
    float PROGRAMMING_X -> y
    float PROGRAMMING_Y -> z
    float DONNA_W -> A
    float DONNA_H -> B
    float DONNA_X -> C
    float DONNA_Y -> D
    float ART_W -> E
    float ART_H -> F
    float ART_X -> G
    float ART_Y -> H
    float LION_W -> I
    float LION_H -> J
    float LION_X -> K
    float LION_Y -> L
    float MUSIC_W -> M
    float MUSIC_H -> N
    float MUSIC_X -> O
    float MUSIC_Y -> P
    68:69:boolean keyDown(int) -> a
    75:75:boolean keyUp(int) -> b
    81:81:boolean keyTyped(char) -> a
    87:87:boolean touchDown(int,int,int,int) -> a
    92:96:boolean touchUp(int,int,int,int) -> b
    103:103:boolean touchDragged(int,int,int) -> a
    108:108:boolean mouseMoved(int,int) -> a
    113:113:boolean scrolled(int) -> c
    118:124:void render(float) -> a
    127:139:void renderBackground() -> f
    142:149:void renderText() -> g
    153:163:void resize(int,int) -> b
    166:173:void setHeight() -> h
    177:179:void show() -> a
    183:185:void hide() -> b
    190:190:void pause() -> c
    194:195:void resume() -> d
    199:200:void dispose() -> e
com.jamiltron.homunculus.screen.GameScreen -> com.jamiltron.homunculus.c.b:
    com.jamiltron.homunculus.model.World world -> a
    com.badlogic.gdx.utils.Pool worldPool -> b
    com.jamiltron.homunculus.view.WorldRenderer renderer -> c
    com.jamiltron.homunculus.controller.WorldController controller -> d
    com.jamiltron.homunculus.HomunculusGame game -> e
    com.jamiltron.homunculus.Settings settings -> f
    boolean touching -> g
    boolean leftPressed -> h
    boolean rightPressed -> i
    boolean dropPressed -> j
    boolean rotrPressed -> k
    boolean rotlPressed -> l
    int highScore -> m
    float ppuX -> n
    float ppuY -> o
    float height -> p
    float lastX -> q
    float lastDragX -> r
    float CAMERA_W -> s
    float CAMERA_H -> t
    com.badlogic.gdx.scenes.scene2d.Stage stage -> u
    com.badlogic.gdx.scenes.scene2d.ui.TextField textfield -> v
    float LEFT_X -> w
    float LEFT_W -> x
    float LEFT_Y -> y
    float LEFT_H -> z
    float DOWN_X -> A
    float DOWN_W -> B
    float DOWN_Y -> C
    float DOWN_H -> D
    float RIGHT_X -> E
    float RIGHT_W -> F
    float RIGHT_Y -> G
    float RIGHT_H -> H
    float ROTR_X -> I
    float ROTR_W -> J
    float ROTR_Y -> K
    float ROTR_H -> L
    119:121:void dispose() -> e
    125:126:void hide() -> b
    130:165:boolean keyDown(int) -> a
    170:170:boolean keyTyped(char) -> a
    175:210:boolean keyUp(int) -> b
    215:215:boolean mouseMoved(int,int) -> a
    220:223:void pause() -> c
    227:275:void render(float) -> a
    279:286:void resize(int,int) -> b
    290:291:void resume() -> d
    295:295:boolean scrolled(int) -> c
    300:313:void show() -> a
    319:343:boolean touchDown(int,int,int,int) -> a
    350:366:boolean touchDragged(int,int,int) -> a
    373:392:boolean touchUp(int,int,int,int) -> b
    25:25:com.jamiltron.homunculus.model.World access$0(com.jamiltron.homunculus.screen.GameScreen) -> a
    29:29:com.jamiltron.homunculus.HomunculusGame access$1(com.jamiltron.homunculus.screen.GameScreen) -> b
com.jamiltron.homunculus.screen.GameScreen$1 -> com.jamiltron.homunculus.c.c:
    com.jamiltron.homunculus.screen.GameScreen this$0 -> a
    83:83:com.jamiltron.homunculus.model.World newObject() -> a
    1:1:java.lang.Object newObject() -> newObject
com.jamiltron.homunculus.screen.GameScreen$2 -> com.jamiltron.homunculus.c.d:
    com.jamiltron.homunculus.screen.GameScreen this$0 -> a
    com.jamiltron.homunculus.screen.GameScreen val$tmpGameScreen -> b
    98:113:void keyTyped(com.badlogic.gdx.scenes.scene2d.ui.TextField,char) -> a
com.jamiltron.homunculus.screen.HighScoreScreen -> com.jamiltron.homunculus.c.e:
    com.jamiltron.homunculus.HomunculusGame game -> a
    com.badlogic.gdx.graphics.g2d.SpriteBatch spriteBatch -> b
    com.badlogic.gdx.graphics.OrthographicCamera cam -> c
    int width -> d
    int height -> e
    float ppuX -> f
    float ppuY -> g
    float yDiff -> h
    float xDiff -> i
    float CAMERA_W -> j
    float CAMERA_H -> k
    float SCALE -> l
    float INSTRUCTIONS_W -> m
    float INSTRUCTIONS_H -> n
    float INSTRUCTIONS_Y -> o
    float INSTRUCTIONS_X -> p
    float TEXT_Y -> q
    float TEXT_X -> r
    46:47:boolean keyDown(int) -> a
    53:53:boolean keyUp(int) -> b
    59:59:boolean keyTyped(char) -> a
    65:65:boolean touchDown(int,int,int,int) -> a
    70:74:boolean touchUp(int,int,int,int) -> b
    81:81:boolean touchDragged(int,int,int) -> a
    87:87:boolean mouseMoved(int,int) -> a
    93:93:boolean scrolled(int) -> c
    98:104:void render(float) -> a
    107:109:void setHeight() -> f
    112:124:void renderBackground() -> g
    127:138:void renderText() -> h
    142:152:void resize(int,int) -> b
    156:157:void show() -> a
    161:163:void hide() -> b
    168:168:void pause() -> c
    173:173:void resume() -> d
    177:178:void dispose() -> e
com.jamiltron.homunculus.screen.InstructionScreen -> com.jamiltron.homunculus.c.f:
    com.jamiltron.homunculus.HomunculusGame game -> a
    com.badlogic.gdx.graphics.g2d.SpriteBatch spriteBatch -> b
    com.badlogic.gdx.graphics.OrthographicCamera cam -> c
    float ppuX -> d
    float ppuY -> e
    float width -> f
    float height -> g
    float yDiff -> h
    float xDiff -> i
    float CAMERA_W -> j
    float CAMERA_H -> k
    float SCALE -> l
    float INSTRUCTIONS_W -> m
    float INSTRUCTIONS_H -> n
    float INSTRUCTIONS_Y -> o
    float INSTRUCTIONS_X -> p
    float TEXT_Y -> q
    float TEXT_X -> r
    47:48:boolean keyDown(int) -> a
    54:54:boolean keyUp(int) -> b
    60:60:boolean keyTyped(char) -> a
    66:66:boolean touchDown(int,int,int,int) -> a
    71:75:boolean touchUp(int,int,int,int) -> b
    82:82:boolean touchDragged(int,int,int) -> a
    88:88:boolean mouseMoved(int,int) -> a
    94:94:boolean scrolled(int) -> c
    99:105:void render(float) -> a
    108:121:void renderBackground() -> f
    124:153:void renderText() -> g
    157:167:void resize(int,int) -> b
    170:172:void setHeight() -> h
    176:177:void show() -> a
    181:183:void hide() -> b
    187:188:void pause() -> c
    192:193:void resume() -> d
    197:198:void dispose() -> e
com.jamiltron.homunculus.screen.MainMenu -> com.jamiltron.homunculus.c.g:
    float arrowY -> a
    boolean over -> b
    com.jamiltron.homunculus.HomunculusGame game -> c
    com.badlogic.gdx.graphics.g2d.SpriteBatch spriteBatch -> d
    com.badlogic.gdx.graphics.OrthographicCamera cam -> e
    float ppuX -> f
    float ppuY -> g
    int height -> h
    int width -> i
    float yDiff -> j
    float xDiff -> k
    float CAMERA_W -> l
    float CAMERA_H -> m
    float LOGO_SCALE -> n
    float LOGO_W -> o
    float LOGO_H -> p
    float LOGO_X -> q
    float LOGO_Y -> r
    float YSPACE -> s
    float YBASE -> t
    float SCALE -> u
    float START_W -> v
    float START_H -> w
    float START_X -> x
    float START_Y -> y
    float INSTRUCTIONS_W -> z
    float INSTRUCTIONS_H -> A
    float INSTRUCTIONS_X -> B
    float INSTRUCTIONS_Y -> C
    float HIGHSCORES_W -> D
    float HIGHSCORES_H -> E
    float HIGHSCORES_X -> F
    float HIGHSCORES_Y -> G
    float CREDITS_W -> H
    float CREDITS_H -> I
    float CREDITS_X -> J
    float CREDITS_Y -> K
    float QUIT_W -> L
    float QUIT_H -> M
    float QUIT_X -> N
    float QUIT_Y -> O
    float AREA_H -> P
    boolean playSelectMove -> Q
    boolean playSelectEnter -> R
    com.badlogic.gdx.math.Rectangle startArea -> S
    com.badlogic.gdx.math.Rectangle instructionsArea -> T
    com.badlogic.gdx.math.Rectangle highscoresArea -> U
    com.badlogic.gdx.math.Rectangle creditsArea -> V
    com.badlogic.gdx.math.Rectangle quitArea -> W
    80:90:void setSize(int,int) -> c
    93:107:void setHeights() -> f
    111:171:boolean keyDown(int) -> a
    175:180:void draw$133aeb() -> g
    183:183:void renderCursor() -> h
    186:199:void renderBackground() -> i
    202:238:void renderText() -> j
    241:245:void update$133aeb() -> k
    249:249:boolean keyUp(int) -> b
    255:255:boolean keyTyped(char) -> a
    260:263:boolean touchDown(int,int,int,int) -> a
    269:293:boolean touchUp(int,int,int,int) -> b
    300:300:boolean touchDragged(int,int,int) -> a
    306:306:boolean mouseMoved(int,int) -> a
    312:312:boolean scrolled(int) -> c
    317:325:void render(float) -> a
    329:330:void resize(int,int) -> b
    334:335:void show() -> a
    339:341:void hide() -> b
    345:347:void pause() -> c
    351:352:void resume() -> d
    356:357:void dispose() -> e
com.jamiltron.homunculus.screen.SettingsScreen -> com.jamiltron.homunculus.c.h:
    com.jamiltron.homunculus.HomunculusGame game -> a
    com.badlogic.gdx.graphics.g2d.SpriteBatch spriteBatch -> b
    com.badlogic.gdx.graphics.OrthographicCamera cam -> c
    int cursorLevel -> d
    float ppuX -> e
    float ppuY -> f
    float xDiff -> g
    float yDiff -> h
    int width -> i
    int height -> j
    int level -> k
    int speed -> l
    boolean music -> m
    boolean sound -> n
    boolean showSelector -> o
    boolean playSelectMove -> p
    float YSPACE -> q
    float CAMERA_W -> r
    float CAMERA_H -> s
    float SETTINGS_SCALE -> t
    float ARROW_SCALE -> u
    float STEP -> v
    float SETTINGS_W -> w
    float SETTINGS_H -> x
    float SETTINGS_Y -> y
    float SETTINGS_X -> z
    float HEADINGS_SCALE -> A
    float OPTIONS_SCALE -> B
    float LEVEL_X -> C
    float LEVEL_Y -> D
    float LEVEL_W -> E
    float LEVEL_H -> F
    float SPEED_X -> G
    float SPEED_Y -> H
    float SPEED_W -> I
    float SPEED_H -> J
    float SLOW_X -> K
    float SLOW_Y -> L
    float SLOW_W -> M
    float SLOW_H -> N
    float MED_X -> O
    float MED_Y -> P
    float MED_W -> Q
    float MED_H -> R
    float FAST_X -> S
    float FAST_Y -> T
    float FAST_W -> U
    float FAST_H -> V
    float SOUND_X -> W
    float SOUND_Y -> X
    float SOUND_W -> Y
    float SOUND_H -> Z
    float ON_W -> aa
    float ON_H -> ab
    float ON1_X -> ac
    float ON1_Y -> ad
    float OFF1_X -> ae
    float OFF1_Y -> af
    float OFF_W -> ag
    float OFF_H -> ah
    float MUSIC_X -> ai
    float MUSIC_Y -> aj
    float MUSIC_W -> ak
    float MUSIC_H -> al
    float ON2_X -> am
    float ON2_Y -> an
    float OFF2_X -> ao
    float OFF2_Y -> ap
    float START_Y -> aq
    float START_W -> ar
    float START_H -> as
    float START_X -> at
    float LEFT_ARROW_X -> au
    float LEFT_ARROW_Y -> av
    float LEFT_ARROW_W -> aw
    float LEFT_ARROW_H -> ax
    float RIGHT_ARROW_X -> ay
    float RIGHT_ARROW_Y -> az
    float RIGHT_ARROW_W -> aA
    float RIGHT_ARROW_H -> aB
    float NUM_X -> aC
    float NUM_Y -> aD
    java.lang.StringBuffer tmpString -> aE
    142:144:void reset() -> f
    148:149:void dispose() -> e
    153:154:void hide() -> b
    158:222:boolean keyDown(int) -> a
    228:228:boolean keyTyped(char) -> a
    233:233:boolean keyUp(int) -> b
    238:238:boolean mouseMoved(int,int) -> a
    243:244:void pause() -> c
    248:255:void render(float) -> a
    258:270:void renderBackground() -> g
    273:307:void renderCursors() -> h
    312:390:void renderText() -> i
    394:405:void resize(int,int) -> b
    408:425:void setHeight() -> j
    429:430:void resume() -> d
    435:435:boolean scrolled(int) -> c
    440:442:void show() -> a
    448:448:boolean touchDown(int,int,int,int) -> a
    454:454:boolean touchDragged(int,int,int) -> a
    460:513:boolean touchUp(int,int,int,int) -> b
    518:518:boolean overArea(float,float,float,float,float,float) -> a
com.jamiltron.homunculus.util.JArray -> com.jamiltron.homunculus.d.a:
    int cols -> d
    int rows -> e
    26:28:java.lang.Object get(float,float) -> a
    32:35:void set(float,float,java.lang.Object) -> a
    39:44:void clear() -> d
com.jamiltron.homunculus.view.WorldRenderer -> com.jamiltron.homunculus.e.a:
    float CAMERA_W -> a
    float CAMERA_H -> b
    com.jamiltron.homunculus.model.World world -> c
    com.jamiltron.homunculus.HomunculusGame game -> d
    com.badlogic.gdx.graphics.OrthographicCamera cam -> e
    com.badlogic.gdx.graphics.g2d.SpriteBatch spriteBatch -> f
    float GAMEOVER_SCALE -> g
    float GAMEOVER_W -> h
    float GAMEOVER_H -> i
    float GAMEOVER_X -> j
    float GAMEOVER_Y -> k
    float CONTINUE_SCALE -> l
    float PRESS_W -> m
    float PRESS_H -> n
    float PRESS_X -> o
    float PRESS_Y -> p
    float TAP_W -> q
    float TAP_H -> r
    float TAP_X -> s
    float TAP_Y -> t
    float CONTINUE_W -> u
    float CONTINUE_H -> v
    float CONTINUE_X -> w
    float CONTINUE_Y -> x
    float COMPLETE_W -> y
    float COMPLETE_H -> z
    float COMPLETE_X -> A
    float COMPLETE_Y -> B
    float HIGHSCORE_W -> C
    float HIGHSCORE_H -> D
    float HIGHSCORE_X -> E
    float HIGHSCORE_Y -> F
    float PAUSED_W -> G
    float PAUSED_H -> H
    float PAUSED_X -> I
    float PAUSED_Y -> J
    float ENTERNAME_W -> K
    float ENTERNAME_H -> L
    float ENTERNAME_X -> M
    float ENTERNAME_Y -> N
    float ppuX -> O
    float ppuY -> P
    float yDiff -> Q
    float xDiff -> R
    int width -> S
    int height -> T
    java.lang.String tmpString -> U
    com.badlogic.gdx.graphics.g2d.TextureRegion keyFrame -> V
    com.jamiltron.homunculus.model.Component component -> W
    71:81:void setSize(int,int) -> a
    94:95:void resetRenderer(com.jamiltron.homunculus.model.World) -> a
    98:105:void render() -> a
    108:114:void renderBottom() -> b
    117:145:void renderText() -> c
    148:157:void renderMessages() -> d
    160:187:void renderBackground() -> e
    190:213:void renderHomunculi() -> f
    216:236:void renderSpells() -> g
    240:266:void renderEnteringActiveSpell(com.jamiltron.homunculus.model.Spell) -> a
    269:291:void renderExitingSpell(com.jamiltron.homunculus.model.Spell) -> b
    294:316:void renderEnteringSpell(com.jamiltron.homunculus.model.Spell) -> c
    319:323:void renderSpell(com.jamiltron.homunculus.model.Spell) -> d
    326:349:void renderComponent(com.jamiltron.homunculus.model.Component) -> a
